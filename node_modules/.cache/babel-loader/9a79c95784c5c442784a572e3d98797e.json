{"remainingRequest":"/Users/id-repair/Documents/SEOL/4c-dashboard/node_modules/babel-loader/lib/index.js!/Users/id-repair/Documents/SEOL/4c-dashboard/node_modules/echarts/lib/coord/geo/parseGeoJson.js","dependencies":[{"path":"/Users/id-repair/Documents/SEOL/4c-dashboard/node_modules/echarts/lib/coord/geo/parseGeoJson.js","mtime":499162500000},{"path":"/Users/id-repair/Documents/SEOL/4c-dashboard/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/id-repair/Documents/SEOL/4c-dashboard/node_modules/babel-loader/lib/index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:cmVxdWlyZSgiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5Lm1hcC5qcyIpOwoKcmVxdWlyZSgiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmZpbHRlci5qcyIpOwoKcmVxdWlyZSgiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LnNsaWNlLmpzIik7CgovKgoqIExpY2Vuc2VkIHRvIHRoZSBBcGFjaGUgU29mdHdhcmUgRm91bmRhdGlvbiAoQVNGKSB1bmRlciBvbmUKKiBvciBtb3JlIGNvbnRyaWJ1dG9yIGxpY2Vuc2UgYWdyZWVtZW50cy4gIFNlZSB0aGUgTk9USUNFIGZpbGUKKiBkaXN0cmlidXRlZCB3aXRoIHRoaXMgd29yayBmb3IgYWRkaXRpb25hbCBpbmZvcm1hdGlvbgoqIHJlZ2FyZGluZyBjb3B5cmlnaHQgb3duZXJzaGlwLiAgVGhlIEFTRiBsaWNlbnNlcyB0aGlzIGZpbGUKKiB0byB5b3UgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlCiogIkxpY2Vuc2UiKTsgeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZQoqIHdpdGggdGhlIExpY2Vuc2UuICBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXQKKgoqICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wCioKKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsCiogc29mdHdhcmUgZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4KKiAiQVMgSVMiIEJBU0lTLCBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkKKiBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLiAgU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUKKiBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kIGxpbWl0YXRpb25zCiogdW5kZXIgdGhlIExpY2Vuc2UuCiovCnZhciB6clV0aWwgPSByZXF1aXJlKCJ6cmVuZGVyL2xpYi9jb3JlL3V0aWwiKTsKCnZhciBSZWdpb24gPSByZXF1aXJlKCIuL1JlZ2lvbiIpOwovKgoqIExpY2Vuc2VkIHRvIHRoZSBBcGFjaGUgU29mdHdhcmUgRm91bmRhdGlvbiAoQVNGKSB1bmRlciBvbmUKKiBvciBtb3JlIGNvbnRyaWJ1dG9yIGxpY2Vuc2UgYWdyZWVtZW50cy4gIFNlZSB0aGUgTk9USUNFIGZpbGUKKiBkaXN0cmlidXRlZCB3aXRoIHRoaXMgd29yayBmb3IgYWRkaXRpb25hbCBpbmZvcm1hdGlvbgoqIHJlZ2FyZGluZyBjb3B5cmlnaHQgb3duZXJzaGlwLiAgVGhlIEFTRiBsaWNlbnNlcyB0aGlzIGZpbGUKKiB0byB5b3UgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlCiogIkxpY2Vuc2UiKTsgeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZQoqIHdpdGggdGhlIExpY2Vuc2UuICBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXQKKgoqICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wCioKKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsCiogc29mdHdhcmUgZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4KKiAiQVMgSVMiIEJBU0lTLCBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkKKiBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLiAgU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUKKiBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kIGxpbWl0YXRpb25zCiogdW5kZXIgdGhlIExpY2Vuc2UuCiovCgovKioKICogUGFyc2UgYW5kIGRlY29kZSBnZW8ganNvbgogKiBAbW9kdWxlIGVjaGFydHMvY29vcmQvZ2VvL3BhcnNlR2VvSnNvbgogKi8KCgpmdW5jdGlvbiBkZWNvZGUoanNvbikgewogIGlmICghanNvbi5VVEY4RW5jb2RpbmcpIHsKICAgIHJldHVybiBqc29uOwogIH0KCiAgdmFyIGVuY29kZVNjYWxlID0ganNvbi5VVEY4U2NhbGU7CgogIGlmIChlbmNvZGVTY2FsZSA9PSBudWxsKSB7CiAgICBlbmNvZGVTY2FsZSA9IDEwMjQ7CiAgfQoKICB2YXIgZmVhdHVyZXMgPSBqc29uLmZlYXR1cmVzOwoKICBmb3IgKHZhciBmID0gMDsgZiA8IGZlYXR1cmVzLmxlbmd0aDsgZisrKSB7CiAgICB2YXIgZmVhdHVyZSA9IGZlYXR1cmVzW2ZdOwogICAgdmFyIGdlb21ldHJ5ID0gZmVhdHVyZS5nZW9tZXRyeTsKICAgIHZhciBjb29yZGluYXRlcyA9IGdlb21ldHJ5LmNvb3JkaW5hdGVzOwogICAgdmFyIGVuY29kZU9mZnNldHMgPSBnZW9tZXRyeS5lbmNvZGVPZmZzZXRzOwoKICAgIGZvciAodmFyIGMgPSAwOyBjIDwgY29vcmRpbmF0ZXMubGVuZ3RoOyBjKyspIHsKICAgICAgdmFyIGNvb3JkaW5hdGUgPSBjb29yZGluYXRlc1tjXTsKCiAgICAgIGlmIChnZW9tZXRyeS50eXBlID09PSAnUG9seWdvbicpIHsKICAgICAgICBjb29yZGluYXRlc1tjXSA9IGRlY29kZVBvbHlnb24oY29vcmRpbmF0ZSwgZW5jb2RlT2Zmc2V0c1tjXSwgZW5jb2RlU2NhbGUpOwogICAgICB9IGVsc2UgaWYgKGdlb21ldHJ5LnR5cGUgPT09ICdNdWx0aVBvbHlnb24nKSB7CiAgICAgICAgZm9yICh2YXIgYzIgPSAwOyBjMiA8IGNvb3JkaW5hdGUubGVuZ3RoOyBjMisrKSB7CiAgICAgICAgICB2YXIgcG9seWdvbiA9IGNvb3JkaW5hdGVbYzJdOwogICAgICAgICAgY29vcmRpbmF0ZVtjMl0gPSBkZWNvZGVQb2x5Z29uKHBvbHlnb24sIGVuY29kZU9mZnNldHNbY11bYzJdLCBlbmNvZGVTY2FsZSk7CiAgICAgICAgfQogICAgICB9CiAgICB9CiAgfSAvLyBIYXMgYmVlbiBkZWNvZGVkCgoKICBqc29uLlVURjhFbmNvZGluZyA9IGZhbHNlOwogIHJldHVybiBqc29uOwp9CgpmdW5jdGlvbiBkZWNvZGVQb2x5Z29uKGNvb3JkaW5hdGUsIGVuY29kZU9mZnNldHMsIGVuY29kZVNjYWxlKSB7CiAgdmFyIHJlc3VsdCA9IFtdOwogIHZhciBwcmV2WCA9IGVuY29kZU9mZnNldHNbMF07CiAgdmFyIHByZXZZID0gZW5jb2RlT2Zmc2V0c1sxXTsKCiAgZm9yICh2YXIgaSA9IDA7IGkgPCBjb29yZGluYXRlLmxlbmd0aDsgaSArPSAyKSB7CiAgICB2YXIgeCA9IGNvb3JkaW5hdGUuY2hhckNvZGVBdChpKSAtIDY0OwogICAgdmFyIHkgPSBjb29yZGluYXRlLmNoYXJDb2RlQXQoaSArIDEpIC0gNjQ7IC8vIFppZ1phZyBkZWNvZGluZwoKICAgIHggPSB4ID4+IDEgXiAtKHggJiAxKTsKICAgIHkgPSB5ID4+IDEgXiAtKHkgJiAxKTsgLy8gRGVsdGEgZGVvY2RpbmcKCiAgICB4ICs9IHByZXZYOwogICAgeSArPSBwcmV2WTsKICAgIHByZXZYID0geDsKICAgIHByZXZZID0geTsgLy8gRGVxdWFudGl6ZQoKICAgIHJlc3VsdC5wdXNoKFt4IC8gZW5jb2RlU2NhbGUsIHkgLyBlbmNvZGVTY2FsZV0pOwogIH0KCiAgcmV0dXJuIHJlc3VsdDsKfQovKioKICogQGFsaWFzIG1vZHVsZTplY2hhcnRzL2Nvb3JkL2dlby9wYXJzZUdlb0pzb24KICogQHBhcmFtIHtPYmplY3R9IGdlb0pzb24KICogQHBhcmFtIHtzdHJpbmd9IG5hbWVQcm9wZXJ0eQogKiBAcmV0dXJuIHttb2R1bGU6enJlbmRlci9jb250YWluZXIvR3JvdXB9CiAqLwoKCmZ1bmN0aW9uIF9kZWZhdWx0KGdlb0pzb24sIG5hbWVQcm9wZXJ0eSkgewogIGRlY29kZShnZW9Kc29uKTsKICByZXR1cm4genJVdGlsLm1hcCh6clV0aWwuZmlsdGVyKGdlb0pzb24uZmVhdHVyZXMsIGZ1bmN0aW9uIChmZWF0dXJlT2JqKSB7CiAgICAvLyBPdXRwdXQgb2YgbWFwc2hhcGVyIG1heSBoYXZlIGdlb21ldHJ5IG51bGwKICAgIHJldHVybiBmZWF0dXJlT2JqLmdlb21ldHJ5ICYmIGZlYXR1cmVPYmoucHJvcGVydGllcyAmJiBmZWF0dXJlT2JqLmdlb21ldHJ5LmNvb3JkaW5hdGVzLmxlbmd0aCA+IDA7CiAgfSksIGZ1bmN0aW9uIChmZWF0dXJlT2JqKSB7CiAgICB2YXIgcHJvcGVydGllcyA9IGZlYXR1cmVPYmoucHJvcGVydGllczsKICAgIHZhciBnZW8gPSBmZWF0dXJlT2JqLmdlb21ldHJ5OwogICAgdmFyIGNvb3JkaW5hdGVzID0gZ2VvLmNvb3JkaW5hdGVzOwogICAgdmFyIGdlb21ldHJpZXMgPSBbXTsKCiAgICBpZiAoZ2VvLnR5cGUgPT09ICdQb2x5Z29uJykgewogICAgICBnZW9tZXRyaWVzLnB1c2goewogICAgICAgIHR5cGU6ICdwb2x5Z29uJywKICAgICAgICAvLyBBY2NvcmRpbmcgdG8gdGhlIEdlb0pTT04gc3BlY2lmaWNhdGlvbi4KICAgICAgICAvLyBGaXJzdCBtdXN0IGJlIGV4dGVyaW9yLCBhbmQgdGhlIHJlc3QgYXJlIGFsbCBpbnRlcmlvcihob2xlcykuCiAgICAgICAgZXh0ZXJpb3I6IGNvb3JkaW5hdGVzWzBdLAogICAgICAgIGludGVyaW9yczogY29vcmRpbmF0ZXMuc2xpY2UoMSkKICAgICAgfSk7CiAgICB9CgogICAgaWYgKGdlby50eXBlID09PSAnTXVsdGlQb2x5Z29uJykgewogICAgICB6clV0aWwuZWFjaChjb29yZGluYXRlcywgZnVuY3Rpb24gKGl0ZW0pIHsKICAgICAgICBpZiAoaXRlbVswXSkgewogICAgICAgICAgZ2VvbWV0cmllcy5wdXNoKHsKICAgICAgICAgICAgdHlwZTogJ3BvbHlnb24nLAogICAgICAgICAgICBleHRlcmlvcjogaXRlbVswXSwKICAgICAgICAgICAgaW50ZXJpb3JzOiBpdGVtLnNsaWNlKDEpCiAgICAgICAgICB9KTsKICAgICAgICB9CiAgICAgIH0pOwogICAgfQoKICAgIHZhciByZWdpb24gPSBuZXcgUmVnaW9uKHByb3BlcnRpZXNbbmFtZVByb3BlcnR5IHx8ICduYW1lJ10sIGdlb21ldHJpZXMsIHByb3BlcnRpZXMuY3ApOwogICAgcmVnaW9uLnByb3BlcnRpZXMgPSBwcm9wZXJ0aWVzOwogICAgcmV0dXJuIHJlZ2lvbjsKICB9KTsKfQoKbW9kdWxlLmV4cG9ydHMgPSBfZGVmYXVsdDs="},{"version":3,"sources":["/Users/id-repair/Documents/SEOL/4c-dashboard/node_modules/echarts/lib/coord/geo/parseGeoJson.js"],"names":["zrUtil","require","Region","decode","json","UTF8Encoding","encodeScale","UTF8Scale","features","f","length","feature","geometry","coordinates","encodeOffsets","c","coordinate","type","decodePolygon","c2","polygon","result","prevX","prevY","i","x","charCodeAt","y","push","_default","geoJson","nameProperty","map","filter","featureObj","properties","geo","geometries","exterior","interiors","slice","each","item","region","cp","module","exports"],"mappings":";;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,IAAIA,MAAM,GAAGC,OAAO,CAAC,uBAAD,CAApB;;AAEA,IAAIC,MAAM,GAAGD,OAAO,CAAC,UAAD,CAApB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AACA,SAASE,MAAT,CAAgBC,IAAhB,EAAsB;AACpB,MAAI,CAACA,IAAI,CAACC,YAAV,EAAwB;AACtB,WAAOD,IAAP;AACD;;AAED,MAAIE,WAAW,GAAGF,IAAI,CAACG,SAAvB;;AAEA,MAAID,WAAW,IAAI,IAAnB,EAAyB;AACvBA,IAAAA,WAAW,GAAG,IAAd;AACD;;AAED,MAAIE,QAAQ,GAAGJ,IAAI,CAACI,QAApB;;AAEA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,QAAQ,CAACE,MAA7B,EAAqCD,CAAC,EAAtC,EAA0C;AACxC,QAAIE,OAAO,GAAGH,QAAQ,CAACC,CAAD,CAAtB;AACA,QAAIG,QAAQ,GAAGD,OAAO,CAACC,QAAvB;AACA,QAAIC,WAAW,GAAGD,QAAQ,CAACC,WAA3B;AACA,QAAIC,aAAa,GAAGF,QAAQ,CAACE,aAA7B;;AAEA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,WAAW,CAACH,MAAhC,EAAwCK,CAAC,EAAzC,EAA6C;AAC3C,UAAIC,UAAU,GAAGH,WAAW,CAACE,CAAD,CAA5B;;AAEA,UAAIH,QAAQ,CAACK,IAAT,KAAkB,SAAtB,EAAiC;AAC/BJ,QAAAA,WAAW,CAACE,CAAD,CAAX,GAAiBG,aAAa,CAACF,UAAD,EAAaF,aAAa,CAACC,CAAD,CAA1B,EAA+BT,WAA/B,CAA9B;AACD,OAFD,MAEO,IAAIM,QAAQ,CAACK,IAAT,KAAkB,cAAtB,EAAsC;AAC3C,aAAK,IAAIE,EAAE,GAAG,CAAd,EAAiBA,EAAE,GAAGH,UAAU,CAACN,MAAjC,EAAyCS,EAAE,EAA3C,EAA+C;AAC7C,cAAIC,OAAO,GAAGJ,UAAU,CAACG,EAAD,CAAxB;AACAH,UAAAA,UAAU,CAACG,EAAD,CAAV,GAAiBD,aAAa,CAACE,OAAD,EAAUN,aAAa,CAACC,CAAD,CAAb,CAAiBI,EAAjB,CAAV,EAAgCb,WAAhC,CAA9B;AACD;AACF;AACF;AACF,GA/BmB,CA+BlB;;;AAGFF,EAAAA,IAAI,CAACC,YAAL,GAAoB,KAApB;AACA,SAAOD,IAAP;AACD;;AAED,SAASc,aAAT,CAAuBF,UAAvB,EAAmCF,aAAnC,EAAkDR,WAAlD,EAA+D;AAC7D,MAAIe,MAAM,GAAG,EAAb;AACA,MAAIC,KAAK,GAAGR,aAAa,CAAC,CAAD,CAAzB;AACA,MAAIS,KAAK,GAAGT,aAAa,CAAC,CAAD,CAAzB;;AAEA,OAAK,IAAIU,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGR,UAAU,CAACN,MAA/B,EAAuCc,CAAC,IAAI,CAA5C,EAA+C;AAC7C,QAAIC,CAAC,GAAGT,UAAU,CAACU,UAAX,CAAsBF,CAAtB,IAA2B,EAAnC;AACA,QAAIG,CAAC,GAAGX,UAAU,CAACU,UAAX,CAAsBF,CAAC,GAAG,CAA1B,IAA+B,EAAvC,CAF6C,CAEF;;AAE3CC,IAAAA,CAAC,GAAGA,CAAC,IAAI,CAAL,GAAS,EAAEA,CAAC,GAAG,CAAN,CAAb;AACAE,IAAAA,CAAC,GAAGA,CAAC,IAAI,CAAL,GAAS,EAAEA,CAAC,GAAG,CAAN,CAAb,CAL6C,CAKtB;;AAEvBF,IAAAA,CAAC,IAAIH,KAAL;AACAK,IAAAA,CAAC,IAAIJ,KAAL;AACAD,IAAAA,KAAK,GAAGG,CAAR;AACAF,IAAAA,KAAK,GAAGI,CAAR,CAV6C,CAUlC;;AAEXN,IAAAA,MAAM,CAACO,IAAP,CAAY,CAACH,CAAC,GAAGnB,WAAL,EAAkBqB,CAAC,GAAGrB,WAAtB,CAAZ;AACD;;AAED,SAAOe,MAAP;AACD;AACD;AACA;AACA;AACA;AACA;AACA;;;AAGA,SAASQ,QAAT,CAAkBC,OAAlB,EAA2BC,YAA3B,EAAyC;AACvC5B,EAAAA,MAAM,CAAC2B,OAAD,CAAN;AACA,SAAO9B,MAAM,CAACgC,GAAP,CAAWhC,MAAM,CAACiC,MAAP,CAAcH,OAAO,CAACtB,QAAtB,EAAgC,UAAU0B,UAAV,EAAsB;AACtE;AACA,WAAOA,UAAU,CAACtB,QAAX,IAAuBsB,UAAU,CAACC,UAAlC,IAAgDD,UAAU,CAACtB,QAAX,CAAoBC,WAApB,CAAgCH,MAAhC,GAAyC,CAAhG;AACD,GAHiB,CAAX,EAGH,UAAUwB,UAAV,EAAsB;AACxB,QAAIC,UAAU,GAAGD,UAAU,CAACC,UAA5B;AACA,QAAIC,GAAG,GAAGF,UAAU,CAACtB,QAArB;AACA,QAAIC,WAAW,GAAGuB,GAAG,CAACvB,WAAtB;AACA,QAAIwB,UAAU,GAAG,EAAjB;;AAEA,QAAID,GAAG,CAACnB,IAAJ,KAAa,SAAjB,EAA4B;AAC1BoB,MAAAA,UAAU,CAACT,IAAX,CAAgB;AACdX,QAAAA,IAAI,EAAE,SADQ;AAEd;AACA;AACAqB,QAAAA,QAAQ,EAAEzB,WAAW,CAAC,CAAD,CAJP;AAKd0B,QAAAA,SAAS,EAAE1B,WAAW,CAAC2B,KAAZ,CAAkB,CAAlB;AALG,OAAhB;AAOD;;AAED,QAAIJ,GAAG,CAACnB,IAAJ,KAAa,cAAjB,EAAiC;AAC/BjB,MAAAA,MAAM,CAACyC,IAAP,CAAY5B,WAAZ,EAAyB,UAAU6B,IAAV,EAAgB;AACvC,YAAIA,IAAI,CAAC,CAAD,CAAR,EAAa;AACXL,UAAAA,UAAU,CAACT,IAAX,CAAgB;AACdX,YAAAA,IAAI,EAAE,SADQ;AAEdqB,YAAAA,QAAQ,EAAEI,IAAI,CAAC,CAAD,CAFA;AAGdH,YAAAA,SAAS,EAAEG,IAAI,CAACF,KAAL,CAAW,CAAX;AAHG,WAAhB;AAKD;AACF,OARD;AASD;;AAED,QAAIG,MAAM,GAAG,IAAIzC,MAAJ,CAAWiC,UAAU,CAACJ,YAAY,IAAI,MAAjB,CAArB,EAA+CM,UAA/C,EAA2DF,UAAU,CAACS,EAAtE,CAAb;AACAD,IAAAA,MAAM,CAACR,UAAP,GAAoBA,UAApB;AACA,WAAOQ,MAAP;AACD,GAlCM,CAAP;AAmCD;;AAEDE,MAAM,CAACC,OAAP,GAAiBjB,QAAjB","sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar Region = require(\"./Region\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Parse and decode geo json\n * @module echarts/coord/geo/parseGeoJson\n */\nfunction decode(json) {\n  if (!json.UTF8Encoding) {\n    return json;\n  }\n\n  var encodeScale = json.UTF8Scale;\n\n  if (encodeScale == null) {\n    encodeScale = 1024;\n  }\n\n  var features = json.features;\n\n  for (var f = 0; f < features.length; f++) {\n    var feature = features[f];\n    var geometry = feature.geometry;\n    var coordinates = geometry.coordinates;\n    var encodeOffsets = geometry.encodeOffsets;\n\n    for (var c = 0; c < coordinates.length; c++) {\n      var coordinate = coordinates[c];\n\n      if (geometry.type === 'Polygon') {\n        coordinates[c] = decodePolygon(coordinate, encodeOffsets[c], encodeScale);\n      } else if (geometry.type === 'MultiPolygon') {\n        for (var c2 = 0; c2 < coordinate.length; c2++) {\n          var polygon = coordinate[c2];\n          coordinate[c2] = decodePolygon(polygon, encodeOffsets[c][c2], encodeScale);\n        }\n      }\n    }\n  } // Has been decoded\n\n\n  json.UTF8Encoding = false;\n  return json;\n}\n\nfunction decodePolygon(coordinate, encodeOffsets, encodeScale) {\n  var result = [];\n  var prevX = encodeOffsets[0];\n  var prevY = encodeOffsets[1];\n\n  for (var i = 0; i < coordinate.length; i += 2) {\n    var x = coordinate.charCodeAt(i) - 64;\n    var y = coordinate.charCodeAt(i + 1) - 64; // ZigZag decoding\n\n    x = x >> 1 ^ -(x & 1);\n    y = y >> 1 ^ -(y & 1); // Delta deocding\n\n    x += prevX;\n    y += prevY;\n    prevX = x;\n    prevY = y; // Dequantize\n\n    result.push([x / encodeScale, y / encodeScale]);\n  }\n\n  return result;\n}\n/**\n * @alias module:echarts/coord/geo/parseGeoJson\n * @param {Object} geoJson\n * @param {string} nameProperty\n * @return {module:zrender/container/Group}\n */\n\n\nfunction _default(geoJson, nameProperty) {\n  decode(geoJson);\n  return zrUtil.map(zrUtil.filter(geoJson.features, function (featureObj) {\n    // Output of mapshaper may have geometry null\n    return featureObj.geometry && featureObj.properties && featureObj.geometry.coordinates.length > 0;\n  }), function (featureObj) {\n    var properties = featureObj.properties;\n    var geo = featureObj.geometry;\n    var coordinates = geo.coordinates;\n    var geometries = [];\n\n    if (geo.type === 'Polygon') {\n      geometries.push({\n        type: 'polygon',\n        // According to the GeoJSON specification.\n        // First must be exterior, and the rest are all interior(holes).\n        exterior: coordinates[0],\n        interiors: coordinates.slice(1)\n      });\n    }\n\n    if (geo.type === 'MultiPolygon') {\n      zrUtil.each(coordinates, function (item) {\n        if (item[0]) {\n          geometries.push({\n            type: 'polygon',\n            exterior: item[0],\n            interiors: item.slice(1)\n          });\n        }\n      });\n    }\n\n    var region = new Region(properties[nameProperty || 'name'], geometries, properties.cp);\n    region.properties = properties;\n    return region;\n  });\n}\n\nmodule.exports = _default;"]}]}