{"remainingRequest":"/Users/id-repair/Documents/SEOL/4c-dashboard/node_modules/babel-loader/lib/index.js!/Users/id-repair/Documents/SEOL/4c-dashboard/node_modules/echarts/lib/coord/cartesian/prepareCustom.js","dependencies":[{"path":"/Users/id-repair/Documents/SEOL/4c-dashboard/node_modules/echarts/lib/coord/cartesian/prepareCustom.js","mtime":499162500000},{"path":"/Users/id-repair/Documents/SEOL/4c-dashboard/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/id-repair/Documents/SEOL/4c-dashboard/node_modules/babel-loader/lib/index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:cmVxdWlyZSgiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5Lm1hcC5qcyIpOwoKLyoKKiBMaWNlbnNlZCB0byB0aGUgQXBhY2hlIFNvZnR3YXJlIEZvdW5kYXRpb24gKEFTRikgdW5kZXIgb25lCiogb3IgbW9yZSBjb250cmlidXRvciBsaWNlbnNlIGFncmVlbWVudHMuICBTZWUgdGhlIE5PVElDRSBmaWxlCiogZGlzdHJpYnV0ZWQgd2l0aCB0aGlzIHdvcmsgZm9yIGFkZGl0aW9uYWwgaW5mb3JtYXRpb24KKiByZWdhcmRpbmcgY29weXJpZ2h0IG93bmVyc2hpcC4gIFRoZSBBU0YgbGljZW5zZXMgdGhpcyBmaWxlCiogdG8geW91IHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZQoqICJMaWNlbnNlIik7IHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2UKKiB3aXRoIHRoZSBMaWNlbnNlLiAgWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0CioKKiAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMAoqCiogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLAoqIHNvZnR3YXJlIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuCiogIkFTIElTIiBCQVNJUywgV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZCiogS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC4gIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlCiogc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZCBsaW1pdGF0aW9ucwoqIHVuZGVyIHRoZSBMaWNlbnNlLgoqLwp2YXIgenJVdGlsID0gcmVxdWlyZSgienJlbmRlci9saWIvY29yZS91dGlsIik7Ci8qCiogTGljZW5zZWQgdG8gdGhlIEFwYWNoZSBTb2Z0d2FyZSBGb3VuZGF0aW9uIChBU0YpIHVuZGVyIG9uZQoqIG9yIG1vcmUgY29udHJpYnV0b3IgbGljZW5zZSBhZ3JlZW1lbnRzLiAgU2VlIHRoZSBOT1RJQ0UgZmlsZQoqIGRpc3RyaWJ1dGVkIHdpdGggdGhpcyB3b3JrIGZvciBhZGRpdGlvbmFsIGluZm9ybWF0aW9uCiogcmVnYXJkaW5nIGNvcHlyaWdodCBvd25lcnNoaXAuICBUaGUgQVNGIGxpY2Vuc2VzIHRoaXMgZmlsZQoqIHRvIHlvdSB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUKKiAiTGljZW5zZSIpOyB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlCiogd2l0aCB0aGUgTGljZW5zZS4gIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdAoqCiogICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjAKKgoqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywKKiBzb2Z0d2FyZSBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbgoqICJBUyBJUyIgQkFTSVMsIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWQoqIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuICBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZQoqIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmQgbGltaXRhdGlvbnMKKiB1bmRlciB0aGUgTGljZW5zZS4KKi8KCgpmdW5jdGlvbiBkYXRhVG9Db29yZFNpemUoZGF0YVNpemUsIGRhdGFJdGVtKSB7CiAgLy8gZGF0YUl0ZW0gaXMgbmVjZXNzYXJ5IGluIGxvZyBheGlzLgogIGRhdGFJdGVtID0gZGF0YUl0ZW0gfHwgWzAsIDBdOwogIHJldHVybiB6clV0aWwubWFwKFsneCcsICd5J10sIGZ1bmN0aW9uIChkaW0sIGRpbUlkeCkgewogICAgdmFyIGF4aXMgPSB0aGlzLmdldEF4aXMoZGltKTsKICAgIHZhciB2YWwgPSBkYXRhSXRlbVtkaW1JZHhdOwogICAgdmFyIGhhbGZTaXplID0gZGF0YVNpemVbZGltSWR4XSAvIDI7CiAgICByZXR1cm4gYXhpcy50eXBlID09PSAnY2F0ZWdvcnknID8gYXhpcy5nZXRCYW5kV2lkdGgoKSA6IE1hdGguYWJzKGF4aXMuZGF0YVRvQ29vcmQodmFsIC0gaGFsZlNpemUpIC0gYXhpcy5kYXRhVG9Db29yZCh2YWwgKyBoYWxmU2l6ZSkpOwogIH0sIHRoaXMpOwp9CgpmdW5jdGlvbiBfZGVmYXVsdChjb29yZFN5cykgewogIHZhciByZWN0ID0gY29vcmRTeXMuZ3JpZC5nZXRSZWN0KCk7CiAgcmV0dXJuIHsKICAgIGNvb3JkU3lzOiB7CiAgICAgIC8vIFRoZSBuYW1lIGV4cG9zZWQgdG8gdXNlciBpcyBhbHdheXMgJ2NhcnRlc2lhbjJkJyBidXQgbm90ICdncmlkJy4KICAgICAgdHlwZTogJ2NhcnRlc2lhbjJkJywKICAgICAgeDogcmVjdC54LAogICAgICB5OiByZWN0LnksCiAgICAgIHdpZHRoOiByZWN0LndpZHRoLAogICAgICBoZWlnaHQ6IHJlY3QuaGVpZ2h0CiAgICB9LAogICAgYXBpOiB7CiAgICAgIGNvb3JkOiBmdW5jdGlvbiBjb29yZChkYXRhKSB7CiAgICAgICAgLy8gZG8gbm90IHByb3ZpZGUgIm91dCIgcGFyYW0KICAgICAgICByZXR1cm4gY29vcmRTeXMuZGF0YVRvUG9pbnQoZGF0YSk7CiAgICAgIH0sCiAgICAgIHNpemU6IHpyVXRpbC5iaW5kKGRhdGFUb0Nvb3JkU2l6ZSwgY29vcmRTeXMpCiAgICB9CiAgfTsKfQoKbW9kdWxlLmV4cG9ydHMgPSBfZGVmYXVsdDs="},{"version":3,"sources":["/Users/id-repair/Documents/SEOL/4c-dashboard/node_modules/echarts/lib/coord/cartesian/prepareCustom.js"],"names":["zrUtil","require","dataToCoordSize","dataSize","dataItem","map","dim","dimIdx","axis","getAxis","val","halfSize","type","getBandWidth","Math","abs","dataToCoord","_default","coordSys","rect","grid","getRect","x","y","width","height","api","coord","data","dataToPoint","size","bind","module","exports"],"mappings":";;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,IAAIA,MAAM,GAAGC,OAAO,CAAC,uBAAD,CAApB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASC,eAAT,CAAyBC,QAAzB,EAAmCC,QAAnC,EAA6C;AAC3C;AACAA,EAAAA,QAAQ,GAAGA,QAAQ,IAAI,CAAC,CAAD,EAAI,CAAJ,CAAvB;AACA,SAAOJ,MAAM,CAACK,GAAP,CAAW,CAAC,GAAD,EAAM,GAAN,CAAX,EAAuB,UAAUC,GAAV,EAAeC,MAAf,EAAuB;AACnD,QAAIC,IAAI,GAAG,KAAKC,OAAL,CAAaH,GAAb,CAAX;AACA,QAAII,GAAG,GAAGN,QAAQ,CAACG,MAAD,CAAlB;AACA,QAAII,QAAQ,GAAGR,QAAQ,CAACI,MAAD,CAAR,GAAmB,CAAlC;AACA,WAAOC,IAAI,CAACI,IAAL,KAAc,UAAd,GAA2BJ,IAAI,CAACK,YAAL,EAA3B,GAAiDC,IAAI,CAACC,GAAL,CAASP,IAAI,CAACQ,WAAL,CAAiBN,GAAG,GAAGC,QAAvB,IAAmCH,IAAI,CAACQ,WAAL,CAAiBN,GAAG,GAAGC,QAAvB,CAA5C,CAAxD;AACD,GALM,EAKJ,IALI,CAAP;AAMD;;AAED,SAASM,QAAT,CAAkBC,QAAlB,EAA4B;AAC1B,MAAIC,IAAI,GAAGD,QAAQ,CAACE,IAAT,CAAcC,OAAd,EAAX;AACA,SAAO;AACLH,IAAAA,QAAQ,EAAE;AACR;AACAN,MAAAA,IAAI,EAAE,aAFE;AAGRU,MAAAA,CAAC,EAAEH,IAAI,CAACG,CAHA;AAIRC,MAAAA,CAAC,EAAEJ,IAAI,CAACI,CAJA;AAKRC,MAAAA,KAAK,EAAEL,IAAI,CAACK,KALJ;AAMRC,MAAAA,MAAM,EAAEN,IAAI,CAACM;AANL,KADL;AASLC,IAAAA,GAAG,EAAE;AACHC,MAAAA,KAAK,EAAE,eAAUC,IAAV,EAAgB;AACrB;AACA,eAAOV,QAAQ,CAACW,WAAT,CAAqBD,IAArB,CAAP;AACD,OAJE;AAKHE,MAAAA,IAAI,EAAE9B,MAAM,CAAC+B,IAAP,CAAY7B,eAAZ,EAA6BgB,QAA7B;AALH;AATA,GAAP;AAiBD;;AAEDc,MAAM,CAACC,OAAP,GAAiBhB,QAAjB","sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction dataToCoordSize(dataSize, dataItem) {\n  // dataItem is necessary in log axis.\n  dataItem = dataItem || [0, 0];\n  return zrUtil.map(['x', 'y'], function (dim, dimIdx) {\n    var axis = this.getAxis(dim);\n    var val = dataItem[dimIdx];\n    var halfSize = dataSize[dimIdx] / 2;\n    return axis.type === 'category' ? axis.getBandWidth() : Math.abs(axis.dataToCoord(val - halfSize) - axis.dataToCoord(val + halfSize));\n  }, this);\n}\n\nfunction _default(coordSys) {\n  var rect = coordSys.grid.getRect();\n  return {\n    coordSys: {\n      // The name exposed to user is always 'cartesian2d' but not 'grid'.\n      type: 'cartesian2d',\n      x: rect.x,\n      y: rect.y,\n      width: rect.width,\n      height: rect.height\n    },\n    api: {\n      coord: function (data) {\n        // do not provide \"out\" param\n        return coordSys.dataToPoint(data);\n      },\n      size: zrUtil.bind(dataToCoordSize, coordSys)\n    }\n  };\n}\n\nmodule.exports = _default;"]}]}