{"remainingRequest":"/Users/id-repair/Documents/SEOL/4c-dashboard/node_modules/babel-loader/lib/index.js!/Users/id-repair/Documents/SEOL/4c-dashboard/node_modules/echarts/lib/data/helper/dataStackHelper.js","dependencies":[{"path":"/Users/id-repair/Documents/SEOL/4c-dashboard/node_modules/echarts/lib/data/helper/dataStackHelper.js","mtime":499162500000},{"path":"/Users/id-repair/Documents/SEOL/4c-dashboard/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/id-repair/Documents/SEOL/4c-dashboard/node_modules/babel-loader/lib/index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/id-repair/Documents/SEOL/4c-dashboard/node_modules/echarts/lib/data/helper/dataStackHelper.js"],"names":["_util","require","each","isString","enableDataStack","seriesModel","dimensionInfoList","opt","byIndex","stackedCoordDimension","mayStack","get","stackedByDimInfo","stackedDimInfo","stackResultDimension","stackedOverDimension","dimensionInfo","index","name","isExtraCoord","ordinalMeta","type","coordDim","createInvertedIndices","stackedDimCoordDim","stackedDimType","stackedDimCoordIndex","push","coordDimIndex","isCalculationCoord","stackedDimension","stackedByDimension","isStackedByIndex","isDimensionStacked","data","stackedDim","getCalculationInfo","getStackedDimension","targetDim","exports"],"mappings":"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","sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar each = _util.each;\nvar isString = _util.isString;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Note that it is too complicated to support 3d stack by value\n * (have to create two-dimension inverted index), so in 3d case\n * we just support that stacked by index.\n *\n * @param {module:echarts/model/Series} seriesModel\n * @param {Array.<string|Object>} dimensionInfoList The same as the input of <module:echarts/data/List>.\n *        The input dimensionInfoList will be modified.\n * @param {Object} [opt]\n * @param {boolean} [opt.stackedCoordDimension=''] Specify a coord dimension if needed.\n * @param {boolean} [opt.byIndex=false]\n * @return {Object} calculationInfo\n * {\n *     stackedDimension: string\n *     stackedByDimension: string\n *     isStackedByIndex: boolean\n *     stackedOverDimension: string\n *     stackResultDimension: string\n * }\n */\nfunction enableDataStack(seriesModel, dimensionInfoList, opt) {\n  opt = opt || {};\n  var byIndex = opt.byIndex;\n  var stackedCoordDimension = opt.stackedCoordDimension; // Compatibal: when `stack` is set as '', do not stack.\n\n  var mayStack = !!(seriesModel && seriesModel.get('stack'));\n  var stackedByDimInfo;\n  var stackedDimInfo;\n  var stackResultDimension;\n  var stackedOverDimension;\n  each(dimensionInfoList, function (dimensionInfo, index) {\n    if (isString(dimensionInfo)) {\n      dimensionInfoList[index] = dimensionInfo = {\n        name: dimensionInfo\n      };\n    }\n\n    if (mayStack && !dimensionInfo.isExtraCoord) {\n      // Find the first ordinal dimension as the stackedByDimInfo.\n      if (!byIndex && !stackedByDimInfo && dimensionInfo.ordinalMeta) {\n        stackedByDimInfo = dimensionInfo;\n      } // Find the first stackable dimension as the stackedDimInfo.\n\n\n      if (!stackedDimInfo && dimensionInfo.type !== 'ordinal' && dimensionInfo.type !== 'time' && (!stackedCoordDimension || stackedCoordDimension === dimensionInfo.coordDim)) {\n        stackedDimInfo = dimensionInfo;\n      }\n    }\n  });\n\n  if (stackedDimInfo && !byIndex && !stackedByDimInfo) {\n    // Compatible with previous design, value axis (time axis) only stack by index.\n    // It may make sense if the user provides elaborately constructed data.\n    byIndex = true;\n  } // Add stack dimension, they can be both calculated by coordinate system in `unionExtent`.\n  // That put stack logic in List is for using conveniently in echarts extensions, but it\n  // might not be a good way.\n\n\n  if (stackedDimInfo) {\n    // Use a weird name that not duplicated with other names.\n    stackResultDimension = '__\\0ecstackresult';\n    stackedOverDimension = '__\\0ecstackedover'; // Create inverted index to fast query index by value.\n\n    if (stackedByDimInfo) {\n      stackedByDimInfo.createInvertedIndices = true;\n    }\n\n    var stackedDimCoordDim = stackedDimInfo.coordDim;\n    var stackedDimType = stackedDimInfo.type;\n    var stackedDimCoordIndex = 0;\n    each(dimensionInfoList, function (dimensionInfo) {\n      if (dimensionInfo.coordDim === stackedDimCoordDim) {\n        stackedDimCoordIndex++;\n      }\n    });\n    dimensionInfoList.push({\n      name: stackResultDimension,\n      coordDim: stackedDimCoordDim,\n      coordDimIndex: stackedDimCoordIndex,\n      type: stackedDimType,\n      isExtraCoord: true,\n      isCalculationCoord: true\n    });\n    stackedDimCoordIndex++;\n    dimensionInfoList.push({\n      name: stackedOverDimension,\n      // This dimension contains stack base (generally, 0), so do not set it as\n      // `stackedDimCoordDim` to avoid extent calculation, consider log scale.\n      coordDim: stackedOverDimension,\n      coordDimIndex: stackedDimCoordIndex,\n      type: stackedDimType,\n      isExtraCoord: true,\n      isCalculationCoord: true\n    });\n  }\n\n  return {\n    stackedDimension: stackedDimInfo && stackedDimInfo.name,\n    stackedByDimension: stackedByDimInfo && stackedByDimInfo.name,\n    isStackedByIndex: byIndex,\n    stackedOverDimension: stackedOverDimension,\n    stackResultDimension: stackResultDimension\n  };\n}\n/**\n * @param {module:echarts/data/List} data\n * @param {string} stackedDim\n */\n\n\nfunction isDimensionStacked(data, stackedDim\n/*, stackedByDim*/\n) {\n  // Each single series only maps to one pair of axis. So we do not need to\n  // check stackByDim, whatever stacked by a dimension or stacked by index.\n  return !!stackedDim && stackedDim === data.getCalculationInfo('stackedDimension'); // && (\n  //     stackedByDim != null\n  //         ? stackedByDim === data.getCalculationInfo('stackedByDimension')\n  //         : data.getCalculationInfo('isStackedByIndex')\n  // );\n}\n/**\n * @param {module:echarts/data/List} data\n * @param {string} targetDim\n * @param {string} [stackedByDim] If not input this parameter, check whether\n *                                stacked by index.\n * @return {string} dimension\n */\n\n\nfunction getStackedDimension(data, targetDim) {\n  return isDimensionStacked(data, targetDim) ? data.getCalculationInfo('stackResultDimension') : targetDim;\n}\n\nexports.enableDataStack = enableDataStack;\nexports.isDimensionStacked = isDimensionStacked;\nexports.getStackedDimension = getStackedDimension;"]}]}