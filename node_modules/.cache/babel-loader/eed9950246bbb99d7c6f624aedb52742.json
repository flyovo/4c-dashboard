{"remainingRequest":"/Users/id-repair/Documents/SEOL/4c-dashboard/node_modules/babel-loader/lib/index.js!/Users/id-repair/Documents/SEOL/4c-dashboard/node_modules/echarts/lib/chart/helper/LargeSymbolDraw.js","dependencies":[{"path":"/Users/id-repair/Documents/SEOL/4c-dashboard/node_modules/echarts/lib/chart/helper/LargeSymbolDraw.js","mtime":499162500000},{"path":"/Users/id-repair/Documents/SEOL/4c-dashboard/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/id-repair/Documents/SEOL/4c-dashboard/node_modules/babel-loader/lib/index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/id-repair/Documents/SEOL/4c-dashboard/node_modules/echarts/lib/chart/helper/LargeSymbolDraw.js"],"names":["graphic","require","_symbol","createSymbol","IncrementalDisplayable","BOOST_SIZE_THRESHOLD","LargeSymbolPath","extendShape","shape","points","symbolProxy","softClipShape","buildPath","path","size","symbolProxyShape","ctx","getContext","canBoost","i","length","x","y","isNaN","contain","width","height","afterBrush","setTransform","fillRect","restoreTransform","findDataIndex","w","Math","max","h","idx","x0","y0","LargeSymbolDraw","group","Group","largeSymbolProto","prototype","isPersistent","_incremental","updateData","data","opt","removeAll","symbolEl","rectHover","cursor","setShape","getLayout","_setCommon","add","updateLayout","eachChild","child","startIndex","len","endIndex","byteOffset","Float32Array","buffer","incrementalPrepareUpdate","_clearIncremental","count","silent","incrementalUpdate","taskParams","addDisplayable","start","end","incremental","isIncremental","hostModel","getVisual","Array","clipShape","setColor","extrudeShadow","useStyle","getModel","getItemStyle","visualColor","seriesIndex","on","e","dataIndex","offsetX","offsetY","remove","clearDisplaybles","_default","module","exports"],"mappings":"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","sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar graphic = require(\"../../util/graphic\");\n\nvar _symbol = require(\"../../util/symbol\");\n\nvar createSymbol = _symbol.createSymbol;\n\nvar IncrementalDisplayable = require(\"zrender/lib/graphic/IncrementalDisplayable\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/* global Float32Array */\n// TODO Batch by color\nvar BOOST_SIZE_THRESHOLD = 4;\nvar LargeSymbolPath = graphic.extendShape({\n  shape: {\n    points: null\n  },\n  symbolProxy: null,\n  softClipShape: null,\n  buildPath: function (path, shape) {\n    var points = shape.points;\n    var size = shape.size;\n    var symbolProxy = this.symbolProxy;\n    var symbolProxyShape = symbolProxy.shape;\n    var ctx = path.getContext ? path.getContext() : path;\n    var canBoost = ctx && size[0] < BOOST_SIZE_THRESHOLD; // Do draw in afterBrush.\n\n    if (canBoost) {\n      return;\n    }\n\n    for (var i = 0; i < points.length;) {\n      var x = points[i++];\n      var y = points[i++];\n\n      if (isNaN(x) || isNaN(y)) {\n        continue;\n      }\n\n      if (this.softClipShape && !this.softClipShape.contain(x, y)) {\n        continue;\n      }\n\n      symbolProxyShape.x = x - size[0] / 2;\n      symbolProxyShape.y = y - size[1] / 2;\n      symbolProxyShape.width = size[0];\n      symbolProxyShape.height = size[1];\n      symbolProxy.buildPath(path, symbolProxyShape, true);\n    }\n  },\n  afterBrush: function (ctx) {\n    var shape = this.shape;\n    var points = shape.points;\n    var size = shape.size;\n    var canBoost = size[0] < BOOST_SIZE_THRESHOLD;\n\n    if (!canBoost) {\n      return;\n    }\n\n    this.setTransform(ctx); // PENDING If style or other canvas status changed?\n\n    for (var i = 0; i < points.length;) {\n      var x = points[i++];\n      var y = points[i++];\n\n      if (isNaN(x) || isNaN(y)) {\n        continue;\n      }\n\n      if (this.softClipShape && !this.softClipShape.contain(x, y)) {\n        continue;\n      } // fillRect is faster than building a rect path and draw.\n      // And it support light globalCompositeOperation.\n\n\n      ctx.fillRect(x - size[0] / 2, y - size[1] / 2, size[0], size[1]);\n    }\n\n    this.restoreTransform(ctx);\n  },\n  findDataIndex: function (x, y) {\n    // TODO ???\n    // Consider transform\n    var shape = this.shape;\n    var points = shape.points;\n    var size = shape.size;\n    var w = Math.max(size[0], 4);\n    var h = Math.max(size[1], 4); // Not consider transform\n    // Treat each element as a rect\n    // top down traverse\n\n    for (var idx = points.length / 2 - 1; idx >= 0; idx--) {\n      var i = idx * 2;\n      var x0 = points[i] - w / 2;\n      var y0 = points[i + 1] - h / 2;\n\n      if (x >= x0 && y >= y0 && x <= x0 + w && y <= y0 + h) {\n        return idx;\n      }\n    }\n\n    return -1;\n  }\n});\n\nfunction LargeSymbolDraw() {\n  this.group = new graphic.Group();\n}\n\nvar largeSymbolProto = LargeSymbolDraw.prototype;\n\nlargeSymbolProto.isPersistent = function () {\n  return !this._incremental;\n};\n/**\n * Update symbols draw by new data\n * @param {module:echarts/data/List} data\n * @param {Object} opt\n * @param {Object} [opt.clipShape]\n */\n\n\nlargeSymbolProto.updateData = function (data, opt) {\n  this.group.removeAll();\n  var symbolEl = new LargeSymbolPath({\n    rectHover: true,\n    cursor: 'default'\n  });\n  symbolEl.setShape({\n    points: data.getLayout('symbolPoints')\n  });\n\n  this._setCommon(symbolEl, data, false, opt);\n\n  this.group.add(symbolEl);\n  this._incremental = null;\n};\n\nlargeSymbolProto.updateLayout = function (data) {\n  if (this._incremental) {\n    return;\n  }\n\n  var points = data.getLayout('symbolPoints');\n  this.group.eachChild(function (child) {\n    if (child.startIndex != null) {\n      var len = (child.endIndex - child.startIndex) * 2;\n      var byteOffset = child.startIndex * 4 * 2;\n      points = new Float32Array(points.buffer, byteOffset, len);\n    }\n\n    child.setShape('points', points);\n  });\n};\n\nlargeSymbolProto.incrementalPrepareUpdate = function (data) {\n  this.group.removeAll();\n\n  this._clearIncremental(); // Only use incremental displayables when data amount is larger than 2 million.\n  // PENDING Incremental data?\n\n\n  if (data.count() > 2e6) {\n    if (!this._incremental) {\n      this._incremental = new IncrementalDisplayable({\n        silent: true\n      });\n    }\n\n    this.group.add(this._incremental);\n  } else {\n    this._incremental = null;\n  }\n};\n\nlargeSymbolProto.incrementalUpdate = function (taskParams, data, opt) {\n  var symbolEl;\n\n  if (this._incremental) {\n    symbolEl = new LargeSymbolPath();\n\n    this._incremental.addDisplayable(symbolEl, true);\n  } else {\n    symbolEl = new LargeSymbolPath({\n      rectHover: true,\n      cursor: 'default',\n      startIndex: taskParams.start,\n      endIndex: taskParams.end\n    });\n    symbolEl.incremental = true;\n    this.group.add(symbolEl);\n  }\n\n  symbolEl.setShape({\n    points: data.getLayout('symbolPoints')\n  });\n\n  this._setCommon(symbolEl, data, !!this._incremental, opt);\n};\n\nlargeSymbolProto._setCommon = function (symbolEl, data, isIncremental, opt) {\n  var hostModel = data.hostModel;\n  opt = opt || {}; // TODO\n  // if (data.hasItemVisual.symbolSize) {\n  //     // TODO typed array?\n  //     symbolEl.setShape('sizes', data.mapArray(\n  //         function (idx) {\n  //             var size = data.getItemVisual(idx, 'symbolSize');\n  //             return (size instanceof Array) ? size : [size, size];\n  //         }\n  //     ));\n  // }\n  // else {\n\n  var size = data.getVisual('symbolSize');\n  symbolEl.setShape('size', size instanceof Array ? size : [size, size]); // }\n\n  symbolEl.softClipShape = opt.clipShape || null; // Create symbolProxy to build path for each data\n\n  symbolEl.symbolProxy = createSymbol(data.getVisual('symbol'), 0, 0, 0, 0); // Use symbolProxy setColor method\n\n  symbolEl.setColor = symbolEl.symbolProxy.setColor;\n  var extrudeShadow = symbolEl.shape.size[0] < BOOST_SIZE_THRESHOLD;\n  symbolEl.useStyle( // Draw shadow when doing fillRect is extremely slow.\n  hostModel.getModel('itemStyle').getItemStyle(extrudeShadow ? ['color', 'shadowBlur', 'shadowColor'] : ['color']));\n  var visualColor = data.getVisual('color');\n\n  if (visualColor) {\n    symbolEl.setColor(visualColor);\n  }\n\n  if (!isIncremental) {\n    // Enable tooltip\n    // PENDING May have performance issue when path is extremely large\n    symbolEl.seriesIndex = hostModel.seriesIndex;\n    symbolEl.on('mousemove', function (e) {\n      symbolEl.dataIndex = null;\n      var dataIndex = symbolEl.findDataIndex(e.offsetX, e.offsetY);\n\n      if (dataIndex >= 0) {\n        // Provide dataIndex for tooltip\n        symbolEl.dataIndex = dataIndex + (symbolEl.startIndex || 0);\n      }\n    });\n  }\n};\n\nlargeSymbolProto.remove = function () {\n  this._clearIncremental();\n\n  this._incremental = null;\n  this.group.removeAll();\n};\n\nlargeSymbolProto._clearIncremental = function () {\n  var incremental = this._incremental;\n\n  if (incremental) {\n    incremental.clearDisplaybles();\n  }\n};\n\nvar _default = LargeSymbolDraw;\nmodule.exports = _default;"]}]}