{"remainingRequest":"/Users/id-repair/Documents/SEOL/4c-dashboard/node_modules/babel-loader/lib/index.js!/Users/id-repair/Documents/SEOL/4c-dashboard/node_modules/echarts/lib/action/createDataSelectAction.js","dependencies":[{"path":"/Users/id-repair/Documents/SEOL/4c-dashboard/node_modules/echarts/lib/action/createDataSelectAction.js","mtime":499162500000},{"path":"/Users/id-repair/Documents/SEOL/4c-dashboard/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/id-repair/Documents/SEOL/4c-dashboard/node_modules/babel-loader/lib/index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:cmVxdWlyZSgiY29yZS1qcy9tb2R1bGVzL2VzLmZ1bmN0aW9uLm5hbWUuanMiKTsKCi8qCiogTGljZW5zZWQgdG8gdGhlIEFwYWNoZSBTb2Z0d2FyZSBGb3VuZGF0aW9uIChBU0YpIHVuZGVyIG9uZQoqIG9yIG1vcmUgY29udHJpYnV0b3IgbGljZW5zZSBhZ3JlZW1lbnRzLiAgU2VlIHRoZSBOT1RJQ0UgZmlsZQoqIGRpc3RyaWJ1dGVkIHdpdGggdGhpcyB3b3JrIGZvciBhZGRpdGlvbmFsIGluZm9ybWF0aW9uCiogcmVnYXJkaW5nIGNvcHlyaWdodCBvd25lcnNoaXAuICBUaGUgQVNGIGxpY2Vuc2VzIHRoaXMgZmlsZQoqIHRvIHlvdSB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUKKiAiTGljZW5zZSIpOyB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlCiogd2l0aCB0aGUgTGljZW5zZS4gIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdAoqCiogICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjAKKgoqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywKKiBzb2Z0d2FyZSBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbgoqICJBUyBJUyIgQkFTSVMsIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWQoqIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuICBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZQoqIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmQgbGltaXRhdGlvbnMKKiB1bmRlciB0aGUgTGljZW5zZS4KKi8KdmFyIGVjaGFydHMgPSByZXF1aXJlKCIuLi9lY2hhcnRzIik7Cgp2YXIgenJVdGlsID0gcmVxdWlyZSgienJlbmRlci9saWIvY29yZS91dGlsIik7Ci8qCiogTGljZW5zZWQgdG8gdGhlIEFwYWNoZSBTb2Z0d2FyZSBGb3VuZGF0aW9uIChBU0YpIHVuZGVyIG9uZQoqIG9yIG1vcmUgY29udHJpYnV0b3IgbGljZW5zZSBhZ3JlZW1lbnRzLiAgU2VlIHRoZSBOT1RJQ0UgZmlsZQoqIGRpc3RyaWJ1dGVkIHdpdGggdGhpcyB3b3JrIGZvciBhZGRpdGlvbmFsIGluZm9ybWF0aW9uCiogcmVnYXJkaW5nIGNvcHlyaWdodCBvd25lcnNoaXAuICBUaGUgQVNGIGxpY2Vuc2VzIHRoaXMgZmlsZQoqIHRvIHlvdSB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUKKiAiTGljZW5zZSIpOyB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlCiogd2l0aCB0aGUgTGljZW5zZS4gIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdAoqCiogICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjAKKgoqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywKKiBzb2Z0d2FyZSBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbgoqICJBUyBJUyIgQkFTSVMsIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWQoqIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuICBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZQoqIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmQgbGltaXRhdGlvbnMKKiB1bmRlciB0aGUgTGljZW5zZS4KKi8KCgpmdW5jdGlvbiBfZGVmYXVsdChzZXJpZXNUeXBlLCBhY3Rpb25JbmZvcykgewogIHpyVXRpbC5lYWNoKGFjdGlvbkluZm9zLCBmdW5jdGlvbiAoYWN0aW9uSW5mbykgewogICAgYWN0aW9uSW5mby51cGRhdGUgPSAndXBkYXRlVmlldyc7CiAgICAvKioKICAgICAqIEBwYXlsb2FkCiAgICAgKiBAcHJvcGVydHkge3N0cmluZ30gc2VyaWVzTmFtZQogICAgICogQHByb3BlcnR5IHtzdHJpbmd9IG5hbWUKICAgICAqLwoKICAgIGVjaGFydHMucmVnaXN0ZXJBY3Rpb24oYWN0aW9uSW5mbywgZnVuY3Rpb24gKHBheWxvYWQsIGVjTW9kZWwpIHsKICAgICAgdmFyIHNlbGVjdGVkID0ge307CiAgICAgIGVjTW9kZWwuZWFjaENvbXBvbmVudCh7CiAgICAgICAgbWFpblR5cGU6ICdzZXJpZXMnLAogICAgICAgIHN1YlR5cGU6IHNlcmllc1R5cGUsCiAgICAgICAgcXVlcnk6IHBheWxvYWQKICAgICAgfSwgZnVuY3Rpb24gKHNlcmllc01vZGVsKSB7CiAgICAgICAgaWYgKHNlcmllc01vZGVsW2FjdGlvbkluZm8ubWV0aG9kXSkgewogICAgICAgICAgc2VyaWVzTW9kZWxbYWN0aW9uSW5mby5tZXRob2RdKHBheWxvYWQubmFtZSwgcGF5bG9hZC5kYXRhSW5kZXgpOwogICAgICAgIH0KCiAgICAgICAgdmFyIGRhdGEgPSBzZXJpZXNNb2RlbC5nZXREYXRhKCk7IC8vIENyZWF0ZSBzZWxlY3RlZCBtYXAKCiAgICAgICAgZGF0YS5lYWNoKGZ1bmN0aW9uIChpZHgpIHsKICAgICAgICAgIHZhciBuYW1lID0gZGF0YS5nZXROYW1lKGlkeCk7CiAgICAgICAgICBzZWxlY3RlZFtuYW1lXSA9IHNlcmllc01vZGVsLmlzU2VsZWN0ZWQobmFtZSkgfHwgZmFsc2U7CiAgICAgICAgfSk7CiAgICAgIH0pOwogICAgICByZXR1cm4gewogICAgICAgIG5hbWU6IHBheWxvYWQubmFtZSwKICAgICAgICBzZWxlY3RlZDogc2VsZWN0ZWQsCiAgICAgICAgc2VyaWVzSWQ6IHBheWxvYWQuc2VyaWVzSWQKICAgICAgfTsKICAgIH0pOwogIH0pOwp9Cgptb2R1bGUuZXhwb3J0cyA9IF9kZWZhdWx0Ow=="},{"version":3,"sources":["/Users/id-repair/Documents/SEOL/4c-dashboard/node_modules/echarts/lib/action/createDataSelectAction.js"],"names":["echarts","require","zrUtil","_default","seriesType","actionInfos","each","actionInfo","update","registerAction","payload","ecModel","selected","eachComponent","mainType","subType","query","seriesModel","method","name","dataIndex","data","getData","idx","getName","isSelected","seriesId","module","exports"],"mappings":";;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,IAAIA,OAAO,GAAGC,OAAO,CAAC,YAAD,CAArB;;AAEA,IAAIC,MAAM,GAAGD,OAAO,CAAC,uBAAD,CAApB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASE,QAAT,CAAkBC,UAAlB,EAA8BC,WAA9B,EAA2C;AACzCH,EAAAA,MAAM,CAACI,IAAP,CAAYD,WAAZ,EAAyB,UAAUE,UAAV,EAAsB;AAC7CA,IAAAA,UAAU,CAACC,MAAX,GAAoB,YAApB;AACA;AACJ;AACA;AACA;AACA;;AAEIR,IAAAA,OAAO,CAACS,cAAR,CAAuBF,UAAvB,EAAmC,UAAUG,OAAV,EAAmBC,OAAnB,EAA4B;AAC7D,UAAIC,QAAQ,GAAG,EAAf;AACAD,MAAAA,OAAO,CAACE,aAAR,CAAsB;AACpBC,QAAAA,QAAQ,EAAE,QADU;AAEpBC,QAAAA,OAAO,EAAEX,UAFW;AAGpBY,QAAAA,KAAK,EAAEN;AAHa,OAAtB,EAIG,UAAUO,WAAV,EAAuB;AACxB,YAAIA,WAAW,CAACV,UAAU,CAACW,MAAZ,CAAf,EAAoC;AAClCD,UAAAA,WAAW,CAACV,UAAU,CAACW,MAAZ,CAAX,CAA+BR,OAAO,CAACS,IAAvC,EAA6CT,OAAO,CAACU,SAArD;AACD;;AAED,YAAIC,IAAI,GAAGJ,WAAW,CAACK,OAAZ,EAAX,CALwB,CAKU;;AAElCD,QAAAA,IAAI,CAACf,IAAL,CAAU,UAAUiB,GAAV,EAAe;AACvB,cAAIJ,IAAI,GAAGE,IAAI,CAACG,OAAL,CAAaD,GAAb,CAAX;AACAX,UAAAA,QAAQ,CAACO,IAAD,CAAR,GAAiBF,WAAW,CAACQ,UAAZ,CAAuBN,IAAvB,KAAgC,KAAjD;AACD,SAHD;AAID,OAfD;AAgBA,aAAO;AACLA,QAAAA,IAAI,EAAET,OAAO,CAACS,IADT;AAELP,QAAAA,QAAQ,EAAEA,QAFL;AAGLc,QAAAA,QAAQ,EAAEhB,OAAO,CAACgB;AAHb,OAAP;AAKD,KAvBD;AAwBD,GAhCD;AAiCD;;AAEDC,MAAM,CAACC,OAAP,GAAiBzB,QAAjB","sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction _default(seriesType, actionInfos) {\n  zrUtil.each(actionInfos, function (actionInfo) {\n    actionInfo.update = 'updateView';\n    /**\n     * @payload\n     * @property {string} seriesName\n     * @property {string} name\n     */\n\n    echarts.registerAction(actionInfo, function (payload, ecModel) {\n      var selected = {};\n      ecModel.eachComponent({\n        mainType: 'series',\n        subType: seriesType,\n        query: payload\n      }, function (seriesModel) {\n        if (seriesModel[actionInfo.method]) {\n          seriesModel[actionInfo.method](payload.name, payload.dataIndex);\n        }\n\n        var data = seriesModel.getData(); // Create selected map\n\n        data.each(function (idx) {\n          var name = data.getName(idx);\n          selected[name] = seriesModel.isSelected(name) || false;\n        });\n      });\n      return {\n        name: payload.name,\n        selected: selected,\n        seriesId: payload.seriesId\n      };\n    });\n  });\n}\n\nmodule.exports = _default;"]}]}