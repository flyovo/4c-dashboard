{"remainingRequest":"/Users/id-repair/Documents/SEOL/4c-dashboard/node_modules/babel-loader/lib/index.js!/Users/id-repair/Documents/SEOL/4c-dashboard/node_modules/echarts/lib/data/helper/linkList.js","dependencies":[{"path":"/Users/id-repair/Documents/SEOL/4c-dashboard/node_modules/echarts/lib/data/helper/linkList.js","mtime":499162500000},{"path":"/Users/id-repair/Documents/SEOL/4c-dashboard/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/id-repair/Documents/SEOL/4c-dashboard/node_modules/babel-loader/lib/index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:LyoKKiBMaWNlbnNlZCB0byB0aGUgQXBhY2hlIFNvZnR3YXJlIEZvdW5kYXRpb24gKEFTRikgdW5kZXIgb25lCiogb3IgbW9yZSBjb250cmlidXRvciBsaWNlbnNlIGFncmVlbWVudHMuICBTZWUgdGhlIE5PVElDRSBmaWxlCiogZGlzdHJpYnV0ZWQgd2l0aCB0aGlzIHdvcmsgZm9yIGFkZGl0aW9uYWwgaW5mb3JtYXRpb24KKiByZWdhcmRpbmcgY29weXJpZ2h0IG93bmVyc2hpcC4gIFRoZSBBU0YgbGljZW5zZXMgdGhpcyBmaWxlCiogdG8geW91IHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZQoqICJMaWNlbnNlIik7IHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2UKKiB3aXRoIHRoZSBMaWNlbnNlLiAgWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0CioKKiAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMAoqCiogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLAoqIHNvZnR3YXJlIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuCiogIkFTIElTIiBCQVNJUywgV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZCiogS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC4gIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlCiogc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZCBsaW1pdGF0aW9ucwoqIHVuZGVyIHRoZSBMaWNlbnNlLgoqLwp2YXIgenJVdGlsID0gcmVxdWlyZSgienJlbmRlci9saWIvY29yZS91dGlsIik7Ci8qCiogTGljZW5zZWQgdG8gdGhlIEFwYWNoZSBTb2Z0d2FyZSBGb3VuZGF0aW9uIChBU0YpIHVuZGVyIG9uZQoqIG9yIG1vcmUgY29udHJpYnV0b3IgbGljZW5zZSBhZ3JlZW1lbnRzLiAgU2VlIHRoZSBOT1RJQ0UgZmlsZQoqIGRpc3RyaWJ1dGVkIHdpdGggdGhpcyB3b3JrIGZvciBhZGRpdGlvbmFsIGluZm9ybWF0aW9uCiogcmVnYXJkaW5nIGNvcHlyaWdodCBvd25lcnNoaXAuICBUaGUgQVNGIGxpY2Vuc2VzIHRoaXMgZmlsZQoqIHRvIHlvdSB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUKKiAiTGljZW5zZSIpOyB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlCiogd2l0aCB0aGUgTGljZW5zZS4gIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdAoqCiogICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjAKKgoqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywKKiBzb2Z0d2FyZSBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbgoqICJBUyBJUyIgQkFTSVMsIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWQoqIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuICBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZQoqIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmQgbGltaXRhdGlvbnMKKiB1bmRlciB0aGUgTGljZW5zZS4KKi8KCi8qKgogKiBMaW5rIGxpc3RzIGFuZCBzdHJ1Y3QgKGdyYXBoIG9yIHRyZWUpCiAqLwoKCnZhciBlYWNoID0genJVdGlsLmVhY2g7CnZhciBEQVRBUyA9ICdcMF9fbGlua19kYXRhcyc7CnZhciBNQUlOX0RBVEEgPSAnXDBfX2xpbmtfbWFpbkRhdGEnOyAvLyBDYXV0aW9uOgovLyBJbiBtb3N0IGNhc2UsIGVpdGhlciBsaXN0IG9yIGl0cyBzaGFsbG93IGNsb25lcyAoc2VlIGxpc3QuY2xvbmVTaGFsbG93KQovLyBpcyBhY3RpdmUgaW4gZWNoYXJ0cyBwcm9jZXNzLiBTbyBjb25zaWRlcmluZyBoZWFwIG1lbW9yeSBjb25zdW1wdGlvbiwKLy8gd2UgZG8gbm90IGNsb25lIHRyZWUgb3IgZ3JhcGgsIGJ1dCBzaGFyZSB0aGVtIGFtb25nIGxpc3QgYW5kIGl0cyBzaGFsbG93IGNsb25lcy4KLy8gQnV0IGluIHNvbWUgcmFyZSBjYXNlLCB3ZSBoYXZlIHRvIGtlZXAgb2xkIGxpc3QgKGxpa2UgZG8gYW5pbWF0aW9uIGluIGNoYXJ0KS4gU28KLy8gcGxlYXNlIHRha2UgY2FyZSB0aGF0IGJvdGggdGhlIG9sZCBsaXN0IGFuZCB0aGUgbmV3IGxpc3Qgc2hhcmUgdGhlIHNhbWUgdHJlZS9ncmFwaC4KCi8qKgogKiBAcGFyYW0ge09iamVjdH0gb3B0CiAqIEBwYXJhbSB7bW9kdWxlOmVjaGFydHMvZGF0YS9MaXN0fSBvcHQubWFpbkRhdGEKICogQHBhcmFtIHtPYmplY3R9IFtvcHQuc3RydWN0XSBGb3IgZXhhbXBsZSwgaW5zdGFuY2Ugb2YgR3JhcGggb3IgVHJlZS4KICogQHBhcmFtIHtzdHJpbmd9IFtvcHQuc3RydWN0QXR0cl0gZGVzaWduYXRpb246IGxpc3Rbc3RydWN0QXR0cl0gPSBzdHJ1Y3Q7CiAqIEBwYXJhbSB7T2JqZWN0fSBbb3B0LmRhdGFzXSB7ZGF0YVR5cGU6IGRhdGF9LAogKiAgICAgICAgICAgICAgICAgbGlrZToge25vZGU6IG5vZGVMaXN0LCBlZGdlOiBlZGdlTGlzdH0uCiAqICAgICAgICAgICAgICAgICBTaG91bGQgY29udGFpbiBtYWluRGF0YS4KICogQHBhcmFtIHtPYmplY3R9IFtvcHQuZGF0YXNBdHRyXSB7ZGF0YVR5cGU6IGF0dHJ9LAogKiAgICAgICAgICAgICAgICAgZGVzaWduYXRpb246IHN0cnVjdFtkYXRhc0F0dHJbZGF0YVR5cGVdXSA9IGxpc3Q7CiAqLwoKZnVuY3Rpb24gbGlua0xpc3Qob3B0KSB7CiAgdmFyIG1haW5EYXRhID0gb3B0Lm1haW5EYXRhOwogIHZhciBkYXRhcyA9IG9wdC5kYXRhczsKCiAgaWYgKCFkYXRhcykgewogICAgZGF0YXMgPSB7CiAgICAgIG1haW46IG1haW5EYXRhCiAgICB9OwogICAgb3B0LmRhdGFzQXR0ciA9IHsKICAgICAgbWFpbjogJ2RhdGEnCiAgICB9OwogIH0KCiAgb3B0LmRhdGFzID0gb3B0Lm1haW5EYXRhID0gbnVsbDsKICBsaW5rQWxsKG1haW5EYXRhLCBkYXRhcywgb3B0KTsgLy8gUG9yeHkgZGF0YSBvcmlnaW5hbCBtZXRob2RzLgoKICBlYWNoKGRhdGFzLCBmdW5jdGlvbiAoZGF0YSkgewogICAgZWFjaChtYWluRGF0YS5UUkFOU0ZFUkFCTEVfTUVUSE9EUywgZnVuY3Rpb24gKG1ldGhvZE5hbWUpIHsKICAgICAgZGF0YS53cmFwTWV0aG9kKG1ldGhvZE5hbWUsIHpyVXRpbC5jdXJyeSh0cmFuc2ZlckluamVjdGlvbiwgb3B0KSk7CiAgICB9KTsKICB9KTsgLy8gQmV5b25kIHRyYW5zZmVyLCBhZGRpdGlvbmFsIGZlYXR1cmVzIHNob3VsZCBiZSBhZGRlZCB0byBgY2xvbmVTaGFsbG93YC4KCiAgbWFpbkRhdGEud3JhcE1ldGhvZCgnY2xvbmVTaGFsbG93JywgenJVdGlsLmN1cnJ5KGNsb25lU2hhbGxvd0luamVjdGlvbiwgb3B0KSk7IC8vIE9ubHkgbWFpbkRhdGEgdHJpZ2dlciBjaGFuZ2UsIGJlY2F1c2Ugc3RydWN0LnVwZGF0ZSBtYXkgdHJpZ2dlcgogIC8vIGFub3RoZXIgY2hhbmdhYmxlIG1ldGhvZHMsIHdoaWNoIG1heSBicmluZyBhYm91dCBkZWFkIGxvY2suCgogIGVhY2gobWFpbkRhdGEuQ0hBTkdBQkxFX01FVEhPRFMsIGZ1bmN0aW9uIChtZXRob2ROYW1lKSB7CiAgICBtYWluRGF0YS53cmFwTWV0aG9kKG1ldGhvZE5hbWUsIHpyVXRpbC5jdXJyeShjaGFuZ2VJbmplY3Rpb24sIG9wdCkpOwogIH0pOyAvLyBNYWtlIHN1cmUgZGF0YXMgY29udGFpbnMgbWFpbkRhdGEuCgogIHpyVXRpbC5hc3NlcnQoZGF0YXNbbWFpbkRhdGEuZGF0YVR5cGVdID09PSBtYWluRGF0YSk7Cn0KCmZ1bmN0aW9uIHRyYW5zZmVySW5qZWN0aW9uKG9wdCwgcmVzKSB7CiAgaWYgKGlzTWFpbkRhdGEodGhpcykpIHsKICAgIC8vIFRyYW5zZmVyIGRhdGFzIHRvIG5ldyBtYWluIGRhdGEuCiAgICB2YXIgZGF0YXMgPSB6clV0aWwuZXh0ZW5kKHt9LCB0aGlzW0RBVEFTXSk7CiAgICBkYXRhc1t0aGlzLmRhdGFUeXBlXSA9IHJlczsKICAgIGxpbmtBbGwocmVzLCBkYXRhcywgb3B0KTsKICB9IGVsc2UgewogICAgLy8gTW9kaWZ5IHRoZSByZWZlcmVuY2UgaW4gbWFpbiBkYXRhIHRvIHBvaW50IG5ld0RhdGEuCiAgICBsaW5rU2luZ2xlKHJlcywgdGhpcy5kYXRhVHlwZSwgdGhpc1tNQUlOX0RBVEFdLCBvcHQpOwogIH0KCiAgcmV0dXJuIHJlczsKfQoKZnVuY3Rpb24gY2hhbmdlSW5qZWN0aW9uKG9wdCwgcmVzKSB7CiAgb3B0LnN0cnVjdCAmJiBvcHQuc3RydWN0LnVwZGF0ZSh0aGlzKTsKICByZXR1cm4gcmVzOwp9CgpmdW5jdGlvbiBjbG9uZVNoYWxsb3dJbmplY3Rpb24ob3B0LCByZXMpIHsKICAvLyBjbG9uZVNoYWxsb3csIHdoaWNoIGJyaW5ncyBhYm91dCBzb21lIGZyYWdpbGl0aWVzLCBtYXkgYmUgaW5hcHByb3ByaWF0ZQogIC8vIHRvIGJlIGV4cG9zZWQgYXMgYW4gQVBJLiBTbyBmb3IgaW1wbGVtZW50YXRpb24gc2ltcGxpY2l0eSB3ZSBjYW4gbWFrZQogIC8vIHRoZSByZXN0cmljdGlvbiB0aGF0IGNsb25lU2hhbGxvdyBvZiBub3QtbWFpbkRhdGEgc2hvdWxkIG5vdCBiZSBpbnZva2VkCiAgLy8gb3V0c2lkZSwgYnV0IG9ubHkgYmUgaW52b2tlZCBoZXJlLgogIGVhY2gocmVzW0RBVEFTXSwgZnVuY3Rpb24gKGRhdGEsIGRhdGFUeXBlKSB7CiAgICBkYXRhICE9PSByZXMgJiYgbGlua1NpbmdsZShkYXRhLmNsb25lU2hhbGxvdygpLCBkYXRhVHlwZSwgcmVzLCBvcHQpOwogIH0pOwogIHJldHVybiByZXM7Cn0KLyoqCiAqIFN1cHBsZW1lbnQgbWV0aG9kIHRvIExpc3QuCiAqCiAqIEBwdWJsaWMKICogQHBhcmFtIHtzdHJpbmd9IFtkYXRhVHlwZV0gSWYgbm90IHNwZWNpZmllZCwgcmV0dXJuIG1haW5EYXRhLgogKiBAcmV0dXJuIHttb2R1bGU6ZWNoYXJ0cy9kYXRhL0xpc3R9CiAqLwoKCmZ1bmN0aW9uIGdldExpbmtlZERhdGEoZGF0YVR5cGUpIHsKICB2YXIgbWFpbkRhdGEgPSB0aGlzW01BSU5fREFUQV07CiAgcmV0dXJuIGRhdGFUeXBlID09IG51bGwgfHwgbWFpbkRhdGEgPT0gbnVsbCA/IG1haW5EYXRhIDogbWFpbkRhdGFbREFUQVNdW2RhdGFUeXBlXTsKfQoKZnVuY3Rpb24gaXNNYWluRGF0YShkYXRhKSB7CiAgcmV0dXJuIGRhdGFbTUFJTl9EQVRBXSA9PT0gZGF0YTsKfQoKZnVuY3Rpb24gbGlua0FsbChtYWluRGF0YSwgZGF0YXMsIG9wdCkgewogIG1haW5EYXRhW0RBVEFTXSA9IHt9OwogIGVhY2goZGF0YXMsIGZ1bmN0aW9uIChkYXRhLCBkYXRhVHlwZSkgewogICAgbGlua1NpbmdsZShkYXRhLCBkYXRhVHlwZSwgbWFpbkRhdGEsIG9wdCk7CiAgfSk7Cn0KCmZ1bmN0aW9uIGxpbmtTaW5nbGUoZGF0YSwgZGF0YVR5cGUsIG1haW5EYXRhLCBvcHQpIHsKICBtYWluRGF0YVtEQVRBU11bZGF0YVR5cGVdID0gZGF0YTsKICBkYXRhW01BSU5fREFUQV0gPSBtYWluRGF0YTsKICBkYXRhLmRhdGFUeXBlID0gZGF0YVR5cGU7CgogIGlmIChvcHQuc3RydWN0KSB7CiAgICBkYXRhW29wdC5zdHJ1Y3RBdHRyXSA9IG9wdC5zdHJ1Y3Q7CiAgICBvcHQuc3RydWN0W29wdC5kYXRhc0F0dHJbZGF0YVR5cGVdXSA9IGRhdGE7CiAgfSAvLyBTdXBwbGVtZW50IG1ldGhvZC4KCgogIGRhdGEuZ2V0TGlua2VkRGF0YSA9IGdldExpbmtlZERhdGE7Cn0KCnZhciBfZGVmYXVsdCA9IGxpbmtMaXN0Owptb2R1bGUuZXhwb3J0cyA9IF9kZWZhdWx0Ow=="},{"version":3,"sources":["/Users/id-repair/Documents/SEOL/4c-dashboard/node_modules/echarts/lib/data/helper/linkList.js"],"names":["zrUtil","require","each","DATAS","MAIN_DATA","linkList","opt","mainData","datas","main","datasAttr","linkAll","data","TRANSFERABLE_METHODS","methodName","wrapMethod","curry","transferInjection","cloneShallowInjection","CHANGABLE_METHODS","changeInjection","assert","dataType","res","isMainData","extend","linkSingle","struct","update","cloneShallow","getLinkedData","structAttr","_default","module","exports"],"mappings":"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","sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Link lists and struct (graph or tree)\n */\nvar each = zrUtil.each;\nvar DATAS = '\\0__link_datas';\nvar MAIN_DATA = '\\0__link_mainData'; // Caution:\n// In most case, either list or its shallow clones (see list.cloneShallow)\n// is active in echarts process. So considering heap memory consumption,\n// we do not clone tree or graph, but share them among list and its shallow clones.\n// But in some rare case, we have to keep old list (like do animation in chart). So\n// please take care that both the old list and the new list share the same tree/graph.\n\n/**\n * @param {Object} opt\n * @param {module:echarts/data/List} opt.mainData\n * @param {Object} [opt.struct] For example, instance of Graph or Tree.\n * @param {string} [opt.structAttr] designation: list[structAttr] = struct;\n * @param {Object} [opt.datas] {dataType: data},\n *                 like: {node: nodeList, edge: edgeList}.\n *                 Should contain mainData.\n * @param {Object} [opt.datasAttr] {dataType: attr},\n *                 designation: struct[datasAttr[dataType]] = list;\n */\n\nfunction linkList(opt) {\n  var mainData = opt.mainData;\n  var datas = opt.datas;\n\n  if (!datas) {\n    datas = {\n      main: mainData\n    };\n    opt.datasAttr = {\n      main: 'data'\n    };\n  }\n\n  opt.datas = opt.mainData = null;\n  linkAll(mainData, datas, opt); // Porxy data original methods.\n\n  each(datas, function (data) {\n    each(mainData.TRANSFERABLE_METHODS, function (methodName) {\n      data.wrapMethod(methodName, zrUtil.curry(transferInjection, opt));\n    });\n  }); // Beyond transfer, additional features should be added to `cloneShallow`.\n\n  mainData.wrapMethod('cloneShallow', zrUtil.curry(cloneShallowInjection, opt)); // Only mainData trigger change, because struct.update may trigger\n  // another changable methods, which may bring about dead lock.\n\n  each(mainData.CHANGABLE_METHODS, function (methodName) {\n    mainData.wrapMethod(methodName, zrUtil.curry(changeInjection, opt));\n  }); // Make sure datas contains mainData.\n\n  zrUtil.assert(datas[mainData.dataType] === mainData);\n}\n\nfunction transferInjection(opt, res) {\n  if (isMainData(this)) {\n    // Transfer datas to new main data.\n    var datas = zrUtil.extend({}, this[DATAS]);\n    datas[this.dataType] = res;\n    linkAll(res, datas, opt);\n  } else {\n    // Modify the reference in main data to point newData.\n    linkSingle(res, this.dataType, this[MAIN_DATA], opt);\n  }\n\n  return res;\n}\n\nfunction changeInjection(opt, res) {\n  opt.struct && opt.struct.update(this);\n  return res;\n}\n\nfunction cloneShallowInjection(opt, res) {\n  // cloneShallow, which brings about some fragilities, may be inappropriate\n  // to be exposed as an API. So for implementation simplicity we can make\n  // the restriction that cloneShallow of not-mainData should not be invoked\n  // outside, but only be invoked here.\n  each(res[DATAS], function (data, dataType) {\n    data !== res && linkSingle(data.cloneShallow(), dataType, res, opt);\n  });\n  return res;\n}\n/**\n * Supplement method to List.\n *\n * @public\n * @param {string} [dataType] If not specified, return mainData.\n * @return {module:echarts/data/List}\n */\n\n\nfunction getLinkedData(dataType) {\n  var mainData = this[MAIN_DATA];\n  return dataType == null || mainData == null ? mainData : mainData[DATAS][dataType];\n}\n\nfunction isMainData(data) {\n  return data[MAIN_DATA] === data;\n}\n\nfunction linkAll(mainData, datas, opt) {\n  mainData[DATAS] = {};\n  each(datas, function (data, dataType) {\n    linkSingle(data, dataType, mainData, opt);\n  });\n}\n\nfunction linkSingle(data, dataType, mainData, opt) {\n  mainData[DATAS][dataType] = data;\n  data[MAIN_DATA] = mainData;\n  data.dataType = dataType;\n\n  if (opt.struct) {\n    data[opt.structAttr] = opt.struct;\n    opt.struct[opt.datasAttr[dataType]] = data;\n  } // Supplement method.\n\n\n  data.getLinkedData = getLinkedData;\n}\n\nvar _default = linkList;\nmodule.exports = _default;"]}]}