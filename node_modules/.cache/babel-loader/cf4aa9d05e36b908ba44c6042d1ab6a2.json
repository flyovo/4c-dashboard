{"remainingRequest":"/Users/id-repair/Documents/SEOL/4c-dashboard/node_modules/babel-loader/lib/index.js!/Users/id-repair/Documents/SEOL/4c-dashboard/node_modules/echarts/lib/data/helper/dataProvider.js","dependencies":[{"path":"/Users/id-repair/Documents/SEOL/4c-dashboard/node_modules/echarts/lib/data/helper/dataProvider.js","mtime":499162500000},{"path":"/Users/id-repair/Documents/SEOL/4c-dashboard/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/id-repair/Documents/SEOL/4c-dashboard/node_modules/babel-loader/lib/index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/id-repair/Documents/SEOL/4c-dashboard/node_modules/echarts/lib/data/helper/dataProvider.js"],"names":["_config","require","__DEV__","_util","isTypedArray","extend","assert","each","isObject","_model","getDataItemValue","isDataItemOption","_number","parseDate","Source","_sourceType","SOURCE_FORMAT_TYPED_ARRAY","SOURCE_FORMAT_ARRAY_ROWS","SOURCE_FORMAT_ORIGINAL","SOURCE_FORMAT_OBJECT_ROWS","DefaultDataProvider","source","dimSize","isInstance","seriesDataToSource","_source","data","_data","sourceFormat","_offset","_dimSize","methods","providerMethods","seriesLayoutBy","providerProto","prototype","pure","persistent","getSource","count","Math","max","length","startIndex","getItem","idx","appendData","appendDataSimply","row","item","i","push","Error","countSimply","getItemSimply","dimName","dimensionsDefine","name","col","dims","newData","newCol","key","oldCol","out","offset","clean","rawValueGetters","arrayRows","getRawValueSimply","objectRows","dataItem","dataIndex","dimIndex","keyedColumns","original","value","Array","typedArray","defaultDimValueGetters","getDimValueSimply","converDataValue","_dimensionInfos","_rawData","hasItemOption","dimInfo","dimType","type","ordinalMeta","parseAndCollect","NaN","retrieveRawValue","dim","getRawDataItem","getProvider","getDimensionInfo","index","retrieveRawAttr","attr","exports"],"mappings":"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","sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar isTypedArray = _util.isTypedArray;\nvar extend = _util.extend;\nvar assert = _util.assert;\nvar each = _util.each;\nvar isObject = _util.isObject;\n\nvar _model = require(\"../../util/model\");\n\nvar getDataItemValue = _model.getDataItemValue;\nvar isDataItemOption = _model.isDataItemOption;\n\nvar _number = require(\"../../util/number\");\n\nvar parseDate = _number.parseDate;\n\nvar Source = require(\"../Source\");\n\nvar _sourceType = require(\"./sourceType\");\n\nvar SOURCE_FORMAT_TYPED_ARRAY = _sourceType.SOURCE_FORMAT_TYPED_ARRAY;\nvar SOURCE_FORMAT_ARRAY_ROWS = _sourceType.SOURCE_FORMAT_ARRAY_ROWS;\nvar SOURCE_FORMAT_ORIGINAL = _sourceType.SOURCE_FORMAT_ORIGINAL;\nvar SOURCE_FORMAT_OBJECT_ROWS = _sourceType.SOURCE_FORMAT_OBJECT_ROWS;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// TODO\n// ??? refactor? check the outer usage of data provider.\n// merge with defaultDimValueGetter?\n\n/**\n * If normal array used, mutable chunk size is supported.\n * If typed array used, chunk size must be fixed.\n */\nfunction DefaultDataProvider(source, dimSize) {\n  if (!Source.isInstance(source)) {\n    source = Source.seriesDataToSource(source);\n  }\n\n  this._source = source;\n  var data = this._data = source.data;\n  var sourceFormat = source.sourceFormat; // Typed array. TODO IE10+?\n\n  if (sourceFormat === SOURCE_FORMAT_TYPED_ARRAY) {\n    this._offset = 0;\n    this._dimSize = dimSize;\n    this._data = data;\n  }\n\n  var methods = providerMethods[sourceFormat === SOURCE_FORMAT_ARRAY_ROWS ? sourceFormat + '_' + source.seriesLayoutBy : sourceFormat];\n  extend(this, methods);\n}\n\nvar providerProto = DefaultDataProvider.prototype; // If data is pure without style configuration\n\nproviderProto.pure = false; // If data is persistent and will not be released after use.\n\nproviderProto.persistent = true; // ???! FIXME legacy data provider do not has method getSource\n\nproviderProto.getSource = function () {\n  return this._source;\n};\n\nvar providerMethods = {\n  'arrayRows_column': {\n    pure: true,\n    count: function () {\n      return Math.max(0, this._data.length - this._source.startIndex);\n    },\n    getItem: function (idx) {\n      return this._data[idx + this._source.startIndex];\n    },\n    appendData: appendDataSimply\n  },\n  'arrayRows_row': {\n    pure: true,\n    count: function () {\n      var row = this._data[0];\n      return row ? Math.max(0, row.length - this._source.startIndex) : 0;\n    },\n    getItem: function (idx) {\n      idx += this._source.startIndex;\n      var item = [];\n      var data = this._data;\n\n      for (var i = 0; i < data.length; i++) {\n        var row = data[i];\n        item.push(row ? row[idx] : null);\n      }\n\n      return item;\n    },\n    appendData: function () {\n      throw new Error('Do not support appendData when set seriesLayoutBy: \"row\".');\n    }\n  },\n  'objectRows': {\n    pure: true,\n    count: countSimply,\n    getItem: getItemSimply,\n    appendData: appendDataSimply\n  },\n  'keyedColumns': {\n    pure: true,\n    count: function () {\n      var dimName = this._source.dimensionsDefine[0].name;\n      var col = this._data[dimName];\n      return col ? col.length : 0;\n    },\n    getItem: function (idx) {\n      var item = [];\n      var dims = this._source.dimensionsDefine;\n\n      for (var i = 0; i < dims.length; i++) {\n        var col = this._data[dims[i].name];\n        item.push(col ? col[idx] : null);\n      }\n\n      return item;\n    },\n    appendData: function (newData) {\n      var data = this._data;\n      each(newData, function (newCol, key) {\n        var oldCol = data[key] || (data[key] = []);\n\n        for (var i = 0; i < (newCol || []).length; i++) {\n          oldCol.push(newCol[i]);\n        }\n      });\n    }\n  },\n  'original': {\n    count: countSimply,\n    getItem: getItemSimply,\n    appendData: appendDataSimply\n  },\n  'typedArray': {\n    persistent: false,\n    pure: true,\n    count: function () {\n      return this._data ? this._data.length / this._dimSize : 0;\n    },\n    getItem: function (idx, out) {\n      idx = idx - this._offset;\n      out = out || [];\n      var offset = this._dimSize * idx;\n\n      for (var i = 0; i < this._dimSize; i++) {\n        out[i] = this._data[offset + i];\n      }\n\n      return out;\n    },\n    appendData: function (newData) {\n      this._data = newData;\n    },\n    // Clean self if data is already used.\n    clean: function () {\n      // PENDING\n      this._offset += this.count();\n      this._data = null;\n    }\n  }\n};\n\nfunction countSimply() {\n  return this._data.length;\n}\n\nfunction getItemSimply(idx) {\n  return this._data[idx];\n}\n\nfunction appendDataSimply(newData) {\n  for (var i = 0; i < newData.length; i++) {\n    this._data.push(newData[i]);\n  }\n}\n\nvar rawValueGetters = {\n  arrayRows: getRawValueSimply,\n  objectRows: function (dataItem, dataIndex, dimIndex, dimName) {\n    return dimIndex != null ? dataItem[dimName] : dataItem;\n  },\n  keyedColumns: getRawValueSimply,\n  original: function (dataItem, dataIndex, dimIndex, dimName) {\n    // FIXME\n    // In some case (markpoint in geo (geo-map.html)), dataItem\n    // is {coord: [...]}\n    var value = getDataItemValue(dataItem);\n    return dimIndex == null || !(value instanceof Array) ? value : value[dimIndex];\n  },\n  typedArray: getRawValueSimply\n};\n\nfunction getRawValueSimply(dataItem, dataIndex, dimIndex, dimName) {\n  return dimIndex != null ? dataItem[dimIndex] : dataItem;\n}\n\nvar defaultDimValueGetters = {\n  arrayRows: getDimValueSimply,\n  objectRows: function (dataItem, dimName, dataIndex, dimIndex) {\n    return converDataValue(dataItem[dimName], this._dimensionInfos[dimName]);\n  },\n  keyedColumns: getDimValueSimply,\n  original: function (dataItem, dimName, dataIndex, dimIndex) {\n    // Performance sensitive, do not use modelUtil.getDataItemValue.\n    // If dataItem is an plain object with no value field, the var `value`\n    // will be assigned with the object, but it will be tread correctly\n    // in the `convertDataValue`.\n    var value = dataItem && (dataItem.value == null ? dataItem : dataItem.value); // If any dataItem is like { value: 10 }\n\n    if (!this._rawData.pure && isDataItemOption(dataItem)) {\n      this.hasItemOption = true;\n    }\n\n    return converDataValue(value instanceof Array ? value[dimIndex] // If value is a single number or something else not array.\n    : value, this._dimensionInfos[dimName]);\n  },\n  typedArray: function (dataItem, dimName, dataIndex, dimIndex) {\n    return dataItem[dimIndex];\n  }\n};\n\nfunction getDimValueSimply(dataItem, dimName, dataIndex, dimIndex) {\n  return converDataValue(dataItem[dimIndex], this._dimensionInfos[dimName]);\n}\n/**\n * This helper method convert value in data.\n * @param {string|number|Date} value\n * @param {Object|string} [dimInfo] If string (like 'x'), dimType defaults 'number'.\n *        If \"dimInfo.ordinalParseAndSave\", ordinal value can be parsed.\n */\n\n\nfunction converDataValue(value, dimInfo) {\n  // Performance sensitive.\n  var dimType = dimInfo && dimInfo.type;\n\n  if (dimType === 'ordinal') {\n    // If given value is a category string\n    var ordinalMeta = dimInfo && dimInfo.ordinalMeta;\n    return ordinalMeta ? ordinalMeta.parseAndCollect(value) : value;\n  }\n\n  if (dimType === 'time' // spead up when using timestamp\n  && typeof value !== 'number' && value != null && value !== '-') {\n    value = +parseDate(value);\n  } // dimType defaults 'number'.\n  // If dimType is not ordinal and value is null or undefined or NaN or '-',\n  // parse to NaN.\n\n\n  return value == null || value === '' ? NaN // If string (like '-'), using '+' parse to NaN\n  // If object, also parse to NaN\n  : +value;\n} // ??? FIXME can these logic be more neat: getRawValue, getRawDataItem,\n// Consider persistent.\n// Caution: why use raw value to display on label or tooltip?\n// A reason is to avoid format. For example time value we do not know\n// how to format is expected. More over, if stack is used, calculated\n// value may be 0.91000000001, which have brings trouble to display.\n// TODO: consider how to treat null/undefined/NaN when display?\n\n/**\n * @param {module:echarts/data/List} data\n * @param {number} dataIndex\n * @param {string|number} [dim] dimName or dimIndex\n * @return {Array.<number>|string|number} can be null/undefined.\n */\n\n\nfunction retrieveRawValue(data, dataIndex, dim) {\n  if (!data) {\n    return;\n  } // Consider data may be not persistent.\n\n\n  var dataItem = data.getRawDataItem(dataIndex);\n\n  if (dataItem == null) {\n    return;\n  }\n\n  var sourceFormat = data.getProvider().getSource().sourceFormat;\n  var dimName;\n  var dimIndex;\n  var dimInfo = data.getDimensionInfo(dim);\n\n  if (dimInfo) {\n    dimName = dimInfo.name;\n    dimIndex = dimInfo.index;\n  }\n\n  return rawValueGetters[sourceFormat](dataItem, dataIndex, dimIndex, dimName);\n}\n/**\n * Compatible with some cases (in pie, map) like:\n * data: [{name: 'xx', value: 5, selected: true}, ...]\n * where only sourceFormat is 'original' and 'objectRows' supported.\n *\n * ??? TODO\n * Supported detail options in data item when using 'arrayRows'.\n *\n * @param {module:echarts/data/List} data\n * @param {number} dataIndex\n * @param {string} attr like 'selected'\n */\n\n\nfunction retrieveRawAttr(data, dataIndex, attr) {\n  if (!data) {\n    return;\n  }\n\n  var sourceFormat = data.getProvider().getSource().sourceFormat;\n\n  if (sourceFormat !== SOURCE_FORMAT_ORIGINAL && sourceFormat !== SOURCE_FORMAT_OBJECT_ROWS) {\n    return;\n  }\n\n  var dataItem = data.getRawDataItem(dataIndex);\n\n  if (sourceFormat === SOURCE_FORMAT_ORIGINAL && !isObject(dataItem)) {\n    dataItem = null;\n  }\n\n  if (dataItem) {\n    return dataItem[attr];\n  }\n}\n\nexports.DefaultDataProvider = DefaultDataProvider;\nexports.defaultDimValueGetters = defaultDimValueGetters;\nexports.retrieveRawValue = retrieveRawValue;\nexports.retrieveRawAttr = retrieveRawAttr;"]}]}