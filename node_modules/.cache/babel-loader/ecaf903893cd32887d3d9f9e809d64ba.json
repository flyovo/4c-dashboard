{"remainingRequest":"/Users/id-repair/Documents/SEOL/4c-dashboard/node_modules/babel-loader/lib/index.js!/Users/id-repair/Documents/SEOL/4c-dashboard/node_modules/echarts/lib/scale/Ordinal.js","dependencies":[{"path":"/Users/id-repair/Documents/SEOL/4c-dashboard/node_modules/echarts/lib/scale/Ordinal.js","mtime":499162500000},{"path":"/Users/id-repair/Documents/SEOL/4c-dashboard/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/id-repair/Documents/SEOL/4c-dashboard/node_modules/babel-loader/lib/index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:LyoKKiBMaWNlbnNlZCB0byB0aGUgQXBhY2hlIFNvZnR3YXJlIEZvdW5kYXRpb24gKEFTRikgdW5kZXIgb25lCiogb3IgbW9yZSBjb250cmlidXRvciBsaWNlbnNlIGFncmVlbWVudHMuICBTZWUgdGhlIE5PVElDRSBmaWxlCiogZGlzdHJpYnV0ZWQgd2l0aCB0aGlzIHdvcmsgZm9yIGFkZGl0aW9uYWwgaW5mb3JtYXRpb24KKiByZWdhcmRpbmcgY29weXJpZ2h0IG93bmVyc2hpcC4gIFRoZSBBU0YgbGljZW5zZXMgdGhpcyBmaWxlCiogdG8geW91IHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZQoqICJMaWNlbnNlIik7IHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2UKKiB3aXRoIHRoZSBMaWNlbnNlLiAgWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0CioKKiAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMAoqCiogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLAoqIHNvZnR3YXJlIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuCiogIkFTIElTIiBCQVNJUywgV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZCiogS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC4gIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlCiogc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZCBsaW1pdGF0aW9ucwoqIHVuZGVyIHRoZSBMaWNlbnNlLgoqLwp2YXIgenJVdGlsID0gcmVxdWlyZSgienJlbmRlci9saWIvY29yZS91dGlsIik7Cgp2YXIgU2NhbGUgPSByZXF1aXJlKCIuL1NjYWxlIik7Cgp2YXIgT3JkaW5hbE1ldGEgPSByZXF1aXJlKCIuLi9kYXRhL09yZGluYWxNZXRhIik7Ci8qCiogTGljZW5zZWQgdG8gdGhlIEFwYWNoZSBTb2Z0d2FyZSBGb3VuZGF0aW9uIChBU0YpIHVuZGVyIG9uZQoqIG9yIG1vcmUgY29udHJpYnV0b3IgbGljZW5zZSBhZ3JlZW1lbnRzLiAgU2VlIHRoZSBOT1RJQ0UgZmlsZQoqIGRpc3RyaWJ1dGVkIHdpdGggdGhpcyB3b3JrIGZvciBhZGRpdGlvbmFsIGluZm9ybWF0aW9uCiogcmVnYXJkaW5nIGNvcHlyaWdodCBvd25lcnNoaXAuICBUaGUgQVNGIGxpY2Vuc2VzIHRoaXMgZmlsZQoqIHRvIHlvdSB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUKKiAiTGljZW5zZSIpOyB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlCiogd2l0aCB0aGUgTGljZW5zZS4gIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdAoqCiogICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjAKKgoqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywKKiBzb2Z0d2FyZSBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbgoqICJBUyBJUyIgQkFTSVMsIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWQoqIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuICBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZQoqIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmQgbGltaXRhdGlvbnMKKiB1bmRlciB0aGUgTGljZW5zZS4KKi8KCi8qKgogKiBMaW5lYXIgY29udGludW91cyBzY2FsZQogKiBAbW9kdWxlIGVjaGFydHMvY29vcmQvc2NhbGUvT3JkaW5hbAogKgogKiBodHRwOi8vZW4ud2lraXBlZGlhLm9yZy93aWtpL0xldmVsX29mX21lYXN1cmVtZW50CiAqLwovLyBGSVhNRSBvbmx5IG9uZSBkYXRhCgoKdmFyIHNjYWxlUHJvdG8gPSBTY2FsZS5wcm90b3R5cGU7CnZhciBPcmRpbmFsU2NhbGUgPSBTY2FsZS5leHRlbmQoewogIHR5cGU6ICdvcmRpbmFsJywKCiAgLyoqCiAgICogQHBhcmFtIHttb2R1bGU6ZWNoYXJ0cy9kYXRhL09yZGlhbmxNZXRhfEFycmF5LjxzdHJpbmc+fSBvcmRpbmFsTWV0YQogICAqLwogIGluaXQ6IGZ1bmN0aW9uIGluaXQob3JkaW5hbE1ldGEsIGV4dGVudCkgewogICAgLy8gQ2F1dGlvbjogU2hvdWxkIG5vdCB1c2UgaW5zdGFuY2VvZiwgY29uc2lkZXIgZWMtZXh0ZW5zaW9ucyB1c2luZwogICAgLy8gaW1wb3J0IGFwcHJvYWNoIHRvIGdldCBPcmRpbmFsTWV0YSBjbGFzcy4KICAgIGlmICghb3JkaW5hbE1ldGEgfHwgenJVdGlsLmlzQXJyYXkob3JkaW5hbE1ldGEpKSB7CiAgICAgIG9yZGluYWxNZXRhID0gbmV3IE9yZGluYWxNZXRhKHsKICAgICAgICBjYXRlZ29yaWVzOiBvcmRpbmFsTWV0YQogICAgICB9KTsKICAgIH0KCiAgICB0aGlzLl9vcmRpbmFsTWV0YSA9IG9yZGluYWxNZXRhOwogICAgdGhpcy5fZXh0ZW50ID0gZXh0ZW50IHx8IFswLCBvcmRpbmFsTWV0YS5jYXRlZ29yaWVzLmxlbmd0aCAtIDFdOwogIH0sCiAgcGFyc2U6IGZ1bmN0aW9uIHBhcnNlKHZhbCkgewogICAgcmV0dXJuIHR5cGVvZiB2YWwgPT09ICdzdHJpbmcnID8gdGhpcy5fb3JkaW5hbE1ldGEuZ2V0T3JkaW5hbCh2YWwpIC8vIHZhbCBtaWdodCBiZSBmbG9hdC4KICAgIDogTWF0aC5yb3VuZCh2YWwpOwogIH0sCiAgY29udGFpbjogZnVuY3Rpb24gY29udGFpbihyYW5rKSB7CiAgICByYW5rID0gdGhpcy5wYXJzZShyYW5rKTsKICAgIHJldHVybiBzY2FsZVByb3RvLmNvbnRhaW4uY2FsbCh0aGlzLCByYW5rKSAmJiB0aGlzLl9vcmRpbmFsTWV0YS5jYXRlZ29yaWVzW3JhbmtdICE9IG51bGw7CiAgfSwKCiAgLyoqCiAgICogTm9ybWFsaXplIGdpdmVuIHJhbmsgb3IgbmFtZSB0byBsaW5lYXIgWzAsIDFdCiAgICogQHBhcmFtIHtudW1iZXJ8c3RyaW5nfSBbdmFsXQogICAqIEByZXR1cm4ge251bWJlcn0KICAgKi8KICBub3JtYWxpemU6IGZ1bmN0aW9uIG5vcm1hbGl6ZSh2YWwpIHsKICAgIHJldHVybiBzY2FsZVByb3RvLm5vcm1hbGl6ZS5jYWxsKHRoaXMsIHRoaXMucGFyc2UodmFsKSk7CiAgfSwKICBzY2FsZTogZnVuY3Rpb24gc2NhbGUodmFsKSB7CiAgICByZXR1cm4gTWF0aC5yb3VuZChzY2FsZVByb3RvLnNjYWxlLmNhbGwodGhpcywgdmFsKSk7CiAgfSwKCiAgLyoqCiAgICogQHJldHVybiB7QXJyYXl9CiAgICovCiAgZ2V0VGlja3M6IGZ1bmN0aW9uIGdldFRpY2tzKCkgewogICAgdmFyIHRpY2tzID0gW107CiAgICB2YXIgZXh0ZW50ID0gdGhpcy5fZXh0ZW50OwogICAgdmFyIHJhbmsgPSBleHRlbnRbMF07CgogICAgd2hpbGUgKHJhbmsgPD0gZXh0ZW50WzFdKSB7CiAgICAgIHRpY2tzLnB1c2gocmFuayk7CiAgICAgIHJhbmsrKzsKICAgIH0KCiAgICByZXR1cm4gdGlja3M7CiAgfSwKCiAgLyoqCiAgICogR2V0IGl0ZW0gb24gcmFuayBuCiAgICogQHBhcmFtIHtudW1iZXJ9IG4KICAgKiBAcmV0dXJuIHtzdHJpbmd9CiAgICovCiAgZ2V0TGFiZWw6IGZ1bmN0aW9uIGdldExhYmVsKG4pIHsKICAgIGlmICghdGhpcy5pc0JsYW5rKCkpIHsKICAgICAgLy8gTm90ZSB0aGF0IGlmIG5vIGRhdGEsIG9yZGluYWxNZXRhLmNhdGVnb3JpZXMgaXMgYW4gZW1wdHkgYXJyYXkuCiAgICAgIHJldHVybiB0aGlzLl9vcmRpbmFsTWV0YS5jYXRlZ29yaWVzW25dOwogICAgfQogIH0sCgogIC8qKgogICAqIEByZXR1cm4ge251bWJlcn0KICAgKi8KICBjb3VudDogZnVuY3Rpb24gY291bnQoKSB7CiAgICByZXR1cm4gdGhpcy5fZXh0ZW50WzFdIC0gdGhpcy5fZXh0ZW50WzBdICsgMTsKICB9LAoKICAvKioKICAgKiBAb3ZlcnJpZGUKICAgKi8KICB1bmlvbkV4dGVudEZyb21EYXRhOiBmdW5jdGlvbiB1bmlvbkV4dGVudEZyb21EYXRhKGRhdGEsIGRpbSkgewogICAgdGhpcy51bmlvbkV4dGVudChkYXRhLmdldEFwcHJveGltYXRlRXh0ZW50KGRpbSkpOwogIH0sCiAgZ2V0T3JkaW5hbE1ldGE6IGZ1bmN0aW9uIGdldE9yZGluYWxNZXRhKCkgewogICAgcmV0dXJuIHRoaXMuX29yZGluYWxNZXRhOwogIH0sCiAgbmljZVRpY2tzOiB6clV0aWwubm9vcCwKICBuaWNlRXh0ZW50OiB6clV0aWwubm9vcAp9KTsKLyoqCiAqIEByZXR1cm4ge21vZHVsZTplY2hhcnRzL3NjYWxlL1RpbWV9CiAqLwoKT3JkaW5hbFNjYWxlLmNyZWF0ZSA9IGZ1bmN0aW9uICgpIHsKICByZXR1cm4gbmV3IE9yZGluYWxTY2FsZSgpOwp9OwoKdmFyIF9kZWZhdWx0ID0gT3JkaW5hbFNjYWxlOwptb2R1bGUuZXhwb3J0cyA9IF9kZWZhdWx0Ow=="},{"version":3,"sources":["/Users/id-repair/Documents/SEOL/4c-dashboard/node_modules/echarts/lib/scale/Ordinal.js"],"names":["zrUtil","require","Scale","OrdinalMeta","scaleProto","prototype","OrdinalScale","extend","type","init","ordinalMeta","extent","isArray","categories","_ordinalMeta","_extent","length","parse","val","getOrdinal","Math","round","contain","rank","call","normalize","scale","getTicks","ticks","push","getLabel","n","isBlank","count","unionExtentFromData","data","dim","unionExtent","getApproximateExtent","getOrdinalMeta","niceTicks","noop","niceExtent","create","_default","module","exports"],"mappings":"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","sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar Scale = require(\"./Scale\");\n\nvar OrdinalMeta = require(\"../data/OrdinalMeta\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Linear continuous scale\n * @module echarts/coord/scale/Ordinal\n *\n * http://en.wikipedia.org/wiki/Level_of_measurement\n */\n// FIXME only one data\nvar scaleProto = Scale.prototype;\nvar OrdinalScale = Scale.extend({\n  type: 'ordinal',\n\n  /**\n   * @param {module:echarts/data/OrdianlMeta|Array.<string>} ordinalMeta\n   */\n  init: function (ordinalMeta, extent) {\n    // Caution: Should not use instanceof, consider ec-extensions using\n    // import approach to get OrdinalMeta class.\n    if (!ordinalMeta || zrUtil.isArray(ordinalMeta)) {\n      ordinalMeta = new OrdinalMeta({\n        categories: ordinalMeta\n      });\n    }\n\n    this._ordinalMeta = ordinalMeta;\n    this._extent = extent || [0, ordinalMeta.categories.length - 1];\n  },\n  parse: function (val) {\n    return typeof val === 'string' ? this._ordinalMeta.getOrdinal(val) // val might be float.\n    : Math.round(val);\n  },\n  contain: function (rank) {\n    rank = this.parse(rank);\n    return scaleProto.contain.call(this, rank) && this._ordinalMeta.categories[rank] != null;\n  },\n\n  /**\n   * Normalize given rank or name to linear [0, 1]\n   * @param {number|string} [val]\n   * @return {number}\n   */\n  normalize: function (val) {\n    return scaleProto.normalize.call(this, this.parse(val));\n  },\n  scale: function (val) {\n    return Math.round(scaleProto.scale.call(this, val));\n  },\n\n  /**\n   * @return {Array}\n   */\n  getTicks: function () {\n    var ticks = [];\n    var extent = this._extent;\n    var rank = extent[0];\n\n    while (rank <= extent[1]) {\n      ticks.push(rank);\n      rank++;\n    }\n\n    return ticks;\n  },\n\n  /**\n   * Get item on rank n\n   * @param {number} n\n   * @return {string}\n   */\n  getLabel: function (n) {\n    if (!this.isBlank()) {\n      // Note that if no data, ordinalMeta.categories is an empty array.\n      return this._ordinalMeta.categories[n];\n    }\n  },\n\n  /**\n   * @return {number}\n   */\n  count: function () {\n    return this._extent[1] - this._extent[0] + 1;\n  },\n\n  /**\n   * @override\n   */\n  unionExtentFromData: function (data, dim) {\n    this.unionExtent(data.getApproximateExtent(dim));\n  },\n  getOrdinalMeta: function () {\n    return this._ordinalMeta;\n  },\n  niceTicks: zrUtil.noop,\n  niceExtent: zrUtil.noop\n});\n/**\n * @return {module:echarts/scale/Time}\n */\n\nOrdinalScale.create = function () {\n  return new OrdinalScale();\n};\n\nvar _default = OrdinalScale;\nmodule.exports = _default;"]}]}