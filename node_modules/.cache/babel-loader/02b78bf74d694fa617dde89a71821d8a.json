{"remainingRequest":"/Users/id-repair/Documents/SEOL/4c-dashboard/node_modules/babel-loader/lib/index.js!/Users/id-repair/Documents/SEOL/4c-dashboard/node_modules/echarts/lib/component/visualMap/PiecewiseModel.js","dependencies":[{"path":"/Users/id-repair/Documents/SEOL/4c-dashboard/node_modules/echarts/lib/component/visualMap/PiecewiseModel.js","mtime":499162500000},{"path":"/Users/id-repair/Documents/SEOL/4c-dashboard/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/id-repair/Documents/SEOL/4c-dashboard/node_modules/babel-loader/lib/index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/id-repair/Documents/SEOL/4c-dashboard/node_modules/echarts/lib/component/visualMap/PiecewiseModel.js"],"names":["_config","require","__DEV__","zrUtil","VisualMapModel","VisualMapping","visualDefault","_number","reformIntervals","PiecewiseModel","extend","type","defaultOption","selected","minOpen","maxOpen","align","itemWidth","itemHeight","itemSymbol","pieceList","categories","splitNumber","selectedMode","itemGap","hoverLink","showLabel","optionUpdated","newOption","isInit","superApply","arguments","_pieceList","resetExtent","mode","_mode","_determineMode","resetMethods","call","_resetSelected","option","resetVisual","mappingOption","state","mappingMethod","clone","dataExtent","getExtent","map","piece","visual","completeVisualOption","visualTypesInPieces","visualTypes","listVisualTypes","isCategory","each","pieces","visualType","hasOwnProperty","v","exists","stateList","has","target","get","obj","isObject","prototype","apply","thisOption","index","key","getSelectedMapKey","hasSel","value","getPieceList","length","setSelected","getValueState","findPieceIndex","findTargetDataIndices","pieceIndex","result","eachTargetSeries","seriesModel","dataIndices","data","getData","getDataDimension","dataIndex","pIdx","push","seriesId","id","getRepresentValue","representValue","pieceInterval","interval","Infinity","getVisualMeta","getColorVisual","stops","outerColors","visualMapModel","setStop","valueState","color","slice","edge","unshift","curr","precision","Math","min","max","parseInt","splitStep","toFixed","close","text","formatValueText","cate","normalizeReverse","pieceListItem","item","label","closeList","infinityList","useMinMax","lg","names","i","retrieveVisuals","edgeSymbols","inverse","orient","reverse","_default","module","exports"],"mappings":";;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,IAAIA,OAAO,GAAGC,OAAO,CAAC,cAAD,CAArB;;AAEA,IAAIC,OAAO,GAAGF,OAAO,CAACE,OAAtB;;AAEA,IAAIC,MAAM,GAAGF,OAAO,CAAC,uBAAD,CAApB;;AAEA,IAAIG,cAAc,GAAGH,OAAO,CAAC,kBAAD,CAA5B;;AAEA,IAAII,aAAa,GAAGJ,OAAO,CAAC,4BAAD,CAA3B;;AAEA,IAAIK,aAAa,GAAGL,OAAO,CAAC,4BAAD,CAA3B;;AAEA,IAAIM,OAAO,GAAGN,OAAO,CAAC,mBAAD,CAArB;;AAEA,IAAIO,eAAe,GAAGD,OAAO,CAACC,eAA9B;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAIC,cAAc,GAAGL,cAAc,CAACM,MAAf,CAAsB;AACzCC,EAAAA,IAAI,EAAE,qBADmC;;AAGzC;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEE;AACF;AACA;AACEC,EAAAA,aAAa,EAAE;AACbC,IAAAA,QAAQ,EAAE,IADG;AAEb;AACA;AACA;AACA;AACAC,IAAAA,OAAO,EAAE,KANI;AAOb;AACAC,IAAAA,OAAO,EAAE,KARI;AASb;AACAC,IAAAA,KAAK,EAAE,MAVM;AAWb;AACAC,IAAAA,SAAS,EAAE,EAZE;AAab;AACA;AACAC,IAAAA,UAAU,EAAE,EAfC;AAgBb;AACA;AACAC,IAAAA,UAAU,EAAE,WAlBC;AAmBbC,IAAAA,SAAS,EAAE,IAnBE;AAoBb;AACA;AACA;AACA;AACA;AACAC,IAAAA,UAAU,EAAE,IAzBC;AA0Bb;AACA;AACAC,IAAAA,WAAW,EAAE,CA5BA;AA6Bb;AACA;AACA;AACA;AACAC,IAAAA,YAAY,EAAE,UAjCD;AAkCb;AACAC,IAAAA,OAAO,EAAE,EAnCI;AAoCb;AACAC,IAAAA,SAAS,EAAE,IArCE;AAsCb;AACAC,IAAAA,SAAS,EAAE,IAvCE,CAuCG;AAChB;;AAxCa,GA1B0B;;AAsEzC;AACF;AACA;AACEC,EAAAA,aAAa,EAAE,uBAAUC,SAAV,EAAqBC,MAArB,EAA6B;AAC1CpB,IAAAA,cAAc,CAACqB,UAAf,CAA0B,IAA1B,EAAgC,eAAhC,EAAiDC,SAAjD;AACA;AACJ;AACA;AACA;AACA;AACA;;AAEI,SAAKC,UAAL,GAAkB,EAAlB;AACA,SAAKC,WAAL;AACA;AACJ;AACA;AACA;;AAEI,QAAIC,IAAI,GAAG,KAAKC,KAAL,GAAa,KAAKC,cAAL,EAAxB;;AAEAC,IAAAA,YAAY,CAAC,KAAKF,KAAN,CAAZ,CAAyBG,IAAzB,CAA8B,IAA9B;;AAEA,SAAKC,cAAL,CAAoBX,SAApB,EAA+BC,MAA/B;;AAEA,QAAIR,UAAU,GAAG,KAAKmB,MAAL,CAAYnB,UAA7B;AACA,SAAKoB,WAAL,CAAiB,UAAUC,aAAV,EAAyBC,KAAzB,EAAgC;AAC/C,UAAIT,IAAI,KAAK,YAAb,EAA2B;AACzBQ,QAAAA,aAAa,CAACE,aAAd,GAA8B,UAA9B;AACAF,QAAAA,aAAa,CAACrB,UAAd,GAA2BlB,MAAM,CAAC0C,KAAP,CAAaxB,UAAb,CAA3B;AACD,OAHD,MAGO;AACLqB,QAAAA,aAAa,CAACI,UAAd,GAA2B,KAAKC,SAAL,EAA3B;AACAL,QAAAA,aAAa,CAACE,aAAd,GAA8B,WAA9B;AACAF,QAAAA,aAAa,CAACtB,SAAd,GAA0BjB,MAAM,CAAC6C,GAAP,CAAW,KAAKhB,UAAhB,EAA4B,UAAUiB,KAAV,EAAiB;AACrE,cAAIA,KAAK,GAAG9C,MAAM,CAAC0C,KAAP,CAAaI,KAAb,CAAZ;;AAEA,cAAIN,KAAK,KAAK,SAAd,EAAyB;AACvB;AACA;AACAM,YAAAA,KAAK,CAACC,MAAN,GAAe,IAAf;AACD;;AAED,iBAAOD,KAAP;AACD,SAVyB,CAA1B;AAWD;AACF,KAnBD;AAoBD,GApHwC;;AAsHzC;AACF;AACA;AACA;AACEE,EAAAA,oBAAoB,EAAE,gCAAY;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAIX,MAAM,GAAG,KAAKA,MAAlB;AACA,QAAIY,mBAAmB,GAAG,EAA1B;AACA,QAAIC,WAAW,GAAGhD,aAAa,CAACiD,eAAd,EAAlB;AACA,QAAIC,UAAU,GAAG,KAAKA,UAAL,EAAjB;AACApD,IAAAA,MAAM,CAACqD,IAAP,CAAYhB,MAAM,CAACiB,MAAnB,EAA2B,UAAUR,KAAV,EAAiB;AAC1C9C,MAAAA,MAAM,CAACqD,IAAP,CAAYH,WAAZ,EAAyB,UAAUK,UAAV,EAAsB;AAC7C,YAAIT,KAAK,CAACU,cAAN,CAAqBD,UAArB,CAAJ,EAAsC;AACpCN,UAAAA,mBAAmB,CAACM,UAAD,CAAnB,GAAkC,CAAlC;AACD;AACF,OAJD;AAKD,KAND;AAOAvD,IAAAA,MAAM,CAACqD,IAAP,CAAYJ,mBAAZ,EAAiC,UAAUQ,CAAV,EAAaF,UAAb,EAAyB;AACxD,UAAIG,MAAM,GAAG,CAAb;AACA1D,MAAAA,MAAM,CAACqD,IAAP,CAAY,KAAKM,SAAjB,EAA4B,UAAUnB,KAAV,EAAiB;AAC3CkB,QAAAA,MAAM,IAAIE,GAAG,CAACvB,MAAD,EAASG,KAAT,EAAgBe,UAAhB,CAAH,IAAkCK,GAAG,CAACvB,MAAM,CAACwB,MAAR,EAAgBrB,KAAhB,EAAuBe,UAAvB,CAA/C;AACD,OAFD,EAEG,IAFH;AAGA,OAACG,MAAD,IAAW1D,MAAM,CAACqD,IAAP,CAAY,KAAKM,SAAjB,EAA4B,UAAUnB,KAAV,EAAiB;AACtD,SAACH,MAAM,CAACG,KAAD,CAAN,KAAkBH,MAAM,CAACG,KAAD,CAAN,GAAgB,EAAlC,CAAD,EAAwCe,UAAxC,IAAsDpD,aAAa,CAAC2D,GAAd,CAAkBP,UAAlB,EAA8Bf,KAAK,KAAK,SAAV,GAAsB,QAAtB,GAAiC,UAA/D,EAA2EY,UAA3E,CAAtD;AACD,OAFU,CAAX;AAGD,KARD,EAQG,IARH;;AAUA,aAASQ,GAAT,CAAaG,GAAb,EAAkBvB,KAAlB,EAAyBe,UAAzB,EAAqC;AACnC,aAAOQ,GAAG,IAAIA,GAAG,CAACvB,KAAD,CAAV,KAAsBxC,MAAM,CAACgE,QAAP,CAAgBD,GAAG,CAACvB,KAAD,CAAnB,IAA8BuB,GAAG,CAACvB,KAAD,CAAH,CAAWgB,cAAX,CAA0BD,UAA1B,CAA9B,GAAsEQ,GAAG,CAACvB,KAAD,CAAH,KAAee,UAA3G,CAAsH;AAAtH,OAAP;AAED;;AAEDtD,IAAAA,cAAc,CAACgE,SAAf,CAAyBjB,oBAAzB,CAA8CkB,KAA9C,CAAoD,IAApD,EAA0DtC,SAA1D;AACD,GA7JwC;AA8JzCQ,EAAAA,cAAc,EAAE,wBAAUX,SAAV,EAAqBC,MAArB,EAA6B;AAC3C,QAAIyC,UAAU,GAAG,KAAK9B,MAAtB;AACA,QAAIpB,SAAS,GAAG,KAAKY,UAArB,CAF2C,CAEV;;AAEjC,QAAInB,QAAQ,GAAG,CAACgB,MAAM,GAAGyC,UAAH,GAAgB1C,SAAvB,EAAkCf,QAAlC,IAA8C,EAA7D;AACAyD,IAAAA,UAAU,CAACzD,QAAX,GAAsBA,QAAtB,CAL2C,CAKX;;AAEhCV,IAAAA,MAAM,CAACqD,IAAP,CAAYpC,SAAZ,EAAuB,UAAU6B,KAAV,EAAiBsB,KAAjB,EAAwB;AAC7C,UAAIC,GAAG,GAAG,KAAKC,iBAAL,CAAuBxB,KAAvB,CAAV;;AAEA,UAAI,CAACpC,QAAQ,CAAC8C,cAAT,CAAwBa,GAAxB,CAAL,EAAmC;AACjC3D,QAAAA,QAAQ,CAAC2D,GAAD,CAAR,GAAgB,IAAhB;AACD;AACF,KAND,EAMG,IANH;;AAQA,QAAIF,UAAU,CAAC/C,YAAX,KAA4B,QAAhC,EAA0C;AACxC;AACA,UAAImD,MAAM,GAAG,KAAb;AACAvE,MAAAA,MAAM,CAACqD,IAAP,CAAYpC,SAAZ,EAAuB,UAAU6B,KAAV,EAAiBsB,KAAjB,EAAwB;AAC7C,YAAIC,GAAG,GAAG,KAAKC,iBAAL,CAAuBxB,KAAvB,CAAV;;AAEA,YAAIpC,QAAQ,CAAC2D,GAAD,CAAZ,EAAmB;AACjBE,UAAAA,MAAM,GAAG7D,QAAQ,CAAC2D,GAAD,CAAR,GAAgB,KAAnB,GAA2BE,MAAM,GAAG,IAA1C;AACD;AACF,OAND,EAMG,IANH;AAOD,KAzB0C,CAyBzC;;AAEH,GAzLwC;;AA2LzC;AACF;AACA;AACED,EAAAA,iBAAiB,EAAE,2BAAUxB,KAAV,EAAiB;AAClC,WAAO,KAAKd,KAAL,KAAe,YAAf,GAA8Bc,KAAK,CAAC0B,KAAN,GAAc,EAA5C,GAAiD1B,KAAK,CAACsB,KAAN,GAAc,EAAtE;AACD,GAhMwC;;AAkMzC;AACF;AACA;AACEK,EAAAA,YAAY,EAAE,wBAAY;AACxB,WAAO,KAAK5C,UAAZ;AACD,GAvMwC;;AAyMzC;AACF;AACA;AACA;AACEI,EAAAA,cAAc,EAAE,0BAAY;AAC1B,QAAII,MAAM,GAAG,KAAKA,MAAlB;AACA,WAAOA,MAAM,CAACiB,MAAP,IAAiBjB,MAAM,CAACiB,MAAP,CAAcoB,MAAd,GAAuB,CAAxC,GAA4C,QAA5C,GAAuD,KAAKrC,MAAL,CAAYnB,UAAZ,GAAyB,YAAzB,GAAwC,aAAtG;AACD,GAhNwC;;AAkNzC;AACF;AACA;AACA;AACEyD,EAAAA,WAAW,EAAE,qBAAUjE,QAAV,EAAoB;AAC/B,SAAK2B,MAAL,CAAY3B,QAAZ,GAAuBV,MAAM,CAAC0C,KAAP,CAAahC,QAAb,CAAvB;AACD,GAxNwC;;AA0NzC;AACF;AACA;AACA;AACEkE,EAAAA,aAAa,EAAE,uBAAUJ,KAAV,EAAiB;AAC9B,QAAIJ,KAAK,GAAGlE,aAAa,CAAC2E,cAAd,CAA6BL,KAA7B,EAAoC,KAAK3C,UAAzC,CAAZ;AACA,WAAOuC,KAAK,IAAI,IAAT,GAAgB,KAAK/B,MAAL,CAAY3B,QAAZ,CAAqB,KAAK4D,iBAAL,CAAuB,KAAKzC,UAAL,CAAgBuC,KAAhB,CAAvB,CAArB,IAAuE,SAAvE,GAAmF,YAAnG,GAAkH,YAAzH;AACD,GAjOwC;;AAmOzC;AACF;AACA;AACA;AACA;AACEU,EAAAA,qBAAqB,EAAE,+BAAUC,UAAV,EAAsB;AAC3C,QAAIC,MAAM,GAAG,EAAb;AACA,SAAKC,gBAAL,CAAsB,UAAUC,WAAV,EAAuB;AAC3C,UAAIC,WAAW,GAAG,EAAlB;AACA,UAAIC,IAAI,GAAGF,WAAW,CAACG,OAAZ,EAAX;AACAD,MAAAA,IAAI,CAAC/B,IAAL,CAAU,KAAKiC,gBAAL,CAAsBF,IAAtB,CAAV,EAAuC,UAAUZ,KAAV,EAAiBe,SAAjB,EAA4B;AACjE;AACA,YAAIC,IAAI,GAAGtF,aAAa,CAAC2E,cAAd,CAA6BL,KAA7B,EAAoC,KAAK3C,UAAzC,CAAX;AACA2D,QAAAA,IAAI,KAAKT,UAAT,IAAuBI,WAAW,CAACM,IAAZ,CAAiBF,SAAjB,CAAvB;AACD,OAJD,EAIG,IAJH;AAKAP,MAAAA,MAAM,CAACS,IAAP,CAAY;AACVC,QAAAA,QAAQ,EAAER,WAAW,CAACS,EADZ;AAEVJ,QAAAA,SAAS,EAAEJ;AAFD,OAAZ;AAID,KAZD,EAYG,IAZH;AAaA,WAAOH,MAAP;AACD,GAxPwC;;AA0PzC;AACF;AACA;AACA;AACA;AACEY,EAAAA,iBAAiB,EAAE,2BAAU9C,KAAV,EAAiB;AAClC,QAAI+C,cAAJ;;AAEA,QAAI,KAAKzC,UAAL,EAAJ,EAAuB;AACrByC,MAAAA,cAAc,GAAG/C,KAAK,CAAC0B,KAAvB;AACD,KAFD,MAEO;AACL,UAAI1B,KAAK,CAAC0B,KAAN,IAAe,IAAnB,EAAyB;AACvBqB,QAAAA,cAAc,GAAG/C,KAAK,CAAC0B,KAAvB;AACD,OAFD,MAEO;AACL,YAAIsB,aAAa,GAAGhD,KAAK,CAACiD,QAAN,IAAkB,EAAtC;AACAF,QAAAA,cAAc,GAAGC,aAAa,CAAC,CAAD,CAAb,KAAqB,CAACE,QAAtB,IAAkCF,aAAa,CAAC,CAAD,CAAb,KAAqBE,QAAvD,GAAkE,CAAlE,GAAsE,CAACF,aAAa,CAAC,CAAD,CAAb,GAAmBA,aAAa,CAAC,CAAD,CAAjC,IAAwC,CAA/H;AACD;AACF;;AAED,WAAOD,cAAP;AACD,GA9QwC;AA+QzCI,EAAAA,aAAa,EAAE,uBAAUC,cAAV,EAA0B;AACvC;AACA,QAAI,KAAK9C,UAAL,EAAJ,EAAuB;AACrB;AACD;;AAED,QAAI+C,KAAK,GAAG,EAAZ;AACA,QAAIC,WAAW,GAAG,EAAlB;AACA,QAAIC,cAAc,GAAG,IAArB;;AAEA,aAASC,OAAT,CAAiBP,QAAjB,EAA2BQ,UAA3B,EAAuC;AACrC,UAAIV,cAAc,GAAGQ,cAAc,CAACT,iBAAf,CAAiC;AACpDG,QAAAA,QAAQ,EAAEA;AAD0C,OAAjC,CAArB;;AAIA,UAAI,CAACQ,UAAL,EAAiB;AACfA,QAAAA,UAAU,GAAGF,cAAc,CAACzB,aAAf,CAA6BiB,cAA7B,CAAb;AACD;;AAED,UAAIW,KAAK,GAAGN,cAAc,CAACL,cAAD,EAAiBU,UAAjB,CAA1B;;AAEA,UAAIR,QAAQ,CAAC,CAAD,CAAR,KAAgB,CAACC,QAArB,EAA+B;AAC7BI,QAAAA,WAAW,CAAC,CAAD,CAAX,GAAiBI,KAAjB;AACD,OAFD,MAEO,IAAIT,QAAQ,CAAC,CAAD,CAAR,KAAgBC,QAApB,EAA8B;AACnCI,QAAAA,WAAW,CAAC,CAAD,CAAX,GAAiBI,KAAjB;AACD,OAFM,MAEA;AACLL,QAAAA,KAAK,CAACV,IAAN,CAAW;AACTjB,UAAAA,KAAK,EAAEuB,QAAQ,CAAC,CAAD,CADN;AAETS,UAAAA,KAAK,EAAEA;AAFE,SAAX,EAGG;AACDhC,UAAAA,KAAK,EAAEuB,QAAQ,CAAC,CAAD,CADd;AAEDS,UAAAA,KAAK,EAAEA;AAFN,SAHH;AAOD;AACF,KAlCsC,CAkCrC;;;AAGF,QAAIvF,SAAS,GAAG,KAAKY,UAAL,CAAgB4E,KAAhB,EAAhB;;AAEA,QAAI,CAACxF,SAAS,CAACyD,MAAf,EAAuB;AACrBzD,MAAAA,SAAS,CAACwE,IAAV,CAAe;AACbM,QAAAA,QAAQ,EAAE,CAAC,CAACC,QAAF,EAAYA,QAAZ;AADG,OAAf;AAGD,KAJD,MAIO;AACL,UAAIU,IAAI,GAAGzF,SAAS,CAAC,CAAD,CAAT,CAAa8E,QAAb,CAAsB,CAAtB,CAAX;AACAW,MAAAA,IAAI,KAAK,CAACV,QAAV,IAAsB/E,SAAS,CAAC0F,OAAV,CAAkB;AACtCZ,QAAAA,QAAQ,EAAE,CAAC,CAACC,QAAF,EAAYU,IAAZ;AAD4B,OAAlB,CAAtB;AAGAA,MAAAA,IAAI,GAAGzF,SAAS,CAACA,SAAS,CAACyD,MAAV,GAAmB,CAApB,CAAT,CAAgCqB,QAAhC,CAAyC,CAAzC,CAAP;AACAW,MAAAA,IAAI,KAAKV,QAAT,IAAqB/E,SAAS,CAACwE,IAAV,CAAe;AAClCM,QAAAA,QAAQ,EAAE,CAACW,IAAD,EAAOV,QAAP;AADwB,OAAf,CAArB;AAGD;;AAED,QAAIY,IAAI,GAAG,CAACZ,QAAZ;AACAhG,IAAAA,MAAM,CAACqD,IAAP,CAAYpC,SAAZ,EAAuB,UAAU6B,KAAV,EAAiB;AACtC,UAAIiD,QAAQ,GAAGjD,KAAK,CAACiD,QAArB;;AAEA,UAAIA,QAAJ,EAAc;AACZ;AACAA,QAAAA,QAAQ,CAAC,CAAD,CAAR,GAAca,IAAd,IAAsBN,OAAO,CAAC,CAACM,IAAD,EAAOb,QAAQ,CAAC,CAAD,CAAf,CAAD,EAAsB,YAAtB,CAA7B;AACAO,QAAAA,OAAO,CAACP,QAAQ,CAACU,KAAT,EAAD,CAAP;AACAG,QAAAA,IAAI,GAAGb,QAAQ,CAAC,CAAD,CAAf;AACD;AACF,KATD,EASG,IATH;AAUA,WAAO;AACLI,MAAAA,KAAK,EAAEA,KADF;AAELC,MAAAA,WAAW,EAAEA;AAFR,KAAP;AAID;AApVwC,CAAtB,CAArB;AAsVA;AACA;AACA;AACA;AACA;;AAEA,IAAIlE,YAAY,GAAG;AACjBf,EAAAA,WAAW,EAAE,uBAAY;AACvB,QAAIgD,UAAU,GAAG,KAAK9B,MAAtB;AACA,QAAIpB,SAAS,GAAG,KAAKY,UAArB;AACA,QAAIgF,SAAS,GAAGC,IAAI,CAACC,GAAL,CAAS5C,UAAU,CAAC0C,SAApB,EAA+B,EAA/B,CAAhB;AACA,QAAIlE,UAAU,GAAG,KAAKC,SAAL,EAAjB;AACA,QAAIzB,WAAW,GAAGgD,UAAU,CAAChD,WAA7B;AACAA,IAAAA,WAAW,GAAG2F,IAAI,CAACE,GAAL,CAASC,QAAQ,CAAC9F,WAAD,EAAc,EAAd,CAAjB,EAAoC,CAApC,CAAd;AACAgD,IAAAA,UAAU,CAAChD,WAAX,GAAyBA,WAAzB;AACA,QAAI+F,SAAS,GAAG,CAACvE,UAAU,CAAC,CAAD,CAAV,GAAgBA,UAAU,CAAC,CAAD,CAA3B,IAAkCxB,WAAlD,CARuB,CAQwC;;AAE/D,WAAO,CAAC+F,SAAS,CAACC,OAAV,CAAkBN,SAAlB,CAAD,KAAkCK,SAAlC,IAA+CL,SAAS,GAAG,CAAlE,EAAqE;AACnEA,MAAAA,SAAS;AACV;;AAED1C,IAAAA,UAAU,CAAC0C,SAAX,GAAuBA,SAAvB;AACAK,IAAAA,SAAS,GAAG,CAACA,SAAS,CAACC,OAAV,CAAkBN,SAAlB,CAAb;;AAEA,QAAI1C,UAAU,CAACxD,OAAf,EAAwB;AACtBM,MAAAA,SAAS,CAACwE,IAAV,CAAe;AACbM,QAAAA,QAAQ,EAAE,CAAC,CAACC,QAAF,EAAYrD,UAAU,CAAC,CAAD,CAAtB,CADG;AAEbyE,QAAAA,KAAK,EAAE,CAAC,CAAD,EAAI,CAAJ;AAFM,OAAf;AAID;;AAED,SAAK,IAAIhD,KAAK,GAAG,CAAZ,EAAewC,IAAI,GAAGjE,UAAU,CAAC,CAAD,CAArC,EAA0CyB,KAAK,GAAGjD,WAAlD,EAA+DyF,IAAI,IAAIM,SAAR,EAAmB9C,KAAK,EAAvF,EAA2F;AACzF,UAAI4C,GAAG,GAAG5C,KAAK,KAAKjD,WAAW,GAAG,CAAxB,GAA4BwB,UAAU,CAAC,CAAD,CAAtC,GAA4CiE,IAAI,GAAGM,SAA7D;AACAjG,MAAAA,SAAS,CAACwE,IAAV,CAAe;AACbM,QAAAA,QAAQ,EAAE,CAACa,IAAD,EAAOI,GAAP,CADG;AAEbI,QAAAA,KAAK,EAAE,CAAC,CAAD,EAAI,CAAJ;AAFM,OAAf;AAID;;AAED,QAAIjD,UAAU,CAACvD,OAAf,EAAwB;AACtBK,MAAAA,SAAS,CAACwE,IAAV,CAAe;AACbM,QAAAA,QAAQ,EAAE,CAACpD,UAAU,CAAC,CAAD,CAAX,EAAgBqD,QAAhB,CADG;AAEboB,QAAAA,KAAK,EAAE,CAAC,CAAD,EAAI,CAAJ;AAFM,OAAf;AAID;;AAED/G,IAAAA,eAAe,CAACY,SAAD,CAAf;AACAjB,IAAAA,MAAM,CAACqD,IAAP,CAAYpC,SAAZ,EAAuB,UAAU6B,KAAV,EAAiBsB,KAAjB,EAAwB;AAC7CtB,MAAAA,KAAK,CAACsB,KAAN,GAAcA,KAAd;AACAtB,MAAAA,KAAK,CAACuE,IAAN,GAAa,KAAKC,eAAL,CAAqBxE,KAAK,CAACiD,QAA3B,CAAb;AACD,KAHD,EAGG,IAHH;AAID,GA7CgB;AA8CjB7E,EAAAA,UAAU,EAAE,sBAAY;AACtB,QAAIiD,UAAU,GAAG,KAAK9B,MAAtB;AACArC,IAAAA,MAAM,CAACqD,IAAP,CAAYc,UAAU,CAACjD,UAAvB,EAAmC,UAAUqG,IAAV,EAAgB;AACjD;AACA;AACA,WAAK1F,UAAL,CAAgB4D,IAAhB,CAAqB;AACnB4B,QAAAA,IAAI,EAAE,KAAKC,eAAL,CAAqBC,IAArB,EAA2B,IAA3B,CADa;AAEnB/C,QAAAA,KAAK,EAAE+C;AAFY,OAArB;AAID,KAPD,EAOG,IAPH,EAFsB,CASZ;;AAEVC,IAAAA,gBAAgB,CAACrD,UAAD,EAAa,KAAKtC,UAAlB,CAAhB;AACD,GA1DgB;AA2DjByB,EAAAA,MAAM,EAAE,kBAAY;AAClB,QAAIa,UAAU,GAAG,KAAK9B,MAAtB;AACA,QAAIpB,SAAS,GAAG,KAAKY,UAArB;AACA7B,IAAAA,MAAM,CAACqD,IAAP,CAAYc,UAAU,CAACb,MAAvB,EAA+B,UAAUmE,aAAV,EAAyBrD,KAAzB,EAAgC;AAC7D,UAAI,CAACpE,MAAM,CAACgE,QAAP,CAAgByD,aAAhB,CAAL,EAAqC;AACnCA,QAAAA,aAAa,GAAG;AACdjD,UAAAA,KAAK,EAAEiD;AADO,SAAhB;AAGD;;AAED,UAAIC,IAAI,GAAG;AACTL,QAAAA,IAAI,EAAE,EADG;AAETjD,QAAAA,KAAK,EAAEA;AAFE,OAAX;;AAKA,UAAIqD,aAAa,CAACE,KAAd,IAAuB,IAA3B,EAAiC;AAC/BD,QAAAA,IAAI,CAACL,IAAL,GAAYI,aAAa,CAACE,KAA1B;AACD;;AAED,UAAIF,aAAa,CAACjE,cAAd,CAA6B,OAA7B,CAAJ,EAA2C;AACzC,YAAIgB,KAAK,GAAGkD,IAAI,CAAClD,KAAL,GAAaiD,aAAa,CAACjD,KAAvC;AACAkD,QAAAA,IAAI,CAAC3B,QAAL,GAAgB,CAACvB,KAAD,EAAQA,KAAR,CAAhB;AACAkD,QAAAA,IAAI,CAACN,KAAL,GAAa,CAAC,CAAD,EAAI,CAAJ,CAAb;AACD,OAJD,MAIO;AACL;AACA;AACA,YAAIrB,QAAQ,GAAG2B,IAAI,CAAC3B,QAAL,GAAgB,EAA/B;AACA,YAAIqB,KAAK,GAAGM,IAAI,CAACN,KAAL,GAAa,CAAC,CAAD,EAAI,CAAJ,CAAzB;AACA,YAAIQ,SAAS,GAAG,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAAhB;AACA,YAAIC,YAAY,GAAG,CAAC,CAAC7B,QAAF,EAAYA,QAAZ,CAAnB;AACA,YAAI8B,SAAS,GAAG,EAAhB;;AAEA,aAAK,IAAIC,EAAE,GAAG,CAAd,EAAiBA,EAAE,GAAG,CAAtB,EAAyBA,EAAE,EAA3B,EAA+B;AAC7B,cAAIC,KAAK,GAAG,CAAC,CAAC,KAAD,EAAQ,IAAR,EAAc,KAAd,CAAD,EAAuB,CAAC,KAAD,EAAQ,IAAR,EAAc,KAAd,CAAvB,EAA6CD,EAA7C,CAAZ;;AAEA,eAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAAJ,IAASlC,QAAQ,CAACgC,EAAD,CAAR,IAAgB,IAAzC,EAA+CE,CAAC,EAAhD,EAAoD;AAClDlC,YAAAA,QAAQ,CAACgC,EAAD,CAAR,GAAeN,aAAa,CAACO,KAAK,CAACC,CAAD,CAAN,CAA5B;AACAb,YAAAA,KAAK,CAACW,EAAD,CAAL,GAAYH,SAAS,CAACK,CAAD,CAArB;AACAH,YAAAA,SAAS,CAACC,EAAD,CAAT,GAAgBE,CAAC,KAAK,CAAtB;AACD;;AAEDlC,UAAAA,QAAQ,CAACgC,EAAD,CAAR,IAAgB,IAAhB,KAAyBhC,QAAQ,CAACgC,EAAD,CAAR,GAAeF,YAAY,CAACE,EAAD,CAApD;AACD;;AAEDD,QAAAA,SAAS,CAAC,CAAD,CAAT,IAAgB/B,QAAQ,CAAC,CAAD,CAAR,KAAgBC,QAAhC,KAA6CoB,KAAK,CAAC,CAAD,CAAL,GAAW,CAAxD;AACAU,QAAAA,SAAS,CAAC,CAAD,CAAT,IAAgB/B,QAAQ,CAAC,CAAD,CAAR,KAAgB,CAACC,QAAjC,KAA8CoB,KAAK,CAAC,CAAD,CAAL,GAAW,CAAzD;;AAEA,YAAIrB,QAAQ,CAAC,CAAD,CAAR,KAAgBA,QAAQ,CAAC,CAAD,CAAxB,IAA+BqB,KAAK,CAAC,CAAD,CAApC,IAA2CA,KAAK,CAAC,CAAD,CAApD,EAAyD;AACvD;AACA;AACAM,UAAAA,IAAI,CAAClD,KAAL,GAAauB,QAAQ,CAAC,CAAD,CAArB;AACD;AACF;;AAED2B,MAAAA,IAAI,CAAC3E,MAAL,GAAc7C,aAAa,CAACgI,eAAd,CAA8BT,aAA9B,CAAd;AACAxG,MAAAA,SAAS,CAACwE,IAAV,CAAeiC,IAAf;AACD,KArDD,EAqDG,IArDH,EAHkB,CAwDR;;AAEVF,IAAAA,gBAAgB,CAACrD,UAAD,EAAalD,SAAb,CAAhB,CA1DkB,CA0DuB;;AAEzCZ,IAAAA,eAAe,CAACY,SAAD,CAAf;AACAjB,IAAAA,MAAM,CAACqD,IAAP,CAAYpC,SAAZ,EAAuB,UAAU6B,KAAV,EAAiB;AACtC,UAAIsE,KAAK,GAAGtE,KAAK,CAACsE,KAAlB;AACA,UAAIe,WAAW,GAAG,CAAC,CAAC,GAAD,EAAM,GAAN,EAAWf,KAAK,CAAC,CAAD,CAAhB,CAAD,EAAuB,CAAC,GAAD,EAAM,GAAN,EAAWA,KAAK,CAAC,CAAD,CAAhB,CAAvB,CAAlB;AACAtE,MAAAA,KAAK,CAACuE,IAAN,GAAavE,KAAK,CAACuE,IAAN,IAAc,KAAKC,eAAL,CAAqBxE,KAAK,CAAC0B,KAAN,IAAe,IAAf,GAAsB1B,KAAK,CAAC0B,KAA5B,GAAoC1B,KAAK,CAACiD,QAA/D,EAAyE,KAAzE,EAAgFoC,WAAhF,CAA3B;AACD,KAJD,EAIG,IAJH;AAKD;AA7HgB,CAAnB;;AAgIA,SAASX,gBAAT,CAA0BrD,UAA1B,EAAsClD,SAAtC,EAAiD;AAC/C,MAAImH,OAAO,GAAGjE,UAAU,CAACiE,OAAzB;;AAEA,MAAIjE,UAAU,CAACkE,MAAX,KAAsB,UAAtB,GAAmC,CAACD,OAApC,GAA8CA,OAAlD,EAA2D;AACzDnH,IAAAA,SAAS,CAACqH,OAAV;AACD;AACF;;AAED,IAAIC,QAAQ,GAAGjI,cAAf;AACAkI,MAAM,CAACC,OAAP,GAAiBF,QAAjB","sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar VisualMapModel = require(\"./VisualMapModel\");\n\nvar VisualMapping = require(\"../../visual/VisualMapping\");\n\nvar visualDefault = require(\"../../visual/visualDefault\");\n\nvar _number = require(\"../../util/number\");\n\nvar reformIntervals = _number.reformIntervals;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar PiecewiseModel = VisualMapModel.extend({\n  type: 'visualMap.piecewise',\n\n  /**\n   * Order Rule:\n   *\n   * option.categories / option.pieces / option.text / option.selected:\n   *     If !option.inverse,\n   *     Order when vertical: ['top', ..., 'bottom'].\n   *     Order when horizontal: ['left', ..., 'right'].\n   *     If option.inverse, the meaning of\n   *     the order should be reversed.\n   *\n   * this._pieceList:\n   *     The order is always [low, ..., high].\n   *\n   * Mapping from location to low-high:\n   *     If !option.inverse\n   *     When vertical, top is high.\n   *     When horizontal, right is high.\n   *     If option.inverse, reverse.\n   */\n\n  /**\n   * @protected\n   */\n  defaultOption: {\n    selected: null,\n    // Object. If not specified, means selected.\n    // When pieces and splitNumber: {'0': true, '5': true}\n    // When categories: {'cate1': false, 'cate3': true}\n    // When selected === false, means all unselected.\n    minOpen: false,\n    // Whether include values that smaller than `min`.\n    maxOpen: false,\n    // Whether include values that bigger than `max`.\n    align: 'auto',\n    // 'auto', 'left', 'right'\n    itemWidth: 20,\n    // When put the controller vertically, it is the length of\n    // horizontal side of each item. Otherwise, vertical side.\n    itemHeight: 14,\n    // When put the controller vertically, it is the length of\n    // vertical side of each item. Otherwise, horizontal side.\n    itemSymbol: 'roundRect',\n    pieceList: null,\n    // Each item is Object, with some of those attrs:\n    // {min, max, lt, gt, lte, gte, value,\n    // color, colorSaturation, colorAlpha, opacity,\n    // symbol, symbolSize}, which customize the range or visual\n    // coding of the certain piece. Besides, see \"Order Rule\".\n    categories: null,\n    // category names, like: ['some1', 'some2', 'some3'].\n    // Attr min/max are ignored when categories set. See \"Order Rule\"\n    splitNumber: 5,\n    // If set to 5, auto split five pieces equally.\n    // If set to 0 and component type not set, component type will be\n    // determined as \"continuous\". (It is less reasonable but for ec2\n    // compatibility, see echarts/component/visualMap/typeDefaulter)\n    selectedMode: 'multiple',\n    // Can be 'multiple' or 'single'.\n    itemGap: 10,\n    // The gap between two items, in px.\n    hoverLink: true,\n    // Enable hover highlight.\n    showLabel: null // By default, when text is used, label will hide (the logic\n    // is remained for compatibility reason)\n\n  },\n\n  /**\n   * @override\n   */\n  optionUpdated: function (newOption, isInit) {\n    PiecewiseModel.superApply(this, 'optionUpdated', arguments);\n    /**\n     * The order is always [low, ..., high].\n     * [{text: string, interval: Array.<number>}, ...]\n     * @private\n     * @type {Array.<Object>}\n     */\n\n    this._pieceList = [];\n    this.resetExtent();\n    /**\n     * 'pieces', 'categories', 'splitNumber'\n     * @type {string}\n     */\n\n    var mode = this._mode = this._determineMode();\n\n    resetMethods[this._mode].call(this);\n\n    this._resetSelected(newOption, isInit);\n\n    var categories = this.option.categories;\n    this.resetVisual(function (mappingOption, state) {\n      if (mode === 'categories') {\n        mappingOption.mappingMethod = 'category';\n        mappingOption.categories = zrUtil.clone(categories);\n      } else {\n        mappingOption.dataExtent = this.getExtent();\n        mappingOption.mappingMethod = 'piecewise';\n        mappingOption.pieceList = zrUtil.map(this._pieceList, function (piece) {\n          var piece = zrUtil.clone(piece);\n\n          if (state !== 'inRange') {\n            // FIXME\n            // outOfRange do not support special visual in pieces.\n            piece.visual = null;\n          }\n\n          return piece;\n        });\n      }\n    });\n  },\n\n  /**\n   * @protected\n   * @override\n   */\n  completeVisualOption: function () {\n    // Consider this case:\n    // visualMap: {\n    //      pieces: [{symbol: 'circle', lt: 0}, {symbol: 'rect', gte: 0}]\n    // }\n    // where no inRange/outOfRange set but only pieces. So we should make\n    // default inRange/outOfRange for this case, otherwise visuals that only\n    // appear in `pieces` will not be taken into account in visual encoding.\n    var option = this.option;\n    var visualTypesInPieces = {};\n    var visualTypes = VisualMapping.listVisualTypes();\n    var isCategory = this.isCategory();\n    zrUtil.each(option.pieces, function (piece) {\n      zrUtil.each(visualTypes, function (visualType) {\n        if (piece.hasOwnProperty(visualType)) {\n          visualTypesInPieces[visualType] = 1;\n        }\n      });\n    });\n    zrUtil.each(visualTypesInPieces, function (v, visualType) {\n      var exists = 0;\n      zrUtil.each(this.stateList, function (state) {\n        exists |= has(option, state, visualType) || has(option.target, state, visualType);\n      }, this);\n      !exists && zrUtil.each(this.stateList, function (state) {\n        (option[state] || (option[state] = {}))[visualType] = visualDefault.get(visualType, state === 'inRange' ? 'active' : 'inactive', isCategory);\n      });\n    }, this);\n\n    function has(obj, state, visualType) {\n      return obj && obj[state] && (zrUtil.isObject(obj[state]) ? obj[state].hasOwnProperty(visualType) : obj[state] === visualType // e.g., inRange: 'symbol'\n      );\n    }\n\n    VisualMapModel.prototype.completeVisualOption.apply(this, arguments);\n  },\n  _resetSelected: function (newOption, isInit) {\n    var thisOption = this.option;\n    var pieceList = this._pieceList; // Selected do not merge but all override.\n\n    var selected = (isInit ? thisOption : newOption).selected || {};\n    thisOption.selected = selected; // Consider 'not specified' means true.\n\n    zrUtil.each(pieceList, function (piece, index) {\n      var key = this.getSelectedMapKey(piece);\n\n      if (!selected.hasOwnProperty(key)) {\n        selected[key] = true;\n      }\n    }, this);\n\n    if (thisOption.selectedMode === 'single') {\n      // Ensure there is only one selected.\n      var hasSel = false;\n      zrUtil.each(pieceList, function (piece, index) {\n        var key = this.getSelectedMapKey(piece);\n\n        if (selected[key]) {\n          hasSel ? selected[key] = false : hasSel = true;\n        }\n      }, this);\n    } // thisOption.selectedMode === 'multiple', default: all selected.\n\n  },\n\n  /**\n   * @public\n   */\n  getSelectedMapKey: function (piece) {\n    return this._mode === 'categories' ? piece.value + '' : piece.index + '';\n  },\n\n  /**\n   * @public\n   */\n  getPieceList: function () {\n    return this._pieceList;\n  },\n\n  /**\n   * @private\n   * @return {string}\n   */\n  _determineMode: function () {\n    var option = this.option;\n    return option.pieces && option.pieces.length > 0 ? 'pieces' : this.option.categories ? 'categories' : 'splitNumber';\n  },\n\n  /**\n   * @public\n   * @override\n   */\n  setSelected: function (selected) {\n    this.option.selected = zrUtil.clone(selected);\n  },\n\n  /**\n   * @public\n   * @override\n   */\n  getValueState: function (value) {\n    var index = VisualMapping.findPieceIndex(value, this._pieceList);\n    return index != null ? this.option.selected[this.getSelectedMapKey(this._pieceList[index])] ? 'inRange' : 'outOfRange' : 'outOfRange';\n  },\n\n  /**\n   * @public\n   * @params {number} pieceIndex piece index in visualMapModel.getPieceList()\n   * @return {Array.<Object>} [{seriesId, dataIndex: <Array.<number>>}, ...]\n   */\n  findTargetDataIndices: function (pieceIndex) {\n    var result = [];\n    this.eachTargetSeries(function (seriesModel) {\n      var dataIndices = [];\n      var data = seriesModel.getData();\n      data.each(this.getDataDimension(data), function (value, dataIndex) {\n        // Should always base on model pieceList, because it is order sensitive.\n        var pIdx = VisualMapping.findPieceIndex(value, this._pieceList);\n        pIdx === pieceIndex && dataIndices.push(dataIndex);\n      }, this);\n      result.push({\n        seriesId: seriesModel.id,\n        dataIndex: dataIndices\n      });\n    }, this);\n    return result;\n  },\n\n  /**\n   * @private\n   * @param {Object} piece piece.value or piece.interval is required.\n   * @return {number} Can be Infinity or -Infinity\n   */\n  getRepresentValue: function (piece) {\n    var representValue;\n\n    if (this.isCategory()) {\n      representValue = piece.value;\n    } else {\n      if (piece.value != null) {\n        representValue = piece.value;\n      } else {\n        var pieceInterval = piece.interval || [];\n        representValue = pieceInterval[0] === -Infinity && pieceInterval[1] === Infinity ? 0 : (pieceInterval[0] + pieceInterval[1]) / 2;\n      }\n    }\n\n    return representValue;\n  },\n  getVisualMeta: function (getColorVisual) {\n    // Do not support category. (category axis is ordinal, numerical)\n    if (this.isCategory()) {\n      return;\n    }\n\n    var stops = [];\n    var outerColors = [];\n    var visualMapModel = this;\n\n    function setStop(interval, valueState) {\n      var representValue = visualMapModel.getRepresentValue({\n        interval: interval\n      });\n\n      if (!valueState) {\n        valueState = visualMapModel.getValueState(representValue);\n      }\n\n      var color = getColorVisual(representValue, valueState);\n\n      if (interval[0] === -Infinity) {\n        outerColors[0] = color;\n      } else if (interval[1] === Infinity) {\n        outerColors[1] = color;\n      } else {\n        stops.push({\n          value: interval[0],\n          color: color\n        }, {\n          value: interval[1],\n          color: color\n        });\n      }\n    } // Suplement\n\n\n    var pieceList = this._pieceList.slice();\n\n    if (!pieceList.length) {\n      pieceList.push({\n        interval: [-Infinity, Infinity]\n      });\n    } else {\n      var edge = pieceList[0].interval[0];\n      edge !== -Infinity && pieceList.unshift({\n        interval: [-Infinity, edge]\n      });\n      edge = pieceList[pieceList.length - 1].interval[1];\n      edge !== Infinity && pieceList.push({\n        interval: [edge, Infinity]\n      });\n    }\n\n    var curr = -Infinity;\n    zrUtil.each(pieceList, function (piece) {\n      var interval = piece.interval;\n\n      if (interval) {\n        // Fulfill gap.\n        interval[0] > curr && setStop([curr, interval[0]], 'outOfRange');\n        setStop(interval.slice());\n        curr = interval[1];\n      }\n    }, this);\n    return {\n      stops: stops,\n      outerColors: outerColors\n    };\n  }\n});\n/**\n * Key is this._mode\n * @type {Object}\n * @this {module:echarts/component/viusalMap/PiecewiseMode}\n */\n\nvar resetMethods = {\n  splitNumber: function () {\n    var thisOption = this.option;\n    var pieceList = this._pieceList;\n    var precision = Math.min(thisOption.precision, 20);\n    var dataExtent = this.getExtent();\n    var splitNumber = thisOption.splitNumber;\n    splitNumber = Math.max(parseInt(splitNumber, 10), 1);\n    thisOption.splitNumber = splitNumber;\n    var splitStep = (dataExtent[1] - dataExtent[0]) / splitNumber; // Precision auto-adaption\n\n    while (+splitStep.toFixed(precision) !== splitStep && precision < 5) {\n      precision++;\n    }\n\n    thisOption.precision = precision;\n    splitStep = +splitStep.toFixed(precision);\n\n    if (thisOption.minOpen) {\n      pieceList.push({\n        interval: [-Infinity, dataExtent[0]],\n        close: [0, 0]\n      });\n    }\n\n    for (var index = 0, curr = dataExtent[0]; index < splitNumber; curr += splitStep, index++) {\n      var max = index === splitNumber - 1 ? dataExtent[1] : curr + splitStep;\n      pieceList.push({\n        interval: [curr, max],\n        close: [1, 1]\n      });\n    }\n\n    if (thisOption.maxOpen) {\n      pieceList.push({\n        interval: [dataExtent[1], Infinity],\n        close: [0, 0]\n      });\n    }\n\n    reformIntervals(pieceList);\n    zrUtil.each(pieceList, function (piece, index) {\n      piece.index = index;\n      piece.text = this.formatValueText(piece.interval);\n    }, this);\n  },\n  categories: function () {\n    var thisOption = this.option;\n    zrUtil.each(thisOption.categories, function (cate) {\n      // FIXME category模式也使用pieceList，但在visualMapping中不是使用pieceList。\n      // 是否改一致。\n      this._pieceList.push({\n        text: this.formatValueText(cate, true),\n        value: cate\n      });\n    }, this); // See \"Order Rule\".\n\n    normalizeReverse(thisOption, this._pieceList);\n  },\n  pieces: function () {\n    var thisOption = this.option;\n    var pieceList = this._pieceList;\n    zrUtil.each(thisOption.pieces, function (pieceListItem, index) {\n      if (!zrUtil.isObject(pieceListItem)) {\n        pieceListItem = {\n          value: pieceListItem\n        };\n      }\n\n      var item = {\n        text: '',\n        index: index\n      };\n\n      if (pieceListItem.label != null) {\n        item.text = pieceListItem.label;\n      }\n\n      if (pieceListItem.hasOwnProperty('value')) {\n        var value = item.value = pieceListItem.value;\n        item.interval = [value, value];\n        item.close = [1, 1];\n      } else {\n        // `min` `max` is legacy option.\n        // `lt` `gt` `lte` `gte` is recommanded.\n        var interval = item.interval = [];\n        var close = item.close = [0, 0];\n        var closeList = [1, 0, 1];\n        var infinityList = [-Infinity, Infinity];\n        var useMinMax = [];\n\n        for (var lg = 0; lg < 2; lg++) {\n          var names = [['gte', 'gt', 'min'], ['lte', 'lt', 'max']][lg];\n\n          for (var i = 0; i < 3 && interval[lg] == null; i++) {\n            interval[lg] = pieceListItem[names[i]];\n            close[lg] = closeList[i];\n            useMinMax[lg] = i === 2;\n          }\n\n          interval[lg] == null && (interval[lg] = infinityList[lg]);\n        }\n\n        useMinMax[0] && interval[1] === Infinity && (close[0] = 0);\n        useMinMax[1] && interval[0] === -Infinity && (close[1] = 0);\n\n        if (interval[0] === interval[1] && close[0] && close[1]) {\n          // Consider: [{min: 5, max: 5, visual: {...}}, {min: 0, max: 5}],\n          // we use value to lift the priority when min === max\n          item.value = interval[0];\n        }\n      }\n\n      item.visual = VisualMapping.retrieveVisuals(pieceListItem);\n      pieceList.push(item);\n    }, this); // See \"Order Rule\".\n\n    normalizeReverse(thisOption, pieceList); // Only pieces\n\n    reformIntervals(pieceList);\n    zrUtil.each(pieceList, function (piece) {\n      var close = piece.close;\n      var edgeSymbols = [['<', '≤'][close[1]], ['>', '≥'][close[0]]];\n      piece.text = piece.text || this.formatValueText(piece.value != null ? piece.value : piece.interval, false, edgeSymbols);\n    }, this);\n  }\n};\n\nfunction normalizeReverse(thisOption, pieceList) {\n  var inverse = thisOption.inverse;\n\n  if (thisOption.orient === 'vertical' ? !inverse : inverse) {\n    pieceList.reverse();\n  }\n}\n\nvar _default = PiecewiseModel;\nmodule.exports = _default;"]}]}