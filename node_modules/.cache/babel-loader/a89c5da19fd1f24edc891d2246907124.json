{"remainingRequest":"/Users/id-repair/Documents/SEOL/4c-dashboard/node_modules/babel-loader/lib/index.js!/Users/id-repair/Documents/SEOL/4c-dashboard/node_modules/echarts/lib/chart/sankey/sankeyLayout.js","dependencies":[{"path":"/Users/id-repair/Documents/SEOL/4c-dashboard/node_modules/echarts/lib/chart/sankey/sankeyLayout.js","mtime":499162500000},{"path":"/Users/id-repair/Documents/SEOL/4c-dashboard/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/id-repair/Documents/SEOL/4c-dashboard/node_modules/babel-loader/lib/index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:cmVxdWlyZSgiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmZpbHRlci5qcyIpOwoKcmVxdWlyZSgiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC50by1zdHJpbmcuanMiKTsKCnJlcXVpcmUoImNvcmUtanMvbW9kdWxlcy93ZWIuZG9tLWNvbGxlY3Rpb25zLml0ZXJhdG9yLmpzIik7CgpyZXF1aXJlKCJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuc2xpY2UuanMiKTsKCi8qCiogTGljZW5zZWQgdG8gdGhlIEFwYWNoZSBTb2Z0d2FyZSBGb3VuZGF0aW9uIChBU0YpIHVuZGVyIG9uZQoqIG9yIG1vcmUgY29udHJpYnV0b3IgbGljZW5zZSBhZ3JlZW1lbnRzLiAgU2VlIHRoZSBOT1RJQ0UgZmlsZQoqIGRpc3RyaWJ1dGVkIHdpdGggdGhpcyB3b3JrIGZvciBhZGRpdGlvbmFsIGluZm9ybWF0aW9uCiogcmVnYXJkaW5nIGNvcHlyaWdodCBvd25lcnNoaXAuICBUaGUgQVNGIGxpY2Vuc2VzIHRoaXMgZmlsZQoqIHRvIHlvdSB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUKKiAiTGljZW5zZSIpOyB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlCiogd2l0aCB0aGUgTGljZW5zZS4gIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdAoqCiogICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjAKKgoqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywKKiBzb2Z0d2FyZSBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbgoqICJBUyBJUyIgQkFTSVMsIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWQoqIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuICBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZQoqIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmQgbGltaXRhdGlvbnMKKiB1bmRlciB0aGUgTGljZW5zZS4KKi8KdmFyIGxheW91dCA9IHJlcXVpcmUoIi4uLy4uL3V0aWwvbGF5b3V0Iik7Cgp2YXIgenJVdGlsID0gcmVxdWlyZSgienJlbmRlci9saWIvY29yZS91dGlsIik7Cgp2YXIgX21vZGVsID0gcmVxdWlyZSgiLi4vLi4vdXRpbC9tb2RlbCIpOwoKdmFyIGdyb3VwRGF0YSA9IF9tb2RlbC5ncm91cERhdGE7Ci8qCiogTGljZW5zZWQgdG8gdGhlIEFwYWNoZSBTb2Z0d2FyZSBGb3VuZGF0aW9uIChBU0YpIHVuZGVyIG9uZQoqIG9yIG1vcmUgY29udHJpYnV0b3IgbGljZW5zZSBhZ3JlZW1lbnRzLiAgU2VlIHRoZSBOT1RJQ0UgZmlsZQoqIGRpc3RyaWJ1dGVkIHdpdGggdGhpcyB3b3JrIGZvciBhZGRpdGlvbmFsIGluZm9ybWF0aW9uCiogcmVnYXJkaW5nIGNvcHlyaWdodCBvd25lcnNoaXAuICBUaGUgQVNGIGxpY2Vuc2VzIHRoaXMgZmlsZQoqIHRvIHlvdSB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUKKiAiTGljZW5zZSIpOyB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlCiogd2l0aCB0aGUgTGljZW5zZS4gIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdAoqCiogICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjAKKgoqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywKKiBzb2Z0d2FyZSBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbgoqICJBUyBJUyIgQkFTSVMsIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWQoqIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuICBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZQoqIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmQgbGltaXRhdGlvbnMKKiB1bmRlciB0aGUgTGljZW5zZS4KKi8KCmZ1bmN0aW9uIF9kZWZhdWx0KGVjTW9kZWwsIGFwaSwgcGF5bG9hZCkgewogIGVjTW9kZWwuZWFjaFNlcmllc0J5VHlwZSgnc2Fua2V5JywgZnVuY3Rpb24gKHNlcmllc01vZGVsKSB7CiAgICB2YXIgbm9kZVdpZHRoID0gc2VyaWVzTW9kZWwuZ2V0KCdub2RlV2lkdGgnKTsKICAgIHZhciBub2RlR2FwID0gc2VyaWVzTW9kZWwuZ2V0KCdub2RlR2FwJyk7CiAgICB2YXIgbGF5b3V0SW5mbyA9IGdldFZpZXdSZWN0KHNlcmllc01vZGVsLCBhcGkpOwogICAgc2VyaWVzTW9kZWwubGF5b3V0SW5mbyA9IGxheW91dEluZm87CiAgICB2YXIgd2lkdGggPSBsYXlvdXRJbmZvLndpZHRoOwogICAgdmFyIGhlaWdodCA9IGxheW91dEluZm8uaGVpZ2h0OwogICAgdmFyIGdyYXBoID0gc2VyaWVzTW9kZWwuZ2V0R3JhcGgoKTsKICAgIHZhciBub2RlcyA9IGdyYXBoLm5vZGVzOwogICAgdmFyIGVkZ2VzID0gZ3JhcGguZWRnZXM7CiAgICBjb21wdXRlTm9kZVZhbHVlcyhub2Rlcyk7CiAgICB2YXIgZmlsdGVyZWROb2RlcyA9IHpyVXRpbC5maWx0ZXIobm9kZXMsIGZ1bmN0aW9uIChub2RlKSB7CiAgICAgIHJldHVybiBub2RlLmdldExheW91dCgpLnZhbHVlID09PSAwOwogICAgfSk7CiAgICB2YXIgaXRlcmF0aW9ucyA9IGZpbHRlcmVkTm9kZXMubGVuZ3RoICE9PSAwID8gMCA6IHNlcmllc01vZGVsLmdldCgnbGF5b3V0SXRlcmF0aW9ucycpOwogICAgdmFyIG9yaWVudCA9IHNlcmllc01vZGVsLmdldCgnb3JpZW50Jyk7CiAgICB2YXIgbm9kZUFsaWduID0gc2VyaWVzTW9kZWwuZ2V0KCdub2RlQWxpZ24nKTsKICAgIGxheW91dFNhbmtleShub2RlcywgZWRnZXMsIG5vZGVXaWR0aCwgbm9kZUdhcCwgd2lkdGgsIGhlaWdodCwgaXRlcmF0aW9ucywgb3JpZW50LCBub2RlQWxpZ24pOwogIH0pOwp9Ci8qKgogKiBHZXQgdGhlIGxheW91dCBwb3NpdGlvbiBvZiB0aGUgd2hvbGUgdmlldwogKgogKiBAcGFyYW0ge21vZHVsZTplY2hhcnRzL21vZGVsL1Nlcmllc30gc2VyaWVzTW9kZWwgIHRoZSBtb2RlbCBvYmplY3Qgb2Ygc2Fua2V5IHNlcmllcwogKiBAcGFyYW0ge21vZHVsZTplY2hhcnRzL0V4dGVuc2lvbkFQSX0gYXBpICBwcm92aWRlIHRoZSBBUEkgbGlzdCB0aGF0IHRoZSBkZXZlbG9wZXIgY2FuIGNhbGwKICogQHJldHVybiB7bW9kdWxlOnpyZW5kZXIvY29yZS9Cb3VuZGluZ1JlY3R9ICBzaXplIG9mIHJlY3QgdG8gZHJhdyB0aGUgc2Fua2V5IHZpZXcKICovCgoKZnVuY3Rpb24gZ2V0Vmlld1JlY3Qoc2VyaWVzTW9kZWwsIGFwaSkgewogIHJldHVybiBsYXlvdXQuZ2V0TGF5b3V0UmVjdChzZXJpZXNNb2RlbC5nZXRCb3hMYXlvdXRQYXJhbXMoKSwgewogICAgd2lkdGg6IGFwaS5nZXRXaWR0aCgpLAogICAgaGVpZ2h0OiBhcGkuZ2V0SGVpZ2h0KCkKICB9KTsKfQoKZnVuY3Rpb24gbGF5b3V0U2Fua2V5KG5vZGVzLCBlZGdlcywgbm9kZVdpZHRoLCBub2RlR2FwLCB3aWR0aCwgaGVpZ2h0LCBpdGVyYXRpb25zLCBvcmllbnQsIG5vZGVBbGlnbikgewogIGNvbXB1dGVOb2RlQnJlYWR0aHMobm9kZXMsIGVkZ2VzLCBub2RlV2lkdGgsIHdpZHRoLCBoZWlnaHQsIG9yaWVudCwgbm9kZUFsaWduKTsKICBjb21wdXRlTm9kZURlcHRocyhub2RlcywgZWRnZXMsIGhlaWdodCwgd2lkdGgsIG5vZGVHYXAsIGl0ZXJhdGlvbnMsIG9yaWVudCk7CiAgY29tcHV0ZUVkZ2VEZXB0aHMobm9kZXMsIG9yaWVudCk7Cn0KLyoqCiAqIENvbXB1dGUgdGhlIHZhbHVlIG9mIGVhY2ggbm9kZSBieSBzdW1taW5nIHRoZSBhc3NvY2lhdGVkIGVkZ2UncyB2YWx1ZQogKgogKiBAcGFyYW0ge21vZHVsZTplY2hhcnRzL2RhdGEvR3JhcGh+Tm9kZX0gbm9kZXMgIG5vZGUgb2Ygc2Fua2V5IHZpZXcKICovCgoKZnVuY3Rpb24gY29tcHV0ZU5vZGVWYWx1ZXMobm9kZXMpIHsKICB6clV0aWwuZWFjaChub2RlcywgZnVuY3Rpb24gKG5vZGUpIHsKICAgIHZhciB2YWx1ZTEgPSBzdW0obm9kZS5vdXRFZGdlcywgZ2V0RWRnZVZhbHVlKTsKICAgIHZhciB2YWx1ZTIgPSBzdW0obm9kZS5pbkVkZ2VzLCBnZXRFZGdlVmFsdWUpOwogICAgdmFyIG5vZGVSYXdWYWx1ZSA9IG5vZGUuZ2V0VmFsdWUoKSB8fCAwOwogICAgdmFyIHZhbHVlID0gTWF0aC5tYXgodmFsdWUxLCB2YWx1ZTIsIG5vZGVSYXdWYWx1ZSk7CiAgICBub2RlLnNldExheW91dCh7CiAgICAgIHZhbHVlOiB2YWx1ZQogICAgfSwgdHJ1ZSk7CiAgfSk7Cn0KLyoqCiAqIENvbXB1dGUgdGhlIHgtcG9zaXRpb24gZm9yIGVhY2ggbm9kZS4KICoKICogSGVyZSB3ZSB1c2UgS2FobiBhbGdvcml0aG0gdG8gZGV0ZWN0IGN5Y2xlIHdoZW4gd2UgdHJhdmVyc2UKICogdGhlIG5vZGUgdG8gY29tcHV0ZXIgdGhlIGluaXRpYWwgeCBwb3NpdGlvbi4KICoKICogQHBhcmFtIHttb2R1bGU6ZWNoYXJ0cy9kYXRhL0dyYXBofk5vZGV9IG5vZGVzICBub2RlIG9mIHNhbmtleSB2aWV3CiAqIEBwYXJhbSAge251bWJlcn0gbm9kZVdpZHRoICB0aGUgZHggb2YgdGhlIG5vZGUKICogQHBhcmFtICB7bnVtYmVyfSB3aWR0aCAgdGhlIHdob2xlIHdpZHRoIG9mIHRoZSBhcmVhIHRvIGRyYXcgdGhlIHZpZXcKICovCgoKZnVuY3Rpb24gY29tcHV0ZU5vZGVCcmVhZHRocyhub2RlcywgZWRnZXMsIG5vZGVXaWR0aCwgd2lkdGgsIGhlaWdodCwgb3JpZW50LCBub2RlQWxpZ24pIHsKICAvLyBVc2VkIHRvIG1hcmsgd2hldGhlciB0aGUgZWRnZSBpcyBkZWxldGVkLiBpZiBpdCBpcyBkZWxldGVkLAogIC8vIHRoZSB2YWx1ZSBpcyAwLCBvdGhlcndpc2UgaXQgaXMgMS4KICB2YXIgcmVtYWluRWRnZXMgPSBbXTsgLy8gU3RvcmFnZSBlYWNoIG5vZGUncyBpbmRlZ3JlZS4KCiAgdmFyIGluZGVncmVlQXJyID0gW107IC8vVXNlZCB0byBzdG9yYWdlIHRoZSBub2RlIHdpdGggaW5kZWdyZWUgaXMgZXF1YWwgdG8gMC4KCiAgdmFyIHplcm9JbmRlZ3JlZXMgPSBbXTsKICB2YXIgbmV4dFRhcmdldE5vZGUgPSBbXTsKICB2YXIgeCA9IDA7CiAgdmFyIGt4ID0gMDsKCiAgZm9yICh2YXIgaSA9IDA7IGkgPCBlZGdlcy5sZW5ndGg7IGkrKykgewogICAgcmVtYWluRWRnZXNbaV0gPSAxOwogIH0KCiAgZm9yIChpID0gMDsgaSA8IG5vZGVzLmxlbmd0aDsgaSsrKSB7CiAgICBpbmRlZ3JlZUFycltpXSA9IG5vZGVzW2ldLmluRWRnZXMubGVuZ3RoOwoKICAgIGlmIChpbmRlZ3JlZUFycltpXSA9PT0gMCkgewogICAgICB6ZXJvSW5kZWdyZWVzLnB1c2gobm9kZXNbaV0pOwogICAgfQogIH0KCiAgdmFyIG1heE5vZGVEZXB0aCA9IC0xOyAvLyBUcmF2ZXJzaW5nIG5vZGVzIHVzaW5nIHRvcG9sb2dpY2FsIHNvcnRpbmcgdG8gY2FsY3VsYXRlIHRoZQogIC8vIGhvcml6b250YWwoaWYgb3JpZW50ID09PSAnaG9yaXpvbnRhbCcpIG9yIHZlcnRpY2FsKGlmIG9yaWVudCA9PT0gJ3ZlcnRpY2FsJykKICAvLyBwb3NpdGlvbiBvZiB0aGUgbm9kZXMuCgogIHdoaWxlICh6ZXJvSW5kZWdyZWVzLmxlbmd0aCkgewogICAgZm9yICh2YXIgaWR4ID0gMDsgaWR4IDwgemVyb0luZGVncmVlcy5sZW5ndGg7IGlkeCsrKSB7CiAgICAgIHZhciBub2RlID0gemVyb0luZGVncmVlc1tpZHhdOwogICAgICB2YXIgaXRlbSA9IG5vZGUuaG9zdEdyYXBoLmRhdGEuZ2V0UmF3RGF0YUl0ZW0obm9kZS5kYXRhSW5kZXgpOwogICAgICB2YXIgaXNJdGVtRGVwdGggPSBpdGVtLmRlcHRoICE9IG51bGwgJiYgaXRlbS5kZXB0aCA+PSAwOwoKICAgICAgaWYgKGlzSXRlbURlcHRoICYmIGl0ZW0uZGVwdGggPiBtYXhOb2RlRGVwdGgpIHsKICAgICAgICBtYXhOb2RlRGVwdGggPSBpdGVtLmRlcHRoOwogICAgICB9CgogICAgICBub2RlLnNldExheW91dCh7CiAgICAgICAgZGVwdGg6IGlzSXRlbURlcHRoID8gaXRlbS5kZXB0aCA6IHgKICAgICAgfSwgdHJ1ZSk7CiAgICAgIG9yaWVudCA9PT0gJ3ZlcnRpY2FsJyA/IG5vZGUuc2V0TGF5b3V0KHsKICAgICAgICBkeTogbm9kZVdpZHRoCiAgICAgIH0sIHRydWUpIDogbm9kZS5zZXRMYXlvdXQoewogICAgICAgIGR4OiBub2RlV2lkdGgKICAgICAgfSwgdHJ1ZSk7CgogICAgICBmb3IgKHZhciBlZGdlSWR4ID0gMDsgZWRnZUlkeCA8IG5vZGUub3V0RWRnZXMubGVuZ3RoOyBlZGdlSWR4KyspIHsKICAgICAgICB2YXIgZWRnZSA9IG5vZGUub3V0RWRnZXNbZWRnZUlkeF07CiAgICAgICAgdmFyIGluZGV4RWRnZSA9IGVkZ2VzLmluZGV4T2YoZWRnZSk7CiAgICAgICAgcmVtYWluRWRnZXNbaW5kZXhFZGdlXSA9IDA7CiAgICAgICAgdmFyIHRhcmdldE5vZGUgPSBlZGdlLm5vZGUyOwogICAgICAgIHZhciBub2RlSW5kZXggPSBub2Rlcy5pbmRleE9mKHRhcmdldE5vZGUpOwoKICAgICAgICBpZiAoLS1pbmRlZ3JlZUFycltub2RlSW5kZXhdID09PSAwICYmIG5leHRUYXJnZXROb2RlLmluZGV4T2YodGFyZ2V0Tm9kZSkgPCAwKSB7CiAgICAgICAgICBuZXh0VGFyZ2V0Tm9kZS5wdXNoKHRhcmdldE5vZGUpOwogICAgICAgIH0KICAgICAgfQogICAgfQoKICAgICsreDsKICAgIHplcm9JbmRlZ3JlZXMgPSBuZXh0VGFyZ2V0Tm9kZTsKICAgIG5leHRUYXJnZXROb2RlID0gW107CiAgfQoKICBmb3IgKGkgPSAwOyBpIDwgcmVtYWluRWRnZXMubGVuZ3RoOyBpKyspIHsKICAgIGlmIChyZW1haW5FZGdlc1tpXSA9PT0gMSkgewogICAgICB0aHJvdyBuZXcgRXJyb3IoJ1NhbmtleSBpcyBhIERBRywgdGhlIG9yaWdpbmFsIGRhdGEgaGFzIGN5Y2xlIScpOwogICAgfQogIH0KCiAgdmFyIG1heERlcHRoID0gbWF4Tm9kZURlcHRoID4geCAtIDEgPyBtYXhOb2RlRGVwdGggOiB4IC0gMTsKCiAgaWYgKG5vZGVBbGlnbiAmJiBub2RlQWxpZ24gIT09ICdsZWZ0JykgewogICAgYWRqdXN0Tm9kZVdpdGhOb2RlQWxpZ24obm9kZXMsIG5vZGVBbGlnbiwgb3JpZW50LCBtYXhEZXB0aCk7CiAgfQoKICB2YXIga3ggPSBvcmllbnQgPT09ICd2ZXJ0aWNhbCcgPyAoaGVpZ2h0IC0gbm9kZVdpZHRoKSAvIG1heERlcHRoIDogKHdpZHRoIC0gbm9kZVdpZHRoKSAvIG1heERlcHRoOwogIHNjYWxlTm9kZUJyZWFkdGhzKG5vZGVzLCBreCwgb3JpZW50KTsKfQoKZnVuY3Rpb24gaXNOb2RlRGVwdGgobm9kZSkgewogIHZhciBpdGVtID0gbm9kZS5ob3N0R3JhcGguZGF0YS5nZXRSYXdEYXRhSXRlbShub2RlLmRhdGFJbmRleCk7CiAgcmV0dXJuIGl0ZW0uZGVwdGggIT0gbnVsbCAmJiBpdGVtLmRlcHRoID49IDA7Cn0KCmZ1bmN0aW9uIGFkanVzdE5vZGVXaXRoTm9kZUFsaWduKG5vZGVzLCBub2RlQWxpZ24sIG9yaWVudCwgbWF4RGVwdGgpIHsKICBpZiAobm9kZUFsaWduID09PSAncmlnaHQnKSB7CiAgICB2YXIgbmV4dFNvdXJjZU5vZGUgPSBbXTsKICAgIHZhciByZW1haW5Ob2RlcyA9IG5vZGVzOwogICAgdmFyIG5vZGVIZWlnaHQgPSAwOwoKICAgIHdoaWxlIChyZW1haW5Ob2Rlcy5sZW5ndGgpIHsKICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCByZW1haW5Ob2Rlcy5sZW5ndGg7IGkrKykgewogICAgICAgIHZhciBub2RlID0gcmVtYWluTm9kZXNbaV07CiAgICAgICAgbm9kZS5zZXRMYXlvdXQoewogICAgICAgICAgc2tOb2RlSGVpZ2h0OiBub2RlSGVpZ2h0CiAgICAgICAgfSwgdHJ1ZSk7CgogICAgICAgIGZvciAodmFyIGogPSAwOyBqIDwgbm9kZS5pbkVkZ2VzLmxlbmd0aDsgaisrKSB7CiAgICAgICAgICB2YXIgZWRnZSA9IG5vZGUuaW5FZGdlc1tqXTsKCiAgICAgICAgICBpZiAobmV4dFNvdXJjZU5vZGUuaW5kZXhPZihlZGdlLm5vZGUxKSA8IDApIHsKICAgICAgICAgICAgbmV4dFNvdXJjZU5vZGUucHVzaChlZGdlLm5vZGUxKTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0KCiAgICAgIHJlbWFpbk5vZGVzID0gbmV4dFNvdXJjZU5vZGU7CiAgICAgIG5leHRTb3VyY2VOb2RlID0gW107CiAgICAgICsrbm9kZUhlaWdodDsKICAgIH0KCiAgICB6clV0aWwuZWFjaChub2RlcywgZnVuY3Rpb24gKG5vZGUpIHsKICAgICAgaWYgKCFpc05vZGVEZXB0aChub2RlKSkgewogICAgICAgIG5vZGUuc2V0TGF5b3V0KHsKICAgICAgICAgIGRlcHRoOiBNYXRoLm1heCgwLCBtYXhEZXB0aCAtIG5vZGUuZ2V0TGF5b3V0KCkuc2tOb2RlSGVpZ2h0KQogICAgICAgIH0sIHRydWUpOwogICAgICB9CiAgICB9KTsKICB9IGVsc2UgaWYgKG5vZGVBbGlnbiA9PT0gJ2p1c3RpZnknKSB7CiAgICBtb3ZlU2lua3NSaWdodChub2RlcywgbWF4RGVwdGgpOwogIH0KfQovKioKICogQWxsIHRoZSBub2RlIHdpdGhvdXQgb3V0RWdkZXMgYXJlIGFzc2lnbmVkIG1heGltdW0geC1wb3NpdGlvbiBhbmQKICogICAgIGJlIGFsaWduZWQgaW4gdGhlIGxhc3QgY29sdW1uLgogKgogKiBAcGFyYW0ge21vZHVsZTplY2hhcnRzL2RhdGEvR3JhcGh+Tm9kZX0gbm9kZXMuICBub2RlIG9mIHNhbmtleSB2aWV3LgogKiBAcGFyYW0ge251bWJlcn0gbWF4RGVwdGguICB1c2UgdG8gYXNzaWduIHRvIG5vZGUgd2l0aG91dCBvdXRFZGdlcyBhcyB4LXBvc2l0aW9uLgogKi8KCgpmdW5jdGlvbiBtb3ZlU2lua3NSaWdodChub2RlcywgbWF4RGVwdGgpIHsKICB6clV0aWwuZWFjaChub2RlcywgZnVuY3Rpb24gKG5vZGUpIHsKICAgIGlmICghaXNOb2RlRGVwdGgobm9kZSkgJiYgIW5vZGUub3V0RWRnZXMubGVuZ3RoKSB7CiAgICAgIG5vZGUuc2V0TGF5b3V0KHsKICAgICAgICBkZXB0aDogbWF4RGVwdGgKICAgICAgfSwgdHJ1ZSk7CiAgICB9CiAgfSk7Cn0KLyoqCiAqIFNjYWxlIG5vZGUgeC1wb3NpdGlvbiB0byB0aGUgd2lkdGgKICoKICogQHBhcmFtIHttb2R1bGU6ZWNoYXJ0cy9kYXRhL0dyYXBofk5vZGV9IG5vZGVzICBub2RlIG9mIHNhbmtleSB2aWV3CiAqIEBwYXJhbSB7bnVtYmVyfSBreCAgIG11bHRpcGxlIHVzZWQgdG8gc2NhbGUgbm9kZXMKICovCgoKZnVuY3Rpb24gc2NhbGVOb2RlQnJlYWR0aHMobm9kZXMsIGt4LCBvcmllbnQpIHsKICB6clV0aWwuZWFjaChub2RlcywgZnVuY3Rpb24gKG5vZGUpIHsKICAgIHZhciBub2RlRGVwdGggPSBub2RlLmdldExheW91dCgpLmRlcHRoICoga3g7CiAgICBvcmllbnQgPT09ICd2ZXJ0aWNhbCcgPyBub2RlLnNldExheW91dCh7CiAgICAgIHk6IG5vZGVEZXB0aAogICAgfSwgdHJ1ZSkgOiBub2RlLnNldExheW91dCh7CiAgICAgIHg6IG5vZGVEZXB0aAogICAgfSwgdHJ1ZSk7CiAgfSk7Cn0KLyoqCiAqIFVzaW5nIEdhdXNzLVNlaWRlbCBpdGVyYXRpb25zIG1ldGhvZCB0byBjb21wdXRlIHRoZSBub2RlIGRlcHRoKHktcG9zaXRpb24pCiAqCiAqIEBwYXJhbSB7bW9kdWxlOmVjaGFydHMvZGF0YS9HcmFwaH5Ob2RlfSBub2RlcyAgbm9kZSBvZiBzYW5rZXkgdmlldwogKiBAcGFyYW0ge21vZHVsZTplY2hhcnRzL2RhdGEvR3JhcGh+RWRnZX0gZWRnZXMgIGVkZ2Ugb2Ygc2Fua2V5IHZpZXcKICogQHBhcmFtIHtudW1iZXJ9IGhlaWdodCAgdGhlIHdob2xlIGhlaWdodCBvZiB0aGUgYXJlYSB0byBkcmF3IHRoZSB2aWV3CiAqIEBwYXJhbSB7bnVtYmVyfSBub2RlR2FwICB0aGUgdmVydGljYWwgZGlzdGFuY2UgYmV0d2VlbiB0d28gbm9kZXMKICogICAgIGluIHRoZSBzYW1lIGNvbHVtbi4KICogQHBhcmFtIHtudW1iZXJ9IGl0ZXJhdGlvbnMgIHRoZSBudW1iZXIgb2YgaXRlcmF0aW9ucyBmb3IgdGhlIGFsZ29yaXRobQogKi8KCgpmdW5jdGlvbiBjb21wdXRlTm9kZURlcHRocyhub2RlcywgZWRnZXMsIGhlaWdodCwgd2lkdGgsIG5vZGVHYXAsIGl0ZXJhdGlvbnMsIG9yaWVudCkgewogIHZhciBub2Rlc0J5QnJlYWR0aCA9IHByZXBhcmVOb2Rlc0J5QnJlYWR0aChub2Rlcywgb3JpZW50KTsKICBpbml0aWFsaXplTm9kZURlcHRoKG5vZGVzQnlCcmVhZHRoLCBlZGdlcywgaGVpZ2h0LCB3aWR0aCwgbm9kZUdhcCwgb3JpZW50KTsKICByZXNvbHZlQ29sbGlzaW9ucyhub2Rlc0J5QnJlYWR0aCwgbm9kZUdhcCwgaGVpZ2h0LCB3aWR0aCwgb3JpZW50KTsKCiAgZm9yICh2YXIgYWxwaGEgPSAxOyBpdGVyYXRpb25zID4gMDsgaXRlcmF0aW9ucy0tKSB7CiAgICAvLyAwLjk5IGlzIGEgZXhwZXJpZW5jZSBwYXJhbWV0ZXIsIGVuc3VyZSB0aGF0IGVhY2ggaXRlcmF0aW9ucyBvZgogICAgLy8gY2hhbmdlcyBhcyBzbWFsbCBhcyBwb3NzaWJsZS4KICAgIGFscGhhICo9IDAuOTk7CiAgICByZWxheFJpZ2h0VG9MZWZ0KG5vZGVzQnlCcmVhZHRoLCBhbHBoYSwgb3JpZW50KTsKICAgIHJlc29sdmVDb2xsaXNpb25zKG5vZGVzQnlCcmVhZHRoLCBub2RlR2FwLCBoZWlnaHQsIHdpZHRoLCBvcmllbnQpOwogICAgcmVsYXhMZWZ0VG9SaWdodChub2Rlc0J5QnJlYWR0aCwgYWxwaGEsIG9yaWVudCk7CiAgICByZXNvbHZlQ29sbGlzaW9ucyhub2Rlc0J5QnJlYWR0aCwgbm9kZUdhcCwgaGVpZ2h0LCB3aWR0aCwgb3JpZW50KTsKICB9Cn0KCmZ1bmN0aW9uIHByZXBhcmVOb2Rlc0J5QnJlYWR0aChub2Rlcywgb3JpZW50KSB7CiAgdmFyIG5vZGVzQnlCcmVhZHRoID0gW107CiAgdmFyIGtleUF0dHIgPSBvcmllbnQgPT09ICd2ZXJ0aWNhbCcgPyAneScgOiAneCc7CiAgdmFyIGdyb3VwUmVzdWx0ID0gZ3JvdXBEYXRhKG5vZGVzLCBmdW5jdGlvbiAobm9kZSkgewogICAgcmV0dXJuIG5vZGUuZ2V0TGF5b3V0KClba2V5QXR0cl07CiAgfSk7CiAgZ3JvdXBSZXN1bHQua2V5cy5zb3J0KGZ1bmN0aW9uIChhLCBiKSB7CiAgICByZXR1cm4gYSAtIGI7CiAgfSk7CiAgenJVdGlsLmVhY2goZ3JvdXBSZXN1bHQua2V5cywgZnVuY3Rpb24gKGtleSkgewogICAgbm9kZXNCeUJyZWFkdGgucHVzaChncm91cFJlc3VsdC5idWNrZXRzLmdldChrZXkpKTsKICB9KTsKICByZXR1cm4gbm9kZXNCeUJyZWFkdGg7Cn0KLyoqCiAqIENvbXB1dGUgdGhlIG9yaWdpbmFsIHktcG9zaXRpb24gZm9yIGVhY2ggbm9kZQogKgogKiBAcGFyYW0ge21vZHVsZTplY2hhcnRzL2RhdGEvR3JhcGh+Tm9kZX0gbm9kZXMgIG5vZGUgb2Ygc2Fua2V5IHZpZXcKICogQHBhcmFtIHtBcnJheS48QXJyYXkuPG1vZHVsZTplY2hhcnRzL2RhdGEvR3JhcGh+Tm9kZT4+fSBub2Rlc0J5QnJlYWR0aAogKiAgICAgZ3JvdXAgYnkgdGhlIGFycmF5IG9mIGFsbCBzYW5rZXkgbm9kZXMgYmFzZWQgb24gdGhlIG5vZGVzIHgtcG9zaXRpb24uCiAqIEBwYXJhbSB7bW9kdWxlOmVjaGFydHMvZGF0YS9HcmFwaH5FZGdlfSBlZGdlcyAgZWRnZSBvZiBzYW5rZXkgdmlldwogKiBAcGFyYW0ge251bWJlcn0gaGVpZ2h0ICB0aGUgd2hvbGUgaGVpZ2h0IG9mIHRoZSBhcmVhIHRvIGRyYXcgdGhlIHZpZXcKICogQHBhcmFtIHtudW1iZXJ9IG5vZGVHYXAgIHRoZSB2ZXJ0aWNhbCBkaXN0YW5jZSBiZXR3ZWVuIHR3byBub2RlcwogKi8KCgpmdW5jdGlvbiBpbml0aWFsaXplTm9kZURlcHRoKG5vZGVzQnlCcmVhZHRoLCBlZGdlcywgaGVpZ2h0LCB3aWR0aCwgbm9kZUdhcCwgb3JpZW50KSB7CiAgdmFyIG1pbkt5ID0gSW5maW5pdHk7CiAgenJVdGlsLmVhY2gobm9kZXNCeUJyZWFkdGgsIGZ1bmN0aW9uIChub2RlcykgewogICAgdmFyIG4gPSBub2Rlcy5sZW5ndGg7CiAgICB2YXIgc3VtID0gMDsKICAgIHpyVXRpbC5lYWNoKG5vZGVzLCBmdW5jdGlvbiAobm9kZSkgewogICAgICBzdW0gKz0gbm9kZS5nZXRMYXlvdXQoKS52YWx1ZTsKICAgIH0pOwogICAgdmFyIGt5ID0gb3JpZW50ID09PSAndmVydGljYWwnID8gKHdpZHRoIC0gKG4gLSAxKSAqIG5vZGVHYXApIC8gc3VtIDogKGhlaWdodCAtIChuIC0gMSkgKiBub2RlR2FwKSAvIHN1bTsKCiAgICBpZiAoa3kgPCBtaW5LeSkgewogICAgICBtaW5LeSA9IGt5OwogICAgfQogIH0pOwogIHpyVXRpbC5lYWNoKG5vZGVzQnlCcmVhZHRoLCBmdW5jdGlvbiAobm9kZXMpIHsKICAgIHpyVXRpbC5lYWNoKG5vZGVzLCBmdW5jdGlvbiAobm9kZSwgaSkgewogICAgICB2YXIgbm9kZUR5ID0gbm9kZS5nZXRMYXlvdXQoKS52YWx1ZSAqIG1pbkt5OwoKICAgICAgaWYgKG9yaWVudCA9PT0gJ3ZlcnRpY2FsJykgewogICAgICAgIG5vZGUuc2V0TGF5b3V0KHsKICAgICAgICAgIHg6IGkKICAgICAgICB9LCB0cnVlKTsKICAgICAgICBub2RlLnNldExheW91dCh7CiAgICAgICAgICBkeDogbm9kZUR5CiAgICAgICAgfSwgdHJ1ZSk7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgbm9kZS5zZXRMYXlvdXQoewogICAgICAgICAgeTogaQogICAgICAgIH0sIHRydWUpOwogICAgICAgIG5vZGUuc2V0TGF5b3V0KHsKICAgICAgICAgIGR5OiBub2RlRHkKICAgICAgICB9LCB0cnVlKTsKICAgICAgfQogICAgfSk7CiAgfSk7CiAgenJVdGlsLmVhY2goZWRnZXMsIGZ1bmN0aW9uIChlZGdlKSB7CiAgICB2YXIgZWRnZUR5ID0gK2VkZ2UuZ2V0VmFsdWUoKSAqIG1pbkt5OwogICAgZWRnZS5zZXRMYXlvdXQoewogICAgICBkeTogZWRnZUR5CiAgICB9LCB0cnVlKTsKICB9KTsKfQovKioKICogUmVzb2x2ZSB0aGUgY29sbGlzaW9uIG9mIGluaXRpYWxpemVkIGRlcHRoICh5LXBvc2l0aW9uKQogKgogKiBAcGFyYW0ge0FycmF5LjxBcnJheS48bW9kdWxlOmVjaGFydHMvZGF0YS9HcmFwaH5Ob2RlPj59IG5vZGVzQnlCcmVhZHRoCiAqICAgICBncm91cCBieSB0aGUgYXJyYXkgb2YgYWxsIHNhbmtleSBub2RlcyBiYXNlZCBvbiB0aGUgbm9kZXMgeC1wb3NpdGlvbi4KICogQHBhcmFtIHtudW1iZXJ9IG5vZGVHYXAgIHRoZSB2ZXJ0aWNhbCBkaXN0YW5jZSBiZXR3ZWVuIHR3byBub2RlcwogKiBAcGFyYW0ge251bWJlcn0gaGVpZ2h0ICB0aGUgd2hvbGUgaGVpZ2h0IG9mIHRoZSBhcmVhIHRvIGRyYXcgdGhlIHZpZXcKICovCgoKZnVuY3Rpb24gcmVzb2x2ZUNvbGxpc2lvbnMobm9kZXNCeUJyZWFkdGgsIG5vZGVHYXAsIGhlaWdodCwgd2lkdGgsIG9yaWVudCkgewogIHZhciBrZXlBdHRyID0gb3JpZW50ID09PSAndmVydGljYWwnID8gJ3gnIDogJ3knOwogIHpyVXRpbC5lYWNoKG5vZGVzQnlCcmVhZHRoLCBmdW5jdGlvbiAobm9kZXMpIHsKICAgIG5vZGVzLnNvcnQoZnVuY3Rpb24gKGEsIGIpIHsKICAgICAgcmV0dXJuIGEuZ2V0TGF5b3V0KClba2V5QXR0cl0gLSBiLmdldExheW91dCgpW2tleUF0dHJdOwogICAgfSk7CiAgICB2YXIgbm9kZVg7CiAgICB2YXIgbm9kZTsKICAgIHZhciBkeTsKICAgIHZhciB5MCA9IDA7CiAgICB2YXIgbiA9IG5vZGVzLmxlbmd0aDsKICAgIHZhciBub2RlRHlBdHRyID0gb3JpZW50ID09PSAndmVydGljYWwnID8gJ2R4JyA6ICdkeSc7CgogICAgZm9yICh2YXIgaSA9IDA7IGkgPCBuOyBpKyspIHsKICAgICAgbm9kZSA9IG5vZGVzW2ldOwogICAgICBkeSA9IHkwIC0gbm9kZS5nZXRMYXlvdXQoKVtrZXlBdHRyXTsKCiAgICAgIGlmIChkeSA+IDApIHsKICAgICAgICBub2RlWCA9IG5vZGUuZ2V0TGF5b3V0KClba2V5QXR0cl0gKyBkeTsKICAgICAgICBvcmllbnQgPT09ICd2ZXJ0aWNhbCcgPyBub2RlLnNldExheW91dCh7CiAgICAgICAgICB4OiBub2RlWAogICAgICAgIH0sIHRydWUpIDogbm9kZS5zZXRMYXlvdXQoewogICAgICAgICAgeTogbm9kZVgKICAgICAgICB9LCB0cnVlKTsKICAgICAgfQoKICAgICAgeTAgPSBub2RlLmdldExheW91dCgpW2tleUF0dHJdICsgbm9kZS5nZXRMYXlvdXQoKVtub2RlRHlBdHRyXSArIG5vZGVHYXA7CiAgICB9CgogICAgdmFyIHZpZXdXaWR0aCA9IG9yaWVudCA9PT0gJ3ZlcnRpY2FsJyA/IHdpZHRoIDogaGVpZ2h0OyAvLyBJZiB0aGUgYm90dG9tbW9zdCBub2RlIGdvZXMgb3V0c2lkZSB0aGUgYm91bmRzLCBwdXNoIGl0IGJhY2sgdXAKCiAgICBkeSA9IHkwIC0gbm9kZUdhcCAtIHZpZXdXaWR0aDsKCiAgICBpZiAoZHkgPiAwKSB7CiAgICAgIG5vZGVYID0gbm9kZS5nZXRMYXlvdXQoKVtrZXlBdHRyXSAtIGR5OwogICAgICBvcmllbnQgPT09ICd2ZXJ0aWNhbCcgPyBub2RlLnNldExheW91dCh7CiAgICAgICAgeDogbm9kZVgKICAgICAgfSwgdHJ1ZSkgOiBub2RlLnNldExheW91dCh7CiAgICAgICAgeTogbm9kZVgKICAgICAgfSwgdHJ1ZSk7CiAgICAgIHkwID0gbm9kZVg7CgogICAgICBmb3IgKGkgPSBuIC0gMjsgaSA+PSAwOyAtLWkpIHsKICAgICAgICBub2RlID0gbm9kZXNbaV07CiAgICAgICAgZHkgPSBub2RlLmdldExheW91dCgpW2tleUF0dHJdICsgbm9kZS5nZXRMYXlvdXQoKVtub2RlRHlBdHRyXSArIG5vZGVHYXAgLSB5MDsKCiAgICAgICAgaWYgKGR5ID4gMCkgewogICAgICAgICAgbm9kZVggPSBub2RlLmdldExheW91dCgpW2tleUF0dHJdIC0gZHk7CiAgICAgICAgICBvcmllbnQgPT09ICd2ZXJ0aWNhbCcgPyBub2RlLnNldExheW91dCh7CiAgICAgICAgICAgIHg6IG5vZGVYCiAgICAgICAgICB9LCB0cnVlKSA6IG5vZGUuc2V0TGF5b3V0KHsKICAgICAgICAgICAgeTogbm9kZVgKICAgICAgICAgIH0sIHRydWUpOwogICAgICAgIH0KCiAgICAgICAgeTAgPSBub2RlLmdldExheW91dCgpW2tleUF0dHJdOwogICAgICB9CiAgICB9CiAgfSk7Cn0KLyoqCiAqIENoYW5nZSB0aGUgeS1wb3NpdGlvbiBvZiB0aGUgbm9kZXMsIGV4Y2VwdCBtb3N0IHRoZSByaWdodCBzaWRlIG5vZGVzCiAqCiAqIEBwYXJhbSB7QXJyYXkuPEFycmF5Ljxtb2R1bGU6ZWNoYXJ0cy9kYXRhL0dyYXBofk5vZGU+Pn0gbm9kZXNCeUJyZWFkdGgKICogICAgIGdyb3VwIGJ5IHRoZSBhcnJheSBvZiBhbGwgc2Fua2V5IG5vZGVzIGJhc2VkIG9uIHRoZSBub2RlIHgtcG9zaXRpb24uCiAqIEBwYXJhbSB7bnVtYmVyfSBhbHBoYSAgcGFyYW1ldGVyIHVzZWQgdG8gYWRqdXN0IHRoZSBub2RlcyB5LXBvc2l0aW9uCiAqLwoKCmZ1bmN0aW9uIHJlbGF4UmlnaHRUb0xlZnQobm9kZXNCeUJyZWFkdGgsIGFscGhhLCBvcmllbnQpIHsKICB6clV0aWwuZWFjaChub2Rlc0J5QnJlYWR0aC5zbGljZSgpLnJldmVyc2UoKSwgZnVuY3Rpb24gKG5vZGVzKSB7CiAgICB6clV0aWwuZWFjaChub2RlcywgZnVuY3Rpb24gKG5vZGUpIHsKICAgICAgaWYgKG5vZGUub3V0RWRnZXMubGVuZ3RoKSB7CiAgICAgICAgdmFyIHkgPSBzdW0obm9kZS5vdXRFZGdlcywgd2VpZ2h0ZWRUYXJnZXQsIG9yaWVudCkgLyBzdW0obm9kZS5vdXRFZGdlcywgZ2V0RWRnZVZhbHVlLCBvcmllbnQpOwoKICAgICAgICBpZiAoaXNOYU4oeSkpIHsKICAgICAgICAgIHZhciBsZW4gPSBub2RlLm91dEVkZ2VzLmxlbmd0aDsKICAgICAgICAgIHkgPSBsZW4gPyBzdW0obm9kZS5vdXRFZGdlcywgY2VudGVyVGFyZ2V0LCBvcmllbnQpIC8gbGVuIDogMDsKICAgICAgICB9CgogICAgICAgIGlmIChvcmllbnQgPT09ICd2ZXJ0aWNhbCcpIHsKICAgICAgICAgIHZhciBub2RlWCA9IG5vZGUuZ2V0TGF5b3V0KCkueCArICh5IC0gY2VudGVyKG5vZGUsIG9yaWVudCkpICogYWxwaGE7CiAgICAgICAgICBub2RlLnNldExheW91dCh7CiAgICAgICAgICAgIHg6IG5vZGVYCiAgICAgICAgICB9LCB0cnVlKTsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgdmFyIG5vZGVZID0gbm9kZS5nZXRMYXlvdXQoKS55ICsgKHkgLSBjZW50ZXIobm9kZSwgb3JpZW50KSkgKiBhbHBoYTsKICAgICAgICAgIG5vZGUuc2V0TGF5b3V0KHsKICAgICAgICAgICAgeTogbm9kZVkKICAgICAgICAgIH0sIHRydWUpOwogICAgICAgIH0KICAgICAgfQogICAgfSk7CiAgfSk7Cn0KCmZ1bmN0aW9uIHdlaWdodGVkVGFyZ2V0KGVkZ2UsIG9yaWVudCkgewogIHJldHVybiBjZW50ZXIoZWRnZS5ub2RlMiwgb3JpZW50KSAqIGVkZ2UuZ2V0VmFsdWUoKTsKfQoKZnVuY3Rpb24gY2VudGVyVGFyZ2V0KGVkZ2UsIG9yaWVudCkgewogIHJldHVybiBjZW50ZXIoZWRnZS5ub2RlMiwgb3JpZW50KTsKfQoKZnVuY3Rpb24gd2VpZ2h0ZWRTb3VyY2UoZWRnZSwgb3JpZW50KSB7CiAgcmV0dXJuIGNlbnRlcihlZGdlLm5vZGUxLCBvcmllbnQpICogZWRnZS5nZXRWYWx1ZSgpOwp9CgpmdW5jdGlvbiBjZW50ZXJTb3VyY2UoZWRnZSwgb3JpZW50KSB7CiAgcmV0dXJuIGNlbnRlcihlZGdlLm5vZGUxLCBvcmllbnQpOwp9CgpmdW5jdGlvbiBjZW50ZXIobm9kZSwgb3JpZW50KSB7CiAgcmV0dXJuIG9yaWVudCA9PT0gJ3ZlcnRpY2FsJyA/IG5vZGUuZ2V0TGF5b3V0KCkueCArIG5vZGUuZ2V0TGF5b3V0KCkuZHggLyAyIDogbm9kZS5nZXRMYXlvdXQoKS55ICsgbm9kZS5nZXRMYXlvdXQoKS5keSAvIDI7Cn0KCmZ1bmN0aW9uIGdldEVkZ2VWYWx1ZShlZGdlKSB7CiAgcmV0dXJuIGVkZ2UuZ2V0VmFsdWUoKTsKfQoKZnVuY3Rpb24gc3VtKGFycmF5LCBjYiwgb3JpZW50KSB7CiAgdmFyIHN1bSA9IDA7CiAgdmFyIGxlbiA9IGFycmF5Lmxlbmd0aDsKICB2YXIgaSA9IC0xOwoKICB3aGlsZSAoKytpIDwgbGVuKSB7CiAgICB2YXIgdmFsdWUgPSArY2IuY2FsbChhcnJheSwgYXJyYXlbaV0sIG9yaWVudCk7CgogICAgaWYgKCFpc05hTih2YWx1ZSkpIHsKICAgICAgc3VtICs9IHZhbHVlOwogICAgfQogIH0KCiAgcmV0dXJuIHN1bTsKfQovKioKICogQ2hhbmdlIHRoZSB5LXBvc2l0aW9uIG9mIHRoZSBub2RlcywgZXhjZXB0IG1vc3QgdGhlIGxlZnQgc2lkZSBub2RlcwogKgogKiBAcGFyYW0ge0FycmF5LjxBcnJheS48bW9kdWxlOmVjaGFydHMvZGF0YS9HcmFwaH5Ob2RlPj59IG5vZGVzQnlCcmVhZHRoCiAqICAgICBncm91cCBieSB0aGUgYXJyYXkgb2YgYWxsIHNhbmtleSBub2RlcyBiYXNlZCBvbiB0aGUgbm9kZSB4LXBvc2l0aW9uLgogKiBAcGFyYW0ge251bWJlcn0gYWxwaGEgIHBhcmFtZXRlciB1c2VkIHRvIGFkanVzdCB0aGUgbm9kZXMgeS1wb3NpdGlvbgogKi8KCgpmdW5jdGlvbiByZWxheExlZnRUb1JpZ2h0KG5vZGVzQnlCcmVhZHRoLCBhbHBoYSwgb3JpZW50KSB7CiAgenJVdGlsLmVhY2gobm9kZXNCeUJyZWFkdGgsIGZ1bmN0aW9uIChub2RlcykgewogICAgenJVdGlsLmVhY2gobm9kZXMsIGZ1bmN0aW9uIChub2RlKSB7CiAgICAgIGlmIChub2RlLmluRWRnZXMubGVuZ3RoKSB7CiAgICAgICAgdmFyIHkgPSBzdW0obm9kZS5pbkVkZ2VzLCB3ZWlnaHRlZFNvdXJjZSwgb3JpZW50KSAvIHN1bShub2RlLmluRWRnZXMsIGdldEVkZ2VWYWx1ZSwgb3JpZW50KTsKCiAgICAgICAgaWYgKGlzTmFOKHkpKSB7CiAgICAgICAgICB2YXIgbGVuID0gbm9kZS5pbkVkZ2VzLmxlbmd0aDsKICAgICAgICAgIHkgPSBsZW4gPyBzdW0obm9kZS5pbkVkZ2VzLCBjZW50ZXJTb3VyY2UsIG9yaWVudCkgLyBsZW4gOiAwOwogICAgICAgIH0KCiAgICAgICAgaWYgKG9yaWVudCA9PT0gJ3ZlcnRpY2FsJykgewogICAgICAgICAgdmFyIG5vZGVYID0gbm9kZS5nZXRMYXlvdXQoKS54ICsgKHkgLSBjZW50ZXIobm9kZSwgb3JpZW50KSkgKiBhbHBoYTsKICAgICAgICAgIG5vZGUuc2V0TGF5b3V0KHsKICAgICAgICAgICAgeDogbm9kZVgKICAgICAgICAgIH0sIHRydWUpOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICB2YXIgbm9kZVkgPSBub2RlLmdldExheW91dCgpLnkgKyAoeSAtIGNlbnRlcihub2RlLCBvcmllbnQpKSAqIGFscGhhOwogICAgICAgICAgbm9kZS5zZXRMYXlvdXQoewogICAgICAgICAgICB5OiBub2RlWQogICAgICAgICAgfSwgdHJ1ZSk7CiAgICAgICAgfQogICAgICB9CiAgICB9KTsKICB9KTsKfQovKioKICogQ29tcHV0ZSB0aGUgZGVwdGgoeS1wb3NpdGlvbikgb2YgZWFjaCBlZGdlCiAqCiAqIEBwYXJhbSB7bW9kdWxlOmVjaGFydHMvZGF0YS9HcmFwaH5Ob2RlfSBub2RlcyAgbm9kZSBvZiBzYW5rZXkgdmlldwogKi8KCgpmdW5jdGlvbiBjb21wdXRlRWRnZURlcHRocyhub2Rlcywgb3JpZW50KSB7CiAgdmFyIGtleUF0dHIgPSBvcmllbnQgPT09ICd2ZXJ0aWNhbCcgPyAneCcgOiAneSc7CiAgenJVdGlsLmVhY2gobm9kZXMsIGZ1bmN0aW9uIChub2RlKSB7CiAgICBub2RlLm91dEVkZ2VzLnNvcnQoZnVuY3Rpb24gKGEsIGIpIHsKICAgICAgcmV0dXJuIGEubm9kZTIuZ2V0TGF5b3V0KClba2V5QXR0cl0gLSBiLm5vZGUyLmdldExheW91dCgpW2tleUF0dHJdOwogICAgfSk7CiAgICBub2RlLmluRWRnZXMuc29ydChmdW5jdGlvbiAoYSwgYikgewogICAgICByZXR1cm4gYS5ub2RlMS5nZXRMYXlvdXQoKVtrZXlBdHRyXSAtIGIubm9kZTEuZ2V0TGF5b3V0KClba2V5QXR0cl07CiAgICB9KTsKICB9KTsKICB6clV0aWwuZWFjaChub2RlcywgZnVuY3Rpb24gKG5vZGUpIHsKICAgIHZhciBzeSA9IDA7CiAgICB2YXIgdHkgPSAwOwogICAgenJVdGlsLmVhY2gobm9kZS5vdXRFZGdlcywgZnVuY3Rpb24gKGVkZ2UpIHsKICAgICAgZWRnZS5zZXRMYXlvdXQoewogICAgICAgIHN5OiBzeQogICAgICB9LCB0cnVlKTsKICAgICAgc3kgKz0gZWRnZS5nZXRMYXlvdXQoKS5keTsKICAgIH0pOwogICAgenJVdGlsLmVhY2gobm9kZS5pbkVkZ2VzLCBmdW5jdGlvbiAoZWRnZSkgewogICAgICBlZGdlLnNldExheW91dCh7CiAgICAgICAgdHk6IHR5CiAgICAgIH0sIHRydWUpOwogICAgICB0eSArPSBlZGdlLmdldExheW91dCgpLmR5OwogICAgfSk7CiAgfSk7Cn0KCm1vZHVsZS5leHBvcnRzID0gX2RlZmF1bHQ7"},{"version":3,"sources":["/Users/id-repair/Documents/SEOL/4c-dashboard/node_modules/echarts/lib/chart/sankey/sankeyLayout.js"],"names":["layout","require","zrUtil","_model","groupData","_default","ecModel","api","payload","eachSeriesByType","seriesModel","nodeWidth","get","nodeGap","layoutInfo","getViewRect","width","height","graph","getGraph","nodes","edges","computeNodeValues","filteredNodes","filter","node","getLayout","value","iterations","length","orient","nodeAlign","layoutSankey","getLayoutRect","getBoxLayoutParams","getWidth","getHeight","computeNodeBreadths","computeNodeDepths","computeEdgeDepths","each","value1","sum","outEdges","getEdgeValue","value2","inEdges","nodeRawValue","getValue","Math","max","setLayout","remainEdges","indegreeArr","zeroIndegrees","nextTargetNode","x","kx","i","push","maxNodeDepth","idx","item","hostGraph","data","getRawDataItem","dataIndex","isItemDepth","depth","dy","dx","edgeIdx","edge","indexEdge","indexOf","targetNode","node2","nodeIndex","Error","maxDepth","adjustNodeWithNodeAlign","scaleNodeBreadths","isNodeDepth","nextSourceNode","remainNodes","nodeHeight","skNodeHeight","j","node1","moveSinksRight","nodeDepth","y","nodesByBreadth","prepareNodesByBreadth","initializeNodeDepth","resolveCollisions","alpha","relaxRightToLeft","relaxLeftToRight","keyAttr","groupResult","keys","sort","a","b","key","buckets","minKy","Infinity","n","ky","nodeDy","edgeDy","nodeX","y0","nodeDyAttr","viewWidth","slice","reverse","weightedTarget","isNaN","len","centerTarget","center","nodeY","weightedSource","centerSource","array","cb","call","sy","ty","module","exports"],"mappings":"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","sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar layout = require(\"../../util/layout\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _model = require(\"../../util/model\");\n\nvar groupData = _model.groupData;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction _default(ecModel, api, payload) {\n  ecModel.eachSeriesByType('sankey', function (seriesModel) {\n    var nodeWidth = seriesModel.get('nodeWidth');\n    var nodeGap = seriesModel.get('nodeGap');\n    var layoutInfo = getViewRect(seriesModel, api);\n    seriesModel.layoutInfo = layoutInfo;\n    var width = layoutInfo.width;\n    var height = layoutInfo.height;\n    var graph = seriesModel.getGraph();\n    var nodes = graph.nodes;\n    var edges = graph.edges;\n    computeNodeValues(nodes);\n    var filteredNodes = zrUtil.filter(nodes, function (node) {\n      return node.getLayout().value === 0;\n    });\n    var iterations = filteredNodes.length !== 0 ? 0 : seriesModel.get('layoutIterations');\n    var orient = seriesModel.get('orient');\n    var nodeAlign = seriesModel.get('nodeAlign');\n    layoutSankey(nodes, edges, nodeWidth, nodeGap, width, height, iterations, orient, nodeAlign);\n  });\n}\n/**\n * Get the layout position of the whole view\n *\n * @param {module:echarts/model/Series} seriesModel  the model object of sankey series\n * @param {module:echarts/ExtensionAPI} api  provide the API list that the developer can call\n * @return {module:zrender/core/BoundingRect}  size of rect to draw the sankey view\n */\n\n\nfunction getViewRect(seriesModel, api) {\n  return layout.getLayoutRect(seriesModel.getBoxLayoutParams(), {\n    width: api.getWidth(),\n    height: api.getHeight()\n  });\n}\n\nfunction layoutSankey(nodes, edges, nodeWidth, nodeGap, width, height, iterations, orient, nodeAlign) {\n  computeNodeBreadths(nodes, edges, nodeWidth, width, height, orient, nodeAlign);\n  computeNodeDepths(nodes, edges, height, width, nodeGap, iterations, orient);\n  computeEdgeDepths(nodes, orient);\n}\n/**\n * Compute the value of each node by summing the associated edge's value\n *\n * @param {module:echarts/data/Graph~Node} nodes  node of sankey view\n */\n\n\nfunction computeNodeValues(nodes) {\n  zrUtil.each(nodes, function (node) {\n    var value1 = sum(node.outEdges, getEdgeValue);\n    var value2 = sum(node.inEdges, getEdgeValue);\n    var nodeRawValue = node.getValue() || 0;\n    var value = Math.max(value1, value2, nodeRawValue);\n    node.setLayout({\n      value: value\n    }, true);\n  });\n}\n/**\n * Compute the x-position for each node.\n *\n * Here we use Kahn algorithm to detect cycle when we traverse\n * the node to computer the initial x position.\n *\n * @param {module:echarts/data/Graph~Node} nodes  node of sankey view\n * @param  {number} nodeWidth  the dx of the node\n * @param  {number} width  the whole width of the area to draw the view\n */\n\n\nfunction computeNodeBreadths(nodes, edges, nodeWidth, width, height, orient, nodeAlign) {\n  // Used to mark whether the edge is deleted. if it is deleted,\n  // the value is 0, otherwise it is 1.\n  var remainEdges = []; // Storage each node's indegree.\n\n  var indegreeArr = []; //Used to storage the node with indegree is equal to 0.\n\n  var zeroIndegrees = [];\n  var nextTargetNode = [];\n  var x = 0;\n  var kx = 0;\n\n  for (var i = 0; i < edges.length; i++) {\n    remainEdges[i] = 1;\n  }\n\n  for (i = 0; i < nodes.length; i++) {\n    indegreeArr[i] = nodes[i].inEdges.length;\n\n    if (indegreeArr[i] === 0) {\n      zeroIndegrees.push(nodes[i]);\n    }\n  }\n\n  var maxNodeDepth = -1; // Traversing nodes using topological sorting to calculate the\n  // horizontal(if orient === 'horizontal') or vertical(if orient === 'vertical')\n  // position of the nodes.\n\n  while (zeroIndegrees.length) {\n    for (var idx = 0; idx < zeroIndegrees.length; idx++) {\n      var node = zeroIndegrees[idx];\n      var item = node.hostGraph.data.getRawDataItem(node.dataIndex);\n      var isItemDepth = item.depth != null && item.depth >= 0;\n\n      if (isItemDepth && item.depth > maxNodeDepth) {\n        maxNodeDepth = item.depth;\n      }\n\n      node.setLayout({\n        depth: isItemDepth ? item.depth : x\n      }, true);\n      orient === 'vertical' ? node.setLayout({\n        dy: nodeWidth\n      }, true) : node.setLayout({\n        dx: nodeWidth\n      }, true);\n\n      for (var edgeIdx = 0; edgeIdx < node.outEdges.length; edgeIdx++) {\n        var edge = node.outEdges[edgeIdx];\n        var indexEdge = edges.indexOf(edge);\n        remainEdges[indexEdge] = 0;\n        var targetNode = edge.node2;\n        var nodeIndex = nodes.indexOf(targetNode);\n\n        if (--indegreeArr[nodeIndex] === 0 && nextTargetNode.indexOf(targetNode) < 0) {\n          nextTargetNode.push(targetNode);\n        }\n      }\n    }\n\n    ++x;\n    zeroIndegrees = nextTargetNode;\n    nextTargetNode = [];\n  }\n\n  for (i = 0; i < remainEdges.length; i++) {\n    if (remainEdges[i] === 1) {\n      throw new Error('Sankey is a DAG, the original data has cycle!');\n    }\n  }\n\n  var maxDepth = maxNodeDepth > x - 1 ? maxNodeDepth : x - 1;\n\n  if (nodeAlign && nodeAlign !== 'left') {\n    adjustNodeWithNodeAlign(nodes, nodeAlign, orient, maxDepth);\n  }\n\n  var kx = orient === 'vertical' ? (height - nodeWidth) / maxDepth : (width - nodeWidth) / maxDepth;\n  scaleNodeBreadths(nodes, kx, orient);\n}\n\nfunction isNodeDepth(node) {\n  var item = node.hostGraph.data.getRawDataItem(node.dataIndex);\n  return item.depth != null && item.depth >= 0;\n}\n\nfunction adjustNodeWithNodeAlign(nodes, nodeAlign, orient, maxDepth) {\n  if (nodeAlign === 'right') {\n    var nextSourceNode = [];\n    var remainNodes = nodes;\n    var nodeHeight = 0;\n\n    while (remainNodes.length) {\n      for (var i = 0; i < remainNodes.length; i++) {\n        var node = remainNodes[i];\n        node.setLayout({\n          skNodeHeight: nodeHeight\n        }, true);\n\n        for (var j = 0; j < node.inEdges.length; j++) {\n          var edge = node.inEdges[j];\n\n          if (nextSourceNode.indexOf(edge.node1) < 0) {\n            nextSourceNode.push(edge.node1);\n          }\n        }\n      }\n\n      remainNodes = nextSourceNode;\n      nextSourceNode = [];\n      ++nodeHeight;\n    }\n\n    zrUtil.each(nodes, function (node) {\n      if (!isNodeDepth(node)) {\n        node.setLayout({\n          depth: Math.max(0, maxDepth - node.getLayout().skNodeHeight)\n        }, true);\n      }\n    });\n  } else if (nodeAlign === 'justify') {\n    moveSinksRight(nodes, maxDepth);\n  }\n}\n/**\n * All the node without outEgdes are assigned maximum x-position and\n *     be aligned in the last column.\n *\n * @param {module:echarts/data/Graph~Node} nodes.  node of sankey view.\n * @param {number} maxDepth.  use to assign to node without outEdges as x-position.\n */\n\n\nfunction moveSinksRight(nodes, maxDepth) {\n  zrUtil.each(nodes, function (node) {\n    if (!isNodeDepth(node) && !node.outEdges.length) {\n      node.setLayout({\n        depth: maxDepth\n      }, true);\n    }\n  });\n}\n/**\n * Scale node x-position to the width\n *\n * @param {module:echarts/data/Graph~Node} nodes  node of sankey view\n * @param {number} kx   multiple used to scale nodes\n */\n\n\nfunction scaleNodeBreadths(nodes, kx, orient) {\n  zrUtil.each(nodes, function (node) {\n    var nodeDepth = node.getLayout().depth * kx;\n    orient === 'vertical' ? node.setLayout({\n      y: nodeDepth\n    }, true) : node.setLayout({\n      x: nodeDepth\n    }, true);\n  });\n}\n/**\n * Using Gauss-Seidel iterations method to compute the node depth(y-position)\n *\n * @param {module:echarts/data/Graph~Node} nodes  node of sankey view\n * @param {module:echarts/data/Graph~Edge} edges  edge of sankey view\n * @param {number} height  the whole height of the area to draw the view\n * @param {number} nodeGap  the vertical distance between two nodes\n *     in the same column.\n * @param {number} iterations  the number of iterations for the algorithm\n */\n\n\nfunction computeNodeDepths(nodes, edges, height, width, nodeGap, iterations, orient) {\n  var nodesByBreadth = prepareNodesByBreadth(nodes, orient);\n  initializeNodeDepth(nodesByBreadth, edges, height, width, nodeGap, orient);\n  resolveCollisions(nodesByBreadth, nodeGap, height, width, orient);\n\n  for (var alpha = 1; iterations > 0; iterations--) {\n    // 0.99 is a experience parameter, ensure that each iterations of\n    // changes as small as possible.\n    alpha *= 0.99;\n    relaxRightToLeft(nodesByBreadth, alpha, orient);\n    resolveCollisions(nodesByBreadth, nodeGap, height, width, orient);\n    relaxLeftToRight(nodesByBreadth, alpha, orient);\n    resolveCollisions(nodesByBreadth, nodeGap, height, width, orient);\n  }\n}\n\nfunction prepareNodesByBreadth(nodes, orient) {\n  var nodesByBreadth = [];\n  var keyAttr = orient === 'vertical' ? 'y' : 'x';\n  var groupResult = groupData(nodes, function (node) {\n    return node.getLayout()[keyAttr];\n  });\n  groupResult.keys.sort(function (a, b) {\n    return a - b;\n  });\n  zrUtil.each(groupResult.keys, function (key) {\n    nodesByBreadth.push(groupResult.buckets.get(key));\n  });\n  return nodesByBreadth;\n}\n/**\n * Compute the original y-position for each node\n *\n * @param {module:echarts/data/Graph~Node} nodes  node of sankey view\n * @param {Array.<Array.<module:echarts/data/Graph~Node>>} nodesByBreadth\n *     group by the array of all sankey nodes based on the nodes x-position.\n * @param {module:echarts/data/Graph~Edge} edges  edge of sankey view\n * @param {number} height  the whole height of the area to draw the view\n * @param {number} nodeGap  the vertical distance between two nodes\n */\n\n\nfunction initializeNodeDepth(nodesByBreadth, edges, height, width, nodeGap, orient) {\n  var minKy = Infinity;\n  zrUtil.each(nodesByBreadth, function (nodes) {\n    var n = nodes.length;\n    var sum = 0;\n    zrUtil.each(nodes, function (node) {\n      sum += node.getLayout().value;\n    });\n    var ky = orient === 'vertical' ? (width - (n - 1) * nodeGap) / sum : (height - (n - 1) * nodeGap) / sum;\n\n    if (ky < minKy) {\n      minKy = ky;\n    }\n  });\n  zrUtil.each(nodesByBreadth, function (nodes) {\n    zrUtil.each(nodes, function (node, i) {\n      var nodeDy = node.getLayout().value * minKy;\n\n      if (orient === 'vertical') {\n        node.setLayout({\n          x: i\n        }, true);\n        node.setLayout({\n          dx: nodeDy\n        }, true);\n      } else {\n        node.setLayout({\n          y: i\n        }, true);\n        node.setLayout({\n          dy: nodeDy\n        }, true);\n      }\n    });\n  });\n  zrUtil.each(edges, function (edge) {\n    var edgeDy = +edge.getValue() * minKy;\n    edge.setLayout({\n      dy: edgeDy\n    }, true);\n  });\n}\n/**\n * Resolve the collision of initialized depth (y-position)\n *\n * @param {Array.<Array.<module:echarts/data/Graph~Node>>} nodesByBreadth\n *     group by the array of all sankey nodes based on the nodes x-position.\n * @param {number} nodeGap  the vertical distance between two nodes\n * @param {number} height  the whole height of the area to draw the view\n */\n\n\nfunction resolveCollisions(nodesByBreadth, nodeGap, height, width, orient) {\n  var keyAttr = orient === 'vertical' ? 'x' : 'y';\n  zrUtil.each(nodesByBreadth, function (nodes) {\n    nodes.sort(function (a, b) {\n      return a.getLayout()[keyAttr] - b.getLayout()[keyAttr];\n    });\n    var nodeX;\n    var node;\n    var dy;\n    var y0 = 0;\n    var n = nodes.length;\n    var nodeDyAttr = orient === 'vertical' ? 'dx' : 'dy';\n\n    for (var i = 0; i < n; i++) {\n      node = nodes[i];\n      dy = y0 - node.getLayout()[keyAttr];\n\n      if (dy > 0) {\n        nodeX = node.getLayout()[keyAttr] + dy;\n        orient === 'vertical' ? node.setLayout({\n          x: nodeX\n        }, true) : node.setLayout({\n          y: nodeX\n        }, true);\n      }\n\n      y0 = node.getLayout()[keyAttr] + node.getLayout()[nodeDyAttr] + nodeGap;\n    }\n\n    var viewWidth = orient === 'vertical' ? width : height; // If the bottommost node goes outside the bounds, push it back up\n\n    dy = y0 - nodeGap - viewWidth;\n\n    if (dy > 0) {\n      nodeX = node.getLayout()[keyAttr] - dy;\n      orient === 'vertical' ? node.setLayout({\n        x: nodeX\n      }, true) : node.setLayout({\n        y: nodeX\n      }, true);\n      y0 = nodeX;\n\n      for (i = n - 2; i >= 0; --i) {\n        node = nodes[i];\n        dy = node.getLayout()[keyAttr] + node.getLayout()[nodeDyAttr] + nodeGap - y0;\n\n        if (dy > 0) {\n          nodeX = node.getLayout()[keyAttr] - dy;\n          orient === 'vertical' ? node.setLayout({\n            x: nodeX\n          }, true) : node.setLayout({\n            y: nodeX\n          }, true);\n        }\n\n        y0 = node.getLayout()[keyAttr];\n      }\n    }\n  });\n}\n/**\n * Change the y-position of the nodes, except most the right side nodes\n *\n * @param {Array.<Array.<module:echarts/data/Graph~Node>>} nodesByBreadth\n *     group by the array of all sankey nodes based on the node x-position.\n * @param {number} alpha  parameter used to adjust the nodes y-position\n */\n\n\nfunction relaxRightToLeft(nodesByBreadth, alpha, orient) {\n  zrUtil.each(nodesByBreadth.slice().reverse(), function (nodes) {\n    zrUtil.each(nodes, function (node) {\n      if (node.outEdges.length) {\n        var y = sum(node.outEdges, weightedTarget, orient) / sum(node.outEdges, getEdgeValue, orient);\n\n        if (isNaN(y)) {\n          var len = node.outEdges.length;\n          y = len ? sum(node.outEdges, centerTarget, orient) / len : 0;\n        }\n\n        if (orient === 'vertical') {\n          var nodeX = node.getLayout().x + (y - center(node, orient)) * alpha;\n          node.setLayout({\n            x: nodeX\n          }, true);\n        } else {\n          var nodeY = node.getLayout().y + (y - center(node, orient)) * alpha;\n          node.setLayout({\n            y: nodeY\n          }, true);\n        }\n      }\n    });\n  });\n}\n\nfunction weightedTarget(edge, orient) {\n  return center(edge.node2, orient) * edge.getValue();\n}\n\nfunction centerTarget(edge, orient) {\n  return center(edge.node2, orient);\n}\n\nfunction weightedSource(edge, orient) {\n  return center(edge.node1, orient) * edge.getValue();\n}\n\nfunction centerSource(edge, orient) {\n  return center(edge.node1, orient);\n}\n\nfunction center(node, orient) {\n  return orient === 'vertical' ? node.getLayout().x + node.getLayout().dx / 2 : node.getLayout().y + node.getLayout().dy / 2;\n}\n\nfunction getEdgeValue(edge) {\n  return edge.getValue();\n}\n\nfunction sum(array, cb, orient) {\n  var sum = 0;\n  var len = array.length;\n  var i = -1;\n\n  while (++i < len) {\n    var value = +cb.call(array, array[i], orient);\n\n    if (!isNaN(value)) {\n      sum += value;\n    }\n  }\n\n  return sum;\n}\n/**\n * Change the y-position of the nodes, except most the left side nodes\n *\n * @param {Array.<Array.<module:echarts/data/Graph~Node>>} nodesByBreadth\n *     group by the array of all sankey nodes based on the node x-position.\n * @param {number} alpha  parameter used to adjust the nodes y-position\n */\n\n\nfunction relaxLeftToRight(nodesByBreadth, alpha, orient) {\n  zrUtil.each(nodesByBreadth, function (nodes) {\n    zrUtil.each(nodes, function (node) {\n      if (node.inEdges.length) {\n        var y = sum(node.inEdges, weightedSource, orient) / sum(node.inEdges, getEdgeValue, orient);\n\n        if (isNaN(y)) {\n          var len = node.inEdges.length;\n          y = len ? sum(node.inEdges, centerSource, orient) / len : 0;\n        }\n\n        if (orient === 'vertical') {\n          var nodeX = node.getLayout().x + (y - center(node, orient)) * alpha;\n          node.setLayout({\n            x: nodeX\n          }, true);\n        } else {\n          var nodeY = node.getLayout().y + (y - center(node, orient)) * alpha;\n          node.setLayout({\n            y: nodeY\n          }, true);\n        }\n      }\n    });\n  });\n}\n/**\n * Compute the depth(y-position) of each edge\n *\n * @param {module:echarts/data/Graph~Node} nodes  node of sankey view\n */\n\n\nfunction computeEdgeDepths(nodes, orient) {\n  var keyAttr = orient === 'vertical' ? 'x' : 'y';\n  zrUtil.each(nodes, function (node) {\n    node.outEdges.sort(function (a, b) {\n      return a.node2.getLayout()[keyAttr] - b.node2.getLayout()[keyAttr];\n    });\n    node.inEdges.sort(function (a, b) {\n      return a.node1.getLayout()[keyAttr] - b.node1.getLayout()[keyAttr];\n    });\n  });\n  zrUtil.each(nodes, function (node) {\n    var sy = 0;\n    var ty = 0;\n    zrUtil.each(node.outEdges, function (edge) {\n      edge.setLayout({\n        sy: sy\n      }, true);\n      sy += edge.getLayout().dy;\n    });\n    zrUtil.each(node.inEdges, function (edge) {\n      edge.setLayout({\n        ty: ty\n      }, true);\n      ty += edge.getLayout().dy;\n    });\n  });\n}\n\nmodule.exports = _default;"]}]}