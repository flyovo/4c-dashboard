{"remainingRequest":"/Users/id-repair/Documents/SEOL/4c-dashboard/node_modules/babel-loader/lib/index.js!/Users/id-repair/Documents/SEOL/4c-dashboard/node_modules/echarts/lib/chart/map/mapDataStatistic.js","dependencies":[{"path":"/Users/id-repair/Documents/SEOL/4c-dashboard/node_modules/echarts/lib/chart/map/mapDataStatistic.js","mtime":499162500000},{"path":"/Users/id-repair/Documents/SEOL/4c-dashboard/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/id-repair/Documents/SEOL/4c-dashboard/node_modules/babel-loader/lib/index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:cmVxdWlyZSgiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5Lm1hcC5qcyIpOwoKLyoKKiBMaWNlbnNlZCB0byB0aGUgQXBhY2hlIFNvZnR3YXJlIEZvdW5kYXRpb24gKEFTRikgdW5kZXIgb25lCiogb3IgbW9yZSBjb250cmlidXRvciBsaWNlbnNlIGFncmVlbWVudHMuICBTZWUgdGhlIE5PVElDRSBmaWxlCiogZGlzdHJpYnV0ZWQgd2l0aCB0aGlzIHdvcmsgZm9yIGFkZGl0aW9uYWwgaW5mb3JtYXRpb24KKiByZWdhcmRpbmcgY29weXJpZ2h0IG93bmVyc2hpcC4gIFRoZSBBU0YgbGljZW5zZXMgdGhpcyBmaWxlCiogdG8geW91IHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZQoqICJMaWNlbnNlIik7IHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2UKKiB3aXRoIHRoZSBMaWNlbnNlLiAgWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0CioKKiAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMAoqCiogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLAoqIHNvZnR3YXJlIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuCiogIkFTIElTIiBCQVNJUywgV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZCiogS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC4gIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlCiogc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZCBsaW1pdGF0aW9ucwoqIHVuZGVyIHRoZSBMaWNlbnNlLgoqLwp2YXIgenJVdGlsID0gcmVxdWlyZSgienJlbmRlci9saWIvY29yZS91dGlsIik7Ci8qCiogTGljZW5zZWQgdG8gdGhlIEFwYWNoZSBTb2Z0d2FyZSBGb3VuZGF0aW9uIChBU0YpIHVuZGVyIG9uZQoqIG9yIG1vcmUgY29udHJpYnV0b3IgbGljZW5zZSBhZ3JlZW1lbnRzLiAgU2VlIHRoZSBOT1RJQ0UgZmlsZQoqIGRpc3RyaWJ1dGVkIHdpdGggdGhpcyB3b3JrIGZvciBhZGRpdGlvbmFsIGluZm9ybWF0aW9uCiogcmVnYXJkaW5nIGNvcHlyaWdodCBvd25lcnNoaXAuICBUaGUgQVNGIGxpY2Vuc2VzIHRoaXMgZmlsZQoqIHRvIHlvdSB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUKKiAiTGljZW5zZSIpOyB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlCiogd2l0aCB0aGUgTGljZW5zZS4gIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdAoqCiogICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjAKKgoqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywKKiBzb2Z0d2FyZSBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbgoqICJBUyBJUyIgQkFTSVMsIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWQoqIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuICBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZQoqIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmQgbGltaXRhdGlvbnMKKiB1bmRlciB0aGUgTGljZW5zZS4KKi8KLy8gRklYTUUg5YWs55So77yfCgovKioKICogQHBhcmFtIHtBcnJheS48bW9kdWxlOmVjaGFydHMvZGF0YS9MaXN0Pn0gZGF0YXMKICogQHBhcmFtIHtzdHJpbmd9IHN0YXRpc3RpY1R5cGUgJ2F2ZXJhZ2UnICdzdW0nCiAqIEBpbm5lcgogKi8KCgpmdW5jdGlvbiBkYXRhU3RhdGlzdGljcyhkYXRhcywgc3RhdGlzdGljVHlwZSkgewogIHZhciBkYXRhTmFtZU1hcCA9IHt9OwogIHpyVXRpbC5lYWNoKGRhdGFzLCBmdW5jdGlvbiAoZGF0YSkgewogICAgZGF0YS5lYWNoKGRhdGEubWFwRGltZW5zaW9uKCd2YWx1ZScpLCBmdW5jdGlvbiAodmFsdWUsIGlkeCkgewogICAgICAvLyBBZGQgcHJlZml4IHRvIGF2b2lkIGNvbmZsaWN0IHdpdGggT2JqZWN0LnByb3RvdHlwZS4KICAgICAgdmFyIG1hcEtleSA9ICdlYy0nICsgZGF0YS5nZXROYW1lKGlkeCk7CiAgICAgIGRhdGFOYW1lTWFwW21hcEtleV0gPSBkYXRhTmFtZU1hcFttYXBLZXldIHx8IFtdOwoKICAgICAgaWYgKCFpc05hTih2YWx1ZSkpIHsKICAgICAgICBkYXRhTmFtZU1hcFttYXBLZXldLnB1c2godmFsdWUpOwogICAgICB9CiAgICB9KTsKICB9KTsKICByZXR1cm4gZGF0YXNbMF0ubWFwKGRhdGFzWzBdLm1hcERpbWVuc2lvbigndmFsdWUnKSwgZnVuY3Rpb24gKHZhbHVlLCBpZHgpIHsKICAgIHZhciBtYXBLZXkgPSAnZWMtJyArIGRhdGFzWzBdLmdldE5hbWUoaWR4KTsKICAgIHZhciBzdW0gPSAwOwogICAgdmFyIG1pbiA9IEluZmluaXR5OwogICAgdmFyIG1heCA9IC1JbmZpbml0eTsKICAgIHZhciBsZW4gPSBkYXRhTmFtZU1hcFttYXBLZXldLmxlbmd0aDsKCiAgICBmb3IgKHZhciBpID0gMDsgaSA8IGxlbjsgaSsrKSB7CiAgICAgIG1pbiA9IE1hdGgubWluKG1pbiwgZGF0YU5hbWVNYXBbbWFwS2V5XVtpXSk7CiAgICAgIG1heCA9IE1hdGgubWF4KG1heCwgZGF0YU5hbWVNYXBbbWFwS2V5XVtpXSk7CiAgICAgIHN1bSArPSBkYXRhTmFtZU1hcFttYXBLZXldW2ldOwogICAgfQoKICAgIHZhciByZXN1bHQ7CgogICAgaWYgKHN0YXRpc3RpY1R5cGUgPT09ICdtaW4nKSB7CiAgICAgIHJlc3VsdCA9IG1pbjsKICAgIH0gZWxzZSBpZiAoc3RhdGlzdGljVHlwZSA9PT0gJ21heCcpIHsKICAgICAgcmVzdWx0ID0gbWF4OwogICAgfSBlbHNlIGlmIChzdGF0aXN0aWNUeXBlID09PSAnYXZlcmFnZScpIHsKICAgICAgcmVzdWx0ID0gc3VtIC8gbGVuOwogICAgfSBlbHNlIHsKICAgICAgcmVzdWx0ID0gc3VtOwogICAgfQoKICAgIHJldHVybiBsZW4gPT09IDAgPyBOYU4gOiByZXN1bHQ7CiAgfSk7Cn0KCmZ1bmN0aW9uIF9kZWZhdWx0KGVjTW9kZWwpIHsKICB2YXIgc2VyaWVzR3JvdXBzID0ge307CiAgZWNNb2RlbC5lYWNoU2VyaWVzQnlUeXBlKCdtYXAnLCBmdW5jdGlvbiAoc2VyaWVzTW9kZWwpIHsKICAgIHZhciBob3N0R2VvTW9kZWwgPSBzZXJpZXNNb2RlbC5nZXRIb3N0R2VvTW9kZWwoKTsKICAgIHZhciBrZXkgPSBob3N0R2VvTW9kZWwgPyAnbycgKyBob3N0R2VvTW9kZWwuaWQgOiAnaScgKyBzZXJpZXNNb2RlbC5nZXRNYXBUeXBlKCk7CiAgICAoc2VyaWVzR3JvdXBzW2tleV0gPSBzZXJpZXNHcm91cHNba2V5XSB8fCBbXSkucHVzaChzZXJpZXNNb2RlbCk7CiAgfSk7CiAgenJVdGlsLmVhY2goc2VyaWVzR3JvdXBzLCBmdW5jdGlvbiAoc2VyaWVzTGlzdCwga2V5KSB7CiAgICB2YXIgZGF0YSA9IGRhdGFTdGF0aXN0aWNzKHpyVXRpbC5tYXAoc2VyaWVzTGlzdCwgZnVuY3Rpb24gKHNlcmllc01vZGVsKSB7CiAgICAgIHJldHVybiBzZXJpZXNNb2RlbC5nZXREYXRhKCk7CiAgICB9KSwgc2VyaWVzTGlzdFswXS5nZXQoJ21hcFZhbHVlQ2FsY3VsYXRpb24nKSk7CgogICAgZm9yICh2YXIgaSA9IDA7IGkgPCBzZXJpZXNMaXN0Lmxlbmd0aDsgaSsrKSB7CiAgICAgIHNlcmllc0xpc3RbaV0ub3JpZ2luYWxEYXRhID0gc2VyaWVzTGlzdFtpXS5nZXREYXRhKCk7CiAgICB9IC8vIEZJWE1FIFB1dCB3aGVyZT8KCgogICAgZm9yICh2YXIgaSA9IDA7IGkgPCBzZXJpZXNMaXN0Lmxlbmd0aDsgaSsrKSB7CiAgICAgIHNlcmllc0xpc3RbaV0uc2VyaWVzR3JvdXAgPSBzZXJpZXNMaXN0OwogICAgICBzZXJpZXNMaXN0W2ldLm5lZWRzRHJhd01hcCA9IGkgPT09IDAgJiYgIXNlcmllc0xpc3RbaV0uZ2V0SG9zdEdlb01vZGVsKCk7CiAgICAgIHNlcmllc0xpc3RbaV0uc2V0RGF0YShkYXRhLmNsb25lU2hhbGxvdygpKTsKICAgICAgc2VyaWVzTGlzdFtpXS5tYWluU2VyaWVzID0gc2VyaWVzTGlzdFswXTsKICAgIH0KICB9KTsKfQoKbW9kdWxlLmV4cG9ydHMgPSBfZGVmYXVsdDs="},{"version":3,"sources":["/Users/id-repair/Documents/SEOL/4c-dashboard/node_modules/echarts/lib/chart/map/mapDataStatistic.js"],"names":["zrUtil","require","dataStatistics","datas","statisticType","dataNameMap","each","data","mapDimension","value","idx","mapKey","getName","isNaN","push","map","sum","min","Infinity","max","len","length","i","Math","result","NaN","_default","ecModel","seriesGroups","eachSeriesByType","seriesModel","hostGeoModel","getHostGeoModel","key","id","getMapType","seriesList","getData","get","originalData","seriesGroup","needsDrawMap","setData","cloneShallow","mainSeries","module","exports"],"mappings":"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","sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// FIXME 公用？\n\n/**\n * @param {Array.<module:echarts/data/List>} datas\n * @param {string} statisticType 'average' 'sum'\n * @inner\n */\nfunction dataStatistics(datas, statisticType) {\n  var dataNameMap = {};\n  zrUtil.each(datas, function (data) {\n    data.each(data.mapDimension('value'), function (value, idx) {\n      // Add prefix to avoid conflict with Object.prototype.\n      var mapKey = 'ec-' + data.getName(idx);\n      dataNameMap[mapKey] = dataNameMap[mapKey] || [];\n\n      if (!isNaN(value)) {\n        dataNameMap[mapKey].push(value);\n      }\n    });\n  });\n  return datas[0].map(datas[0].mapDimension('value'), function (value, idx) {\n    var mapKey = 'ec-' + datas[0].getName(idx);\n    var sum = 0;\n    var min = Infinity;\n    var max = -Infinity;\n    var len = dataNameMap[mapKey].length;\n\n    for (var i = 0; i < len; i++) {\n      min = Math.min(min, dataNameMap[mapKey][i]);\n      max = Math.max(max, dataNameMap[mapKey][i]);\n      sum += dataNameMap[mapKey][i];\n    }\n\n    var result;\n\n    if (statisticType === 'min') {\n      result = min;\n    } else if (statisticType === 'max') {\n      result = max;\n    } else if (statisticType === 'average') {\n      result = sum / len;\n    } else {\n      result = sum;\n    }\n\n    return len === 0 ? NaN : result;\n  });\n}\n\nfunction _default(ecModel) {\n  var seriesGroups = {};\n  ecModel.eachSeriesByType('map', function (seriesModel) {\n    var hostGeoModel = seriesModel.getHostGeoModel();\n    var key = hostGeoModel ? 'o' + hostGeoModel.id : 'i' + seriesModel.getMapType();\n    (seriesGroups[key] = seriesGroups[key] || []).push(seriesModel);\n  });\n  zrUtil.each(seriesGroups, function (seriesList, key) {\n    var data = dataStatistics(zrUtil.map(seriesList, function (seriesModel) {\n      return seriesModel.getData();\n    }), seriesList[0].get('mapValueCalculation'));\n\n    for (var i = 0; i < seriesList.length; i++) {\n      seriesList[i].originalData = seriesList[i].getData();\n    } // FIXME Put where?\n\n\n    for (var i = 0; i < seriesList.length; i++) {\n      seriesList[i].seriesGroup = seriesList;\n      seriesList[i].needsDrawMap = i === 0 && !seriesList[i].getHostGeoModel();\n      seriesList[i].setData(data.cloneShallow());\n      seriesList[i].mainSeries = seriesList[0];\n    }\n  });\n}\n\nmodule.exports = _default;"]}]}