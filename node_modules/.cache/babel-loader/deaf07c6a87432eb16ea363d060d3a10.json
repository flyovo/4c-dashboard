{"remainingRequest":"/Users/id-repair/Documents/SEOL/4c-dashboard/node_modules/babel-loader/lib/index.js!/Users/id-repair/Documents/SEOL/4c-dashboard/node_modules/echarts/lib/component/dataZoom/AxisProxy.js","dependencies":[{"path":"/Users/id-repair/Documents/SEOL/4c-dashboard/node_modules/echarts/lib/component/dataZoom/AxisProxy.js","mtime":499162500000},{"path":"/Users/id-repair/Documents/SEOL/4c-dashboard/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/id-repair/Documents/SEOL/4c-dashboard/node_modules/babel-loader/lib/index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/id-repair/Documents/SEOL/4c-dashboard/node_modules/echarts/lib/component/dataZoom/AxisProxy.js"],"names":["zrUtil","require","numberUtil","helper","sliderMove","each","asc","AxisProxy","dimName","axisIndex","dataZoomModel","ecModel","_dimName","_axisIndex","_valueWindow","_percentWindow","_dataExtent","_minMaxSpan","_dataZoomModel","prototype","constructor","hostedBy","getDataValueWindow","slice","getDataPercentWindow","getTargetSeriesModels","seriesModels","eachSeries","seriesModel","isCoordSupported","get","axisModel","queryComponents","mainType","index","id","componentIndex","push","getAxisModel","getComponent","getOtherAxisModel","axisDim","isCartesian","otherAxisDim","coordSysIndexName","foundOtherAxisModel","eachComponent","otherAxisModel","getMinMaxSpan","clone","calculateDataWindow","opt","dataExtent","scale","axis","rangePropMode","getRangePropMode","percentExtent","percentWindow","valueWindow","hasPropModeValue","prop","idx","boundPercent","boundValue","parse","linearMap","spans","restrictSet","fromWindow","toWindow","fromExtent","toExtent","toValue","suffix","i","reset","targetSeries","calculateDataExtent","setMinMaxSpan","dataWindow","settledOption","setAxisModel","restore","filterData","api","filterMode","seriesData","getData","dataDims","mapDimension","length","filterSelf","dataIndex","leftOut","rightOut","hasValue","value","thisHasValue","isNaN","thisLeftOut","thisRightOut","dim","setData","map","isInWindow","NaN","range","selectRange","setApproximateExtent","axisProxy","Infinity","seriesExtent","getApproximateExtent","fixExtentByAxis","min","getMin","isCategoryAxis","axisDataLen","getCategories","max","getMax","isRestore","precision","getPixelPrecision","Math","useOrigin","setRange","toFixed","minMaxSpan","minMax","percentSpan","valueSpan","_default","module","exports"],"mappings":"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","sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar helper = require(\"./helper\");\n\nvar sliderMove = require(\"../helper/sliderMove\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar each = zrUtil.each;\nvar asc = numberUtil.asc;\n/**\n * Operate single axis.\n * One axis can only operated by one axis operator.\n * Different dataZoomModels may be defined to operate the same axis.\n * (i.e. 'inside' data zoom and 'slider' data zoom components)\n * So dataZoomModels share one axisProxy in that case.\n *\n * @class\n */\n\nvar AxisProxy = function (dimName, axisIndex, dataZoomModel, ecModel) {\n  /**\n   * @private\n   * @type {string}\n   */\n  this._dimName = dimName;\n  /**\n   * @private\n   */\n\n  this._axisIndex = axisIndex;\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n\n  this._valueWindow;\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n\n  this._percentWindow;\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n\n  this._dataExtent;\n  /**\n   * {minSpan, maxSpan, minValueSpan, maxValueSpan}\n   * @private\n   * @type {Object}\n   */\n\n  this._minMaxSpan;\n  /**\n   * @readOnly\n   * @type {module: echarts/model/Global}\n   */\n\n  this.ecModel = ecModel;\n  /**\n   * @private\n   * @type {module: echarts/component/dataZoom/DataZoomModel}\n   */\n\n  this._dataZoomModel = dataZoomModel; // /**\n  //  * @readOnly\n  //  * @private\n  //  */\n  // this.hasSeriesStacked;\n};\n\nAxisProxy.prototype = {\n  constructor: AxisProxy,\n\n  /**\n   * Whether the axisProxy is hosted by dataZoomModel.\n   *\n   * @public\n   * @param {module: echarts/component/dataZoom/DataZoomModel} dataZoomModel\n   * @return {boolean}\n   */\n  hostedBy: function (dataZoomModel) {\n    return this._dataZoomModel === dataZoomModel;\n  },\n\n  /**\n   * @return {Array.<number>} Value can only be NaN or finite value.\n   */\n  getDataValueWindow: function () {\n    return this._valueWindow.slice();\n  },\n\n  /**\n   * @return {Array.<number>}\n   */\n  getDataPercentWindow: function () {\n    return this._percentWindow.slice();\n  },\n\n  /**\n   * @public\n   * @param {number} axisIndex\n   * @return {Array} seriesModels\n   */\n  getTargetSeriesModels: function () {\n    var seriesModels = [];\n    var ecModel = this.ecModel;\n    ecModel.eachSeries(function (seriesModel) {\n      if (helper.isCoordSupported(seriesModel.get('coordinateSystem'))) {\n        var dimName = this._dimName;\n        var axisModel = ecModel.queryComponents({\n          mainType: dimName + 'Axis',\n          index: seriesModel.get(dimName + 'AxisIndex'),\n          id: seriesModel.get(dimName + 'AxisId')\n        })[0];\n\n        if (this._axisIndex === (axisModel && axisModel.componentIndex)) {\n          seriesModels.push(seriesModel);\n        }\n      }\n    }, this);\n    return seriesModels;\n  },\n  getAxisModel: function () {\n    return this.ecModel.getComponent(this._dimName + 'Axis', this._axisIndex);\n  },\n  getOtherAxisModel: function () {\n    var axisDim = this._dimName;\n    var ecModel = this.ecModel;\n    var axisModel = this.getAxisModel();\n    var isCartesian = axisDim === 'x' || axisDim === 'y';\n    var otherAxisDim;\n    var coordSysIndexName;\n\n    if (isCartesian) {\n      coordSysIndexName = 'gridIndex';\n      otherAxisDim = axisDim === 'x' ? 'y' : 'x';\n    } else {\n      coordSysIndexName = 'polarIndex';\n      otherAxisDim = axisDim === 'angle' ? 'radius' : 'angle';\n    }\n\n    var foundOtherAxisModel;\n    ecModel.eachComponent(otherAxisDim + 'Axis', function (otherAxisModel) {\n      if ((otherAxisModel.get(coordSysIndexName) || 0) === (axisModel.get(coordSysIndexName) || 0)) {\n        foundOtherAxisModel = otherAxisModel;\n      }\n    });\n    return foundOtherAxisModel;\n  },\n  getMinMaxSpan: function () {\n    return zrUtil.clone(this._minMaxSpan);\n  },\n\n  /**\n   * Only calculate by given range and this._dataExtent, do not change anything.\n   *\n   * @param {Object} opt\n   * @param {number} [opt.start]\n   * @param {number} [opt.end]\n   * @param {number} [opt.startValue]\n   * @param {number} [opt.endValue]\n   */\n  calculateDataWindow: function (opt) {\n    var dataExtent = this._dataExtent;\n    var axisModel = this.getAxisModel();\n    var scale = axisModel.axis.scale;\n\n    var rangePropMode = this._dataZoomModel.getRangePropMode();\n\n    var percentExtent = [0, 100];\n    var percentWindow = [];\n    var valueWindow = [];\n    var hasPropModeValue;\n    each(['start', 'end'], function (prop, idx) {\n      var boundPercent = opt[prop];\n      var boundValue = opt[prop + 'Value']; // Notice: dataZoom is based either on `percentProp` ('start', 'end') or\n      // on `valueProp` ('startValue', 'endValue'). (They are based on the data extent\n      // but not min/max of axis, which will be calculated by data window then).\n      // The former one is suitable for cases that a dataZoom component controls multiple\n      // axes with different unit or extent, and the latter one is suitable for accurate\n      // zoom by pixel (e.g., in dataZoomSelect).\n      // we use `getRangePropMode()` to mark which prop is used. `rangePropMode` is updated\n      // only when setOption or dispatchAction, otherwise it remains its original value.\n      // (Why not only record `percentProp` and always map to `valueProp`? Because\n      // the map `valueProp` -> `percentProp` -> `valueProp` probably not the original\n      // `valueProp`. consider two axes constrolled by one dataZoom. They have different\n      // data extent. All of values that are overflow the `dataExtent` will be calculated\n      // to percent '100%').\n\n      if (rangePropMode[idx] === 'percent') {\n        boundPercent == null && (boundPercent = percentExtent[idx]); // Use scale.parse to math round for category or time axis.\n\n        boundValue = scale.parse(numberUtil.linearMap(boundPercent, percentExtent, dataExtent));\n      } else {\n        hasPropModeValue = true;\n        boundValue = boundValue == null ? dataExtent[idx] : scale.parse(boundValue); // Calculating `percent` from `value` may be not accurate, because\n        // This calculation can not be inversed, because all of values that\n        // are overflow the `dataExtent` will be calculated to percent '100%'\n\n        boundPercent = numberUtil.linearMap(boundValue, dataExtent, percentExtent);\n      } // valueWindow[idx] = round(boundValue);\n      // percentWindow[idx] = round(boundPercent);\n\n\n      valueWindow[idx] = boundValue;\n      percentWindow[idx] = boundPercent;\n    });\n    asc(valueWindow);\n    asc(percentWindow); // The windows from user calling of `dispatchAction` might be out of the extent,\n    // or do not obey the `min/maxSpan`, `min/maxValueSpan`. But we dont restrict window\n    // by `zoomLock` here, because we see `zoomLock` just as a interaction constraint,\n    // where API is able to initialize/modify the window size even though `zoomLock`\n    // specified.\n\n    var spans = this._minMaxSpan;\n    hasPropModeValue ? restrictSet(valueWindow, percentWindow, dataExtent, percentExtent, false) : restrictSet(percentWindow, valueWindow, percentExtent, dataExtent, true);\n\n    function restrictSet(fromWindow, toWindow, fromExtent, toExtent, toValue) {\n      var suffix = toValue ? 'Span' : 'ValueSpan';\n      sliderMove(0, fromWindow, fromExtent, 'all', spans['min' + suffix], spans['max' + suffix]);\n\n      for (var i = 0; i < 2; i++) {\n        toWindow[i] = numberUtil.linearMap(fromWindow[i], fromExtent, toExtent, true);\n        toValue && (toWindow[i] = scale.parse(toWindow[i]));\n      }\n    }\n\n    return {\n      valueWindow: valueWindow,\n      percentWindow: percentWindow\n    };\n  },\n\n  /**\n   * Notice: reset should not be called before series.restoreData() called,\n   * so it is recommanded to be called in \"process stage\" but not \"model init\n   * stage\".\n   *\n   * @param {module: echarts/component/dataZoom/DataZoomModel} dataZoomModel\n   */\n  reset: function (dataZoomModel) {\n    if (dataZoomModel !== this._dataZoomModel) {\n      return;\n    }\n\n    var targetSeries = this.getTargetSeriesModels(); // Culculate data window and data extent, and record them.\n\n    this._dataExtent = calculateDataExtent(this, this._dimName, targetSeries); // this.hasSeriesStacked = false;\n    // each(targetSeries, function (series) {\n    // var data = series.getData();\n    // var dataDim = data.mapDimension(this._dimName);\n    // var stackedDimension = data.getCalculationInfo('stackedDimension');\n    // if (stackedDimension && stackedDimension === dataDim) {\n    // this.hasSeriesStacked = true;\n    // }\n    // }, this);\n    // `calculateDataWindow` uses min/maxSpan.\n\n    setMinMaxSpan(this);\n    var dataWindow = this.calculateDataWindow(dataZoomModel.settledOption);\n    this._valueWindow = dataWindow.valueWindow;\n    this._percentWindow = dataWindow.percentWindow; // Update axis setting then.\n\n    setAxisModel(this);\n  },\n\n  /**\n   * @param {module: echarts/component/dataZoom/DataZoomModel} dataZoomModel\n   */\n  restore: function (dataZoomModel) {\n    if (dataZoomModel !== this._dataZoomModel) {\n      return;\n    }\n\n    this._valueWindow = this._percentWindow = null;\n    setAxisModel(this, true);\n  },\n\n  /**\n   * @param {module: echarts/component/dataZoom/DataZoomModel} dataZoomModel\n   */\n  filterData: function (dataZoomModel, api) {\n    if (dataZoomModel !== this._dataZoomModel) {\n      return;\n    }\n\n    var axisDim = this._dimName;\n    var seriesModels = this.getTargetSeriesModels();\n    var filterMode = dataZoomModel.get('filterMode');\n    var valueWindow = this._valueWindow;\n\n    if (filterMode === 'none') {\n      return;\n    } // FIXME\n    // Toolbox may has dataZoom injected. And if there are stacked bar chart\n    // with NaN data, NaN will be filtered and stack will be wrong.\n    // So we need to force the mode to be set empty.\n    // In fect, it is not a big deal that do not support filterMode-'filter'\n    // when using toolbox#dataZoom, utill tooltip#dataZoom support \"single axis\n    // selection\" some day, which might need \"adapt to data extent on the\n    // otherAxis\", which is disabled by filterMode-'empty'.\n    // But currently, stack has been fixed to based on value but not index,\n    // so this is not an issue any more.\n    // var otherAxisModel = this.getOtherAxisModel();\n    // if (dataZoomModel.get('$fromToolbox')\n    //     && otherAxisModel\n    //     && otherAxisModel.hasSeriesStacked\n    // ) {\n    //     filterMode = 'empty';\n    // }\n    // TODO\n    // filterMode 'weakFilter' and 'empty' is not optimized for huge data yet.\n\n\n    each(seriesModels, function (seriesModel) {\n      var seriesData = seriesModel.getData();\n      var dataDims = seriesData.mapDimension(axisDim, true);\n\n      if (!dataDims.length) {\n        return;\n      }\n\n      if (filterMode === 'weakFilter') {\n        seriesData.filterSelf(function (dataIndex) {\n          var leftOut;\n          var rightOut;\n          var hasValue;\n\n          for (var i = 0; i < dataDims.length; i++) {\n            var value = seriesData.get(dataDims[i], dataIndex);\n            var thisHasValue = !isNaN(value);\n            var thisLeftOut = value < valueWindow[0];\n            var thisRightOut = value > valueWindow[1];\n\n            if (thisHasValue && !thisLeftOut && !thisRightOut) {\n              return true;\n            }\n\n            thisHasValue && (hasValue = true);\n            thisLeftOut && (leftOut = true);\n            thisRightOut && (rightOut = true);\n          } // If both left out and right out, do not filter.\n\n\n          return hasValue && leftOut && rightOut;\n        });\n      } else {\n        each(dataDims, function (dim) {\n          if (filterMode === 'empty') {\n            seriesModel.setData(seriesData = seriesData.map(dim, function (value) {\n              return !isInWindow(value) ? NaN : value;\n            }));\n          } else {\n            var range = {};\n            range[dim] = valueWindow; // console.time('select');\n\n            seriesData.selectRange(range); // console.timeEnd('select');\n          }\n        });\n      }\n\n      each(dataDims, function (dim) {\n        seriesData.setApproximateExtent(valueWindow, dim);\n      });\n    });\n\n    function isInWindow(value) {\n      return value >= valueWindow[0] && value <= valueWindow[1];\n    }\n  }\n};\n\nfunction calculateDataExtent(axisProxy, axisDim, seriesModels) {\n  var dataExtent = [Infinity, -Infinity];\n  each(seriesModels, function (seriesModel) {\n    var seriesData = seriesModel.getData();\n\n    if (seriesData) {\n      each(seriesData.mapDimension(axisDim, true), function (dim) {\n        var seriesExtent = seriesData.getApproximateExtent(dim);\n        seriesExtent[0] < dataExtent[0] && (dataExtent[0] = seriesExtent[0]);\n        seriesExtent[1] > dataExtent[1] && (dataExtent[1] = seriesExtent[1]);\n      });\n    }\n  });\n\n  if (dataExtent[1] < dataExtent[0]) {\n    dataExtent = [NaN, NaN];\n  } // It is important to get \"consistent\" extent when more then one axes is\n  // controlled by a `dataZoom`, otherwise those axes will not be synchronized\n  // when zooming. But it is difficult to know what is \"consistent\", considering\n  // axes have different type or even different meanings (For example, two\n  // time axes are used to compare data of the same date in different years).\n  // So basically dataZoom just obtains extent by series.data (in category axis\n  // extent can be obtained from axis.data).\n  // Nevertheless, user can set min/max/scale on axes to make extent of axes\n  // consistent.\n\n\n  fixExtentByAxis(axisProxy, dataExtent);\n  return dataExtent;\n}\n\nfunction fixExtentByAxis(axisProxy, dataExtent) {\n  var axisModel = axisProxy.getAxisModel();\n  var min = axisModel.getMin(true); // For category axis, if min/max/scale are not set, extent is determined\n  // by axis.data by default.\n\n  var isCategoryAxis = axisModel.get('type') === 'category';\n  var axisDataLen = isCategoryAxis && axisModel.getCategories().length;\n\n  if (min != null && min !== 'dataMin' && typeof min !== 'function') {\n    dataExtent[0] = min;\n  } else if (isCategoryAxis) {\n    dataExtent[0] = axisDataLen > 0 ? 0 : NaN;\n  }\n\n  var max = axisModel.getMax(true);\n\n  if (max != null && max !== 'dataMax' && typeof max !== 'function') {\n    dataExtent[1] = max;\n  } else if (isCategoryAxis) {\n    dataExtent[1] = axisDataLen > 0 ? axisDataLen - 1 : NaN;\n  }\n\n  if (!axisModel.get('scale', true)) {\n    dataExtent[0] > 0 && (dataExtent[0] = 0);\n    dataExtent[1] < 0 && (dataExtent[1] = 0);\n  } // For value axis, if min/max/scale are not set, we just use the extent obtained\n  // by series data, which may be a little different from the extent calculated by\n  // `axisHelper.getScaleExtent`. But the different just affects the experience a\n  // little when zooming. So it will not be fixed until some users require it strongly.\n\n\n  return dataExtent;\n}\n\nfunction setAxisModel(axisProxy, isRestore) {\n  var axisModel = axisProxy.getAxisModel();\n  var percentWindow = axisProxy._percentWindow;\n  var valueWindow = axisProxy._valueWindow;\n\n  if (!percentWindow) {\n    return;\n  } // [0, 500]: arbitrary value, guess axis extent.\n\n\n  var precision = numberUtil.getPixelPrecision(valueWindow, [0, 500]);\n  precision = Math.min(precision, 20); // isRestore or isFull\n\n  var useOrigin = isRestore || percentWindow[0] === 0 && percentWindow[1] === 100;\n  axisModel.setRange(useOrigin ? null : +valueWindow[0].toFixed(precision), useOrigin ? null : +valueWindow[1].toFixed(precision));\n}\n\nfunction setMinMaxSpan(axisProxy) {\n  var minMaxSpan = axisProxy._minMaxSpan = {};\n  var dataZoomModel = axisProxy._dataZoomModel;\n  var dataExtent = axisProxy._dataExtent;\n  each(['min', 'max'], function (minMax) {\n    var percentSpan = dataZoomModel.get(minMax + 'Span');\n    var valueSpan = dataZoomModel.get(minMax + 'ValueSpan');\n    valueSpan != null && (valueSpan = axisProxy.getAxisModel().axis.scale.parse(valueSpan)); // minValueSpan and maxValueSpan has higher priority than minSpan and maxSpan\n\n    if (valueSpan != null) {\n      percentSpan = numberUtil.linearMap(dataExtent[0] + valueSpan, dataExtent, [0, 100], true);\n    } else if (percentSpan != null) {\n      valueSpan = numberUtil.linearMap(percentSpan, [0, 100], dataExtent, true) - dataExtent[0];\n    }\n\n    minMaxSpan[minMax + 'Span'] = percentSpan;\n    minMaxSpan[minMax + 'ValueSpan'] = valueSpan;\n  });\n}\n\nvar _default = AxisProxy;\nmodule.exports = _default;"]}]}