{"remainingRequest":"/Users/id-repair/Documents/SEOL/4c-dashboard/node_modules/babel-loader/lib/index.js!/Users/id-repair/Documents/SEOL/4c-dashboard/node_modules/echarts/lib/coord/geo/mapDataStorage.js","dependencies":[{"path":"/Users/id-repair/Documents/SEOL/4c-dashboard/node_modules/echarts/lib/coord/geo/mapDataStorage.js","mtime":499162500000},{"path":"/Users/id-repair/Documents/SEOL/4c-dashboard/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/id-repair/Documents/SEOL/4c-dashboard/node_modules/babel-loader/lib/index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:LyoKKiBMaWNlbnNlZCB0byB0aGUgQXBhY2hlIFNvZnR3YXJlIEZvdW5kYXRpb24gKEFTRikgdW5kZXIgb25lCiogb3IgbW9yZSBjb250cmlidXRvciBsaWNlbnNlIGFncmVlbWVudHMuICBTZWUgdGhlIE5PVElDRSBmaWxlCiogZGlzdHJpYnV0ZWQgd2l0aCB0aGlzIHdvcmsgZm9yIGFkZGl0aW9uYWwgaW5mb3JtYXRpb24KKiByZWdhcmRpbmcgY29weXJpZ2h0IG93bmVyc2hpcC4gIFRoZSBBU0YgbGljZW5zZXMgdGhpcyBmaWxlCiogdG8geW91IHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZQoqICJMaWNlbnNlIik7IHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2UKKiB3aXRoIHRoZSBMaWNlbnNlLiAgWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0CioKKiAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMAoqCiogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLAoqIHNvZnR3YXJlIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuCiogIkFTIElTIiBCQVNJUywgV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZCiogS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC4gIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlCiogc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZCBsaW1pdGF0aW9ucwoqIHVuZGVyIHRoZSBMaWNlbnNlLgoqLwp2YXIgX2NvbmZpZyA9IHJlcXVpcmUoIi4uLy4uL2NvbmZpZyIpOwoKdmFyIF9fREVWX18gPSBfY29uZmlnLl9fREVWX187Cgp2YXIgX3V0aWwgPSByZXF1aXJlKCJ6cmVuZGVyL2xpYi9jb3JlL3V0aWwiKTsKCnZhciBjcmVhdGVIYXNoTWFwID0gX3V0aWwuY3JlYXRlSGFzaE1hcDsKdmFyIGlzU3RyaW5nID0gX3V0aWwuaXNTdHJpbmc7CnZhciBpc0FycmF5ID0gX3V0aWwuaXNBcnJheTsKdmFyIGVhY2ggPSBfdXRpbC5lYWNoOwp2YXIgYXNzZXJ0ID0gX3V0aWwuYXNzZXJ0OwoKdmFyIF9wYXJzZVNWRyA9IHJlcXVpcmUoInpyZW5kZXIvbGliL3Rvb2wvcGFyc2VTVkciKTsKCnZhciBwYXJzZVhNTCA9IF9wYXJzZVNWRy5wYXJzZVhNTDsKLyoKKiBMaWNlbnNlZCB0byB0aGUgQXBhY2hlIFNvZnR3YXJlIEZvdW5kYXRpb24gKEFTRikgdW5kZXIgb25lCiogb3IgbW9yZSBjb250cmlidXRvciBsaWNlbnNlIGFncmVlbWVudHMuICBTZWUgdGhlIE5PVElDRSBmaWxlCiogZGlzdHJpYnV0ZWQgd2l0aCB0aGlzIHdvcmsgZm9yIGFkZGl0aW9uYWwgaW5mb3JtYXRpb24KKiByZWdhcmRpbmcgY29weXJpZ2h0IG93bmVyc2hpcC4gIFRoZSBBU0YgbGljZW5zZXMgdGhpcyBmaWxlCiogdG8geW91IHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZQoqICJMaWNlbnNlIik7IHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2UKKiB3aXRoIHRoZSBMaWNlbnNlLiAgWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0CioKKiAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMAoqCiogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLAoqIHNvZnR3YXJlIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuCiogIkFTIElTIiBCQVNJUywgV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZCiogS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC4gIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlCiogc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZCBsaW1pdGF0aW9ucwoqIHVuZGVyIHRoZSBMaWNlbnNlLgoqLwoKdmFyIHN0b3JhZ2UgPSBjcmVhdGVIYXNoTWFwKCk7IC8vIEZvciBtaW5pbWl6ZSB0aGUgY29kZSBzaXplIG9mIGNvbW1vbiBlY2hhcnRzIHBhY2thZ2UsCi8vIGRvIG5vdCBwdXQgdG9vIG11Y2ggbG9naWMgaW4gdGhpcyBtb2R1bGUuCgp2YXIgX2RlZmF1bHQgPSB7CiAgLy8gVGhlIGZvcm1hdCBvZiByZWNvcmQ6IHNlZSBgZWNoYXJ0cy5yZWdpc3Rlck1hcGAuCiAgLy8gQ29tcGF0aWJsZSB3aXRoIHByZXZpb3VzIGBlY2hhcnRzLnJlZ2lzdGVyTWFwYC4KICByZWdpc3Rlck1hcDogZnVuY3Rpb24gcmVnaXN0ZXJNYXAobWFwTmFtZSwgcmF3R2VvSnNvbiwgcmF3U3BlY2lhbEFyZWFzKSB7CiAgICB2YXIgcmVjb3JkczsKCiAgICBpZiAoaXNBcnJheShyYXdHZW9Kc29uKSkgewogICAgICByZWNvcmRzID0gcmF3R2VvSnNvbjsKICAgIH0gZWxzZSBpZiAocmF3R2VvSnNvbi5zdmcpIHsKICAgICAgcmVjb3JkcyA9IFt7CiAgICAgICAgdHlwZTogJ3N2ZycsCiAgICAgICAgc291cmNlOiByYXdHZW9Kc29uLnN2ZywKICAgICAgICBzcGVjaWFsQXJlYXM6IHJhd0dlb0pzb24uc3BlY2lhbEFyZWFzCiAgICAgIH1dOwogICAgfSBlbHNlIHsKICAgICAgLy8gQmFja3dhcmQgY29tcGF0aWJpbGl0eS4KICAgICAgaWYgKHJhd0dlb0pzb24uZ2VvSnNvbiAmJiAhcmF3R2VvSnNvbi5mZWF0dXJlcykgewogICAgICAgIHJhd1NwZWNpYWxBcmVhcyA9IHJhd0dlb0pzb24uc3BlY2lhbEFyZWFzOwogICAgICAgIHJhd0dlb0pzb24gPSByYXdHZW9Kc29uLmdlb0pzb247CiAgICAgIH0KCiAgICAgIHJlY29yZHMgPSBbewogICAgICAgIHR5cGU6ICdnZW9KU09OJywKICAgICAgICBzb3VyY2U6IHJhd0dlb0pzb24sCiAgICAgICAgc3BlY2lhbEFyZWFzOiByYXdTcGVjaWFsQXJlYXMKICAgICAgfV07CiAgICB9CgogICAgZWFjaChyZWNvcmRzLCBmdW5jdGlvbiAocmVjb3JkKSB7CiAgICAgIHZhciB0eXBlID0gcmVjb3JkLnR5cGU7CiAgICAgIHR5cGUgPT09ICdnZW9Kc29uJyAmJiAodHlwZSA9IHJlY29yZC50eXBlID0gJ2dlb0pTT04nKTsKICAgICAgdmFyIHBhcnNlID0gcGFyc2Vyc1t0eXBlXTsKICAgICAgcGFyc2UocmVjb3JkKTsKICAgIH0pOwogICAgcmV0dXJuIHN0b3JhZ2Uuc2V0KG1hcE5hbWUsIHJlY29yZHMpOwogIH0sCiAgcmV0cmlldmVNYXA6IGZ1bmN0aW9uIHJldHJpZXZlTWFwKG1hcE5hbWUpIHsKICAgIHJldHVybiBzdG9yYWdlLmdldChtYXBOYW1lKTsKICB9Cn07CnZhciBwYXJzZXJzID0gewogIGdlb0pTT046IGZ1bmN0aW9uIGdlb0pTT04ocmVjb3JkKSB7CiAgICB2YXIgc291cmNlID0gcmVjb3JkLnNvdXJjZTsKICAgIHJlY29yZC5nZW9KU09OID0gIWlzU3RyaW5nKHNvdXJjZSkgPyBzb3VyY2UgOiB0eXBlb2YgSlNPTiAhPT0gJ3VuZGVmaW5lZCcgJiYgSlNPTi5wYXJzZSA/IEpTT04ucGFyc2Uoc291cmNlKSA6IG5ldyBGdW5jdGlvbigncmV0dXJuICgnICsgc291cmNlICsgJyk7JykoKTsKICB9LAogIC8vIE9ubHkgcGVyZm9ybSBwYXJzZSB0byBYTUwgb2JqZWN0IGhlcmUsIHdoaWNoIG1pZ2h0IGJlIHRpbWUKICAvLyBjb25zaW1pbmcgZm9yIGxhcmdlIFNWRy4KICAvLyBBbHRob3VnaCBjb252ZXJ0IFhNTCB0byB6cmVuZGVyIGVsZW1lbnQgaXMgYWxzbyB0aW1lIGNvbnNpbWluZywKICAvLyBpZiB3ZSBkbyBpdCBoZXJlLCB0aGUgY2xvbmUgb2YgenJlbmRlciBlbGVtZW50cyBoYXMgdG8gYmUKICAvLyByZXF1aXJlZC4gU28gd2UgZG8gaXQgb25jZSBmb3IgZWFjaCBnZW8gaW5zdGFuY2UsIHV0aWwgcmVhbAogIC8vIHBlcmZvcm1hbmNlIGlzc3VlcyBjYWxsIGZvciBvcHRpbWl6aW5nIGl0LgogIHN2ZzogZnVuY3Rpb24gc3ZnKHJlY29yZCkgewogICAgcmVjb3JkLnN2Z1hNTCA9IHBhcnNlWE1MKHJlY29yZC5zb3VyY2UpOwogIH0KfTsKbW9kdWxlLmV4cG9ydHMgPSBfZGVmYXVsdDs="},{"version":3,"sources":["/Users/id-repair/Documents/SEOL/4c-dashboard/node_modules/echarts/lib/coord/geo/mapDataStorage.js"],"names":["_config","require","__DEV__","_util","createHashMap","isString","isArray","each","assert","_parseSVG","parseXML","storage","_default","registerMap","mapName","rawGeoJson","rawSpecialAreas","records","svg","type","source","specialAreas","geoJson","features","record","parse","parsers","set","retrieveMap","get","geoJSON","JSON","Function","svgXML","module","exports"],"mappings":"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","sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar createHashMap = _util.createHashMap;\nvar isString = _util.isString;\nvar isArray = _util.isArray;\nvar each = _util.each;\nvar assert = _util.assert;\n\nvar _parseSVG = require(\"zrender/lib/tool/parseSVG\");\n\nvar parseXML = _parseSVG.parseXML;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar storage = createHashMap(); // For minimize the code size of common echarts package,\n// do not put too much logic in this module.\n\nvar _default = {\n  // The format of record: see `echarts.registerMap`.\n  // Compatible with previous `echarts.registerMap`.\n  registerMap: function (mapName, rawGeoJson, rawSpecialAreas) {\n    var records;\n\n    if (isArray(rawGeoJson)) {\n      records = rawGeoJson;\n    } else if (rawGeoJson.svg) {\n      records = [{\n        type: 'svg',\n        source: rawGeoJson.svg,\n        specialAreas: rawGeoJson.specialAreas\n      }];\n    } else {\n      // Backward compatibility.\n      if (rawGeoJson.geoJson && !rawGeoJson.features) {\n        rawSpecialAreas = rawGeoJson.specialAreas;\n        rawGeoJson = rawGeoJson.geoJson;\n      }\n\n      records = [{\n        type: 'geoJSON',\n        source: rawGeoJson,\n        specialAreas: rawSpecialAreas\n      }];\n    }\n\n    each(records, function (record) {\n      var type = record.type;\n      type === 'geoJson' && (type = record.type = 'geoJSON');\n      var parse = parsers[type];\n      parse(record);\n    });\n    return storage.set(mapName, records);\n  },\n  retrieveMap: function (mapName) {\n    return storage.get(mapName);\n  }\n};\nvar parsers = {\n  geoJSON: function (record) {\n    var source = record.source;\n    record.geoJSON = !isString(source) ? source : typeof JSON !== 'undefined' && JSON.parse ? JSON.parse(source) : new Function('return (' + source + ');')();\n  },\n  // Only perform parse to XML object here, which might be time\n  // consiming for large SVG.\n  // Although convert XML to zrender element is also time consiming,\n  // if we do it here, the clone of zrender elements has to be\n  // required. So we do it once for each geo instance, util real\n  // performance issues call for optimizing it.\n  svg: function (record) {\n    record.svgXML = parseXML(record.source);\n  }\n};\nmodule.exports = _default;"]}]}