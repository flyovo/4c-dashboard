{"remainingRequest":"/Users/id-repair/Documents/SEOL/4c-dashboard/node_modules/babel-loader/lib/index.js!/Users/id-repair/Documents/SEOL/4c-dashboard/node_modules/echarts/lib/chart/lines/LinesView.js","dependencies":[{"path":"/Users/id-repair/Documents/SEOL/4c-dashboard/node_modules/echarts/lib/chart/lines/LinesView.js","mtime":499162500000},{"path":"/Users/id-repair/Documents/SEOL/4c-dashboard/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/id-repair/Documents/SEOL/4c-dashboard/node_modules/babel-loader/lib/index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/id-repair/Documents/SEOL/4c-dashboard/node_modules/echarts/lib/chart/lines/LinesView.js"],"names":["_config","require","__DEV__","echarts","LineDraw","EffectLine","Line","Polyline","EffectPolyline","LargeLineDraw","linesLayout","_createClipPathFromCoordSys","createClipPath","_default","extendChartView","type","init","render","seriesModel","ecModel","api","data","getData","lineDraw","_updateLineDraw","zlevel","get","trailLength","zr","getZr","isSvg","painter","getType","getLayer","clear","_lastZlevel","configLayer","motionBlur","_showEffect","lastFrameAlpha","Math","max","min","updateData","clipPath","coordinateSystem","group","setClipPath","removeClipPath","_finished","incrementalPrepareRender","incrementalPrepareUpdate","_clearLayer","incrementalRender","taskParams","_lineDraw","incrementalUpdate","end","count","updateTransform","pipelineContext","large","progressiveRender","update","res","reset","progress","start","updateLayout","hasEffect","isPolyline","isLargeDraw","_hasEffet","_isPolyline","_isLargeDraw","remove","removeAll","add","dispose","module","exports"],"mappings":"AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,IAAIA,OAAO,GAAGC,OAAO,CAAC,cAAD,CAArB;;AAEA,IAAIC,OAAO,GAAGF,OAAO,CAACE,OAAtB;;AAEA,IAAIC,OAAO,GAAGF,OAAO,CAAC,eAAD,CAArB;;AAEA,IAAIG,QAAQ,GAAGH,OAAO,CAAC,oBAAD,CAAtB;;AAEA,IAAII,UAAU,GAAGJ,OAAO,CAAC,sBAAD,CAAxB;;AAEA,IAAIK,IAAI,GAAGL,OAAO,CAAC,gBAAD,CAAlB;;AAEA,IAAIM,QAAQ,GAAGN,OAAO,CAAC,oBAAD,CAAtB;;AAEA,IAAIO,cAAc,GAAGP,OAAO,CAAC,0BAAD,CAA5B;;AAEA,IAAIQ,aAAa,GAAGR,OAAO,CAAC,yBAAD,CAA3B;;AAEA,IAAIS,WAAW,GAAGT,OAAO,CAAC,eAAD,CAAzB;;AAEA,IAAIU,2BAA2B,GAAGV,OAAO,CAAC,sCAAD,CAAzC;;AAEA,IAAIW,cAAc,GAAGD,2BAA2B,CAACC,cAAjD;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAIC,QAAQ,GAAGV,OAAO,CAACW,eAAR,CAAwB;AACrCC,EAAAA,IAAI,EAAE,OAD+B;AAErCC,EAAAA,IAAI,EAAE,gBAAY,CAAE,CAFiB;AAGrCC,EAAAA,MAAM,EAAE,gBAAUC,WAAV,EAAuBC,OAAvB,EAAgCC,GAAhC,EAAqC;AAC3C,QAAIC,IAAI,GAAGH,WAAW,CAACI,OAAZ,EAAX;;AAEA,QAAIC,QAAQ,GAAG,KAAKC,eAAL,CAAqBH,IAArB,EAA2BH,WAA3B,CAAf;;AAEA,QAAIO,MAAM,GAAGP,WAAW,CAACQ,GAAZ,CAAgB,QAAhB,CAAb;AACA,QAAIC,WAAW,GAAGT,WAAW,CAACQ,GAAZ,CAAgB,oBAAhB,CAAlB;AACA,QAAIE,EAAE,GAAGR,GAAG,CAACS,KAAJ,EAAT,CAP2C,CAOrB;AACtB;AACA;;AAEA,QAAIC,KAAK,GAAGF,EAAE,CAACG,OAAH,CAAWC,OAAX,OAAyB,KAArC;;AAEA,QAAI,CAACF,KAAL,EAAY;AACVF,MAAAA,EAAE,CAACG,OAAH,CAAWE,QAAX,CAAoBR,MAApB,EAA4BS,KAA5B,CAAkC,IAAlC;AACD,KAf0C,CAezC;;;AAGF,QAAI,KAAKC,WAAL,IAAoB,IAApB,IAA4B,CAACL,KAAjC,EAAwC;AACtCF,MAAAA,EAAE,CAACQ,WAAH,CAAe,KAAKD,WAApB,EAAiC;AAC/BE,QAAAA,UAAU,EAAE;AADmB,OAAjC;AAGD;;AAED,QAAI,KAAKC,WAAL,CAAiBpB,WAAjB,KAAiCS,WAArC,EAAkD;AAChD,UAAI,CAACG,KAAL,EAAY;AACVF,QAAAA,EAAE,CAACQ,WAAH,CAAeX,MAAf,EAAuB;AACrBY,UAAAA,UAAU,EAAE,IADS;AAErBE,UAAAA,cAAc,EAAEC,IAAI,CAACC,GAAL,CAASD,IAAI,CAACE,GAAL,CAASf,WAAW,GAAG,EAAd,GAAmB,GAA5B,EAAiC,CAAjC,CAAT,EAA8C,CAA9C;AAFK,SAAvB;AAID;AACF;;AAEDJ,IAAAA,QAAQ,CAACoB,UAAT,CAAoBtB,IAApB;AACA,QAAIuB,QAAQ,GAAG1B,WAAW,CAACQ,GAAZ,CAAgB,MAAhB,EAAwB,IAAxB,KAAiCd,cAAc,CAACM,WAAW,CAAC2B,gBAAb,EAA+B,KAA/B,EAAsC3B,WAAtC,CAA9D;;AAEA,QAAI0B,QAAJ,EAAc;AACZ,WAAKE,KAAL,CAAWC,WAAX,CAAuBH,QAAvB;AACD,KAFD,MAEO;AACL,WAAKE,KAAL,CAAWE,cAAX;AACD;;AAED,SAAKb,WAAL,GAAmBV,MAAnB;AACA,SAAKwB,SAAL,GAAiB,IAAjB;AACD,GA/CoC;AAgDrCC,EAAAA,wBAAwB,EAAE,kCAAUhC,WAAV,EAAuBC,OAAvB,EAAgCC,GAAhC,EAAqC;AAC7D,QAAIC,IAAI,GAAGH,WAAW,CAACI,OAAZ,EAAX;;AAEA,QAAIC,QAAQ,GAAG,KAAKC,eAAL,CAAqBH,IAArB,EAA2BH,WAA3B,CAAf;;AAEAK,IAAAA,QAAQ,CAAC4B,wBAAT,CAAkC9B,IAAlC;;AAEA,SAAK+B,WAAL,CAAiBhC,GAAjB;;AAEA,SAAK6B,SAAL,GAAiB,KAAjB;AACD,GA1DoC;AA2DrCI,EAAAA,iBAAiB,EAAE,2BAAUC,UAAV,EAAsBpC,WAAtB,EAAmCC,OAAnC,EAA4C;AAC7D,SAAKoC,SAAL,CAAeC,iBAAf,CAAiCF,UAAjC,EAA6CpC,WAAW,CAACI,OAAZ,EAA7C;;AAEA,SAAK2B,SAAL,GAAiBK,UAAU,CAACG,GAAX,KAAmBvC,WAAW,CAACI,OAAZ,GAAsBoC,KAAtB,EAApC;AACD,GA/DoC;AAgErCC,EAAAA,eAAe,EAAE,yBAAUzC,WAAV,EAAuBC,OAAvB,EAAgCC,GAAhC,EAAqC;AACpD,QAAIC,IAAI,GAAGH,WAAW,CAACI,OAAZ,EAAX;AACA,QAAIsC,eAAe,GAAG1C,WAAW,CAAC0C,eAAlC;;AAEA,QAAI,CAAC,KAAKX,SAAN,IAAmBW,eAAe,CAACC,KAAnC,IAA4CD,eAAe,CAACE,iBAAhE,EAAmF;AACjF;AACA,aAAO;AACLC,QAAAA,MAAM,EAAE;AADH,OAAP;AAGD,KALD,MAKO;AACL;AACA;AACA,UAAIC,GAAG,GAAGtD,WAAW,CAACuD,KAAZ,CAAkB/C,WAAlB,CAAV;;AAEA,UAAI8C,GAAG,CAACE,QAAR,EAAkB;AAChBF,QAAAA,GAAG,CAACE,QAAJ,CAAa;AACXC,UAAAA,KAAK,EAAE,CADI;AAEXV,UAAAA,GAAG,EAAEpC,IAAI,CAACqC,KAAL;AAFM,SAAb,EAGGrC,IAHH;AAID;;AAED,WAAKkC,SAAL,CAAea,YAAf;;AAEA,WAAKhB,WAAL,CAAiBhC,GAAjB;AACD;AACF,GAzFoC;AA0FrCI,EAAAA,eAAe,EAAE,yBAAUH,IAAV,EAAgBH,WAAhB,EAA6B;AAC5C,QAAIK,QAAQ,GAAG,KAAKgC,SAApB;;AAEA,QAAIc,SAAS,GAAG,KAAK/B,WAAL,CAAiBpB,WAAjB,CAAhB;;AAEA,QAAIoD,UAAU,GAAG,CAAC,CAACpD,WAAW,CAACQ,GAAZ,CAAgB,UAAhB,CAAnB;AACA,QAAIkC,eAAe,GAAG1C,WAAW,CAAC0C,eAAlC;AACA,QAAIW,WAAW,GAAGX,eAAe,CAACC,KAAlC;;AAEA,QAAI,CAACtC,QAAD,IAAa8C,SAAS,KAAK,KAAKG,SAAhC,IAA6CF,UAAU,KAAK,KAAKG,WAAjE,IAAgFF,WAAW,KAAK,KAAKG,YAAzG,EAAuH;AACrH,UAAInD,QAAJ,EAAc;AACZA,QAAAA,QAAQ,CAACoD,MAAT;AACD;;AAEDpD,MAAAA,QAAQ,GAAG,KAAKgC,SAAL,GAAiBgB,WAAW,GAAG,IAAI9D,aAAJ,EAAH,GAAyB,IAAIL,QAAJ,CAAakE,UAAU,GAAGD,SAAS,GAAG7D,cAAH,GAAoBD,QAAhC,GAA2C8D,SAAS,GAAGhE,UAAH,GAAgBC,IAA3F,CAAhE;AACA,WAAKkE,SAAL,GAAiBH,SAAjB;AACA,WAAKI,WAAL,GAAmBH,UAAnB;AACA,WAAKI,YAAL,GAAoBH,WAApB;AACA,WAAKzB,KAAL,CAAW8B,SAAX;AACD;;AAED,SAAK9B,KAAL,CAAW+B,GAAX,CAAetD,QAAQ,CAACuB,KAAxB;AACA,WAAOvB,QAAP;AACD,GAjHoC;AAkHrCe,EAAAA,WAAW,EAAE,qBAAUpB,WAAV,EAAuB;AAClC,WAAO,CAAC,CAACA,WAAW,CAACQ,GAAZ,CAAgB,aAAhB,CAAT;AACD,GApHoC;AAqHrC0B,EAAAA,WAAW,EAAE,qBAAUhC,GAAV,EAAe;AAC1B;AACA,QAAIQ,EAAE,GAAGR,GAAG,CAACS,KAAJ,EAAT;AACA,QAAIC,KAAK,GAAGF,EAAE,CAACG,OAAH,CAAWC,OAAX,OAAyB,KAArC;;AAEA,QAAI,CAACF,KAAD,IAAU,KAAKK,WAAL,IAAoB,IAAlC,EAAwC;AACtCP,MAAAA,EAAE,CAACG,OAAH,CAAWE,QAAX,CAAoB,KAAKE,WAAzB,EAAsCD,KAAtC,CAA4C,IAA5C;AACD;AACF,GA7HoC;AA8HrCyC,EAAAA,MAAM,EAAE,gBAAUxD,OAAV,EAAmBC,GAAnB,EAAwB;AAC9B,SAAKmC,SAAL,IAAkB,KAAKA,SAAL,CAAeoB,MAAf,EAAlB;AACA,SAAKpB,SAAL,GAAiB,IAAjB,CAF8B,CAEP;;AAEvB,SAAKH,WAAL,CAAiBhC,GAAjB;AACD,GAnIoC;AAoIrC0D,EAAAA,OAAO,EAAE,mBAAY,CAAE;AApIc,CAAxB,CAAf;;AAuIAC,MAAM,CAACC,OAAP,GAAiBnE,QAAjB","sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar LineDraw = require(\"../helper/LineDraw\");\n\nvar EffectLine = require(\"../helper/EffectLine\");\n\nvar Line = require(\"../helper/Line\");\n\nvar Polyline = require(\"../helper/Polyline\");\n\nvar EffectPolyline = require(\"../helper/EffectPolyline\");\n\nvar LargeLineDraw = require(\"../helper/LargeLineDraw\");\n\nvar linesLayout = require(\"./linesLayout\");\n\nvar _createClipPathFromCoordSys = require(\"../helper/createClipPathFromCoordSys\");\n\nvar createClipPath = _createClipPathFromCoordSys.createClipPath;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = echarts.extendChartView({\n  type: 'lines',\n  init: function () {},\n  render: function (seriesModel, ecModel, api) {\n    var data = seriesModel.getData();\n\n    var lineDraw = this._updateLineDraw(data, seriesModel);\n\n    var zlevel = seriesModel.get('zlevel');\n    var trailLength = seriesModel.get('effect.trailLength');\n    var zr = api.getZr(); // Avoid the drag cause ghost shadow\n    // FIXME Better way ?\n    // SVG doesn't support\n\n    var isSvg = zr.painter.getType() === 'svg';\n\n    if (!isSvg) {\n      zr.painter.getLayer(zlevel).clear(true);\n    } // Config layer with motion blur\n\n\n    if (this._lastZlevel != null && !isSvg) {\n      zr.configLayer(this._lastZlevel, {\n        motionBlur: false\n      });\n    }\n\n    if (this._showEffect(seriesModel) && trailLength) {\n      if (!isSvg) {\n        zr.configLayer(zlevel, {\n          motionBlur: true,\n          lastFrameAlpha: Math.max(Math.min(trailLength / 10 + 0.9, 1), 0)\n        });\n      }\n    }\n\n    lineDraw.updateData(data);\n    var clipPath = seriesModel.get('clip', true) && createClipPath(seriesModel.coordinateSystem, false, seriesModel);\n\n    if (clipPath) {\n      this.group.setClipPath(clipPath);\n    } else {\n      this.group.removeClipPath();\n    }\n\n    this._lastZlevel = zlevel;\n    this._finished = true;\n  },\n  incrementalPrepareRender: function (seriesModel, ecModel, api) {\n    var data = seriesModel.getData();\n\n    var lineDraw = this._updateLineDraw(data, seriesModel);\n\n    lineDraw.incrementalPrepareUpdate(data);\n\n    this._clearLayer(api);\n\n    this._finished = false;\n  },\n  incrementalRender: function (taskParams, seriesModel, ecModel) {\n    this._lineDraw.incrementalUpdate(taskParams, seriesModel.getData());\n\n    this._finished = taskParams.end === seriesModel.getData().count();\n  },\n  updateTransform: function (seriesModel, ecModel, api) {\n    var data = seriesModel.getData();\n    var pipelineContext = seriesModel.pipelineContext;\n\n    if (!this._finished || pipelineContext.large || pipelineContext.progressiveRender) {\n      // TODO Don't have to do update in large mode. Only do it when there are millions of data.\n      return {\n        update: true\n      };\n    } else {\n      // TODO Use same logic with ScatterView.\n      // Manually update layout\n      var res = linesLayout.reset(seriesModel);\n\n      if (res.progress) {\n        res.progress({\n          start: 0,\n          end: data.count()\n        }, data);\n      }\n\n      this._lineDraw.updateLayout();\n\n      this._clearLayer(api);\n    }\n  },\n  _updateLineDraw: function (data, seriesModel) {\n    var lineDraw = this._lineDraw;\n\n    var hasEffect = this._showEffect(seriesModel);\n\n    var isPolyline = !!seriesModel.get('polyline');\n    var pipelineContext = seriesModel.pipelineContext;\n    var isLargeDraw = pipelineContext.large;\n\n    if (!lineDraw || hasEffect !== this._hasEffet || isPolyline !== this._isPolyline || isLargeDraw !== this._isLargeDraw) {\n      if (lineDraw) {\n        lineDraw.remove();\n      }\n\n      lineDraw = this._lineDraw = isLargeDraw ? new LargeLineDraw() : new LineDraw(isPolyline ? hasEffect ? EffectPolyline : Polyline : hasEffect ? EffectLine : Line);\n      this._hasEffet = hasEffect;\n      this._isPolyline = isPolyline;\n      this._isLargeDraw = isLargeDraw;\n      this.group.removeAll();\n    }\n\n    this.group.add(lineDraw.group);\n    return lineDraw;\n  },\n  _showEffect: function (seriesModel) {\n    return !!seriesModel.get('effect.show');\n  },\n  _clearLayer: function (api) {\n    // Not use motion when dragging or zooming\n    var zr = api.getZr();\n    var isSvg = zr.painter.getType() === 'svg';\n\n    if (!isSvg && this._lastZlevel != null) {\n      zr.painter.getLayer(this._lastZlevel).clear(true);\n    }\n  },\n  remove: function (ecModel, api) {\n    this._lineDraw && this._lineDraw.remove();\n    this._lineDraw = null; // Clear motion when lineDraw is removed\n\n    this._clearLayer(api);\n  },\n  dispose: function () {}\n});\n\nmodule.exports = _default;"]}]}