{"remainingRequest":"/Users/id-repair/Documents/SEOL/4c-dashboard/node_modules/babel-loader/lib/index.js!/Users/id-repair/Documents/SEOL/4c-dashboard/node_modules/echarts/lib/visual/LegendVisualProvider.js","dependencies":[{"path":"/Users/id-repair/Documents/SEOL/4c-dashboard/node_modules/echarts/lib/visual/LegendVisualProvider.js","mtime":499162500000},{"path":"/Users/id-repair/Documents/SEOL/4c-dashboard/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/id-repair/Documents/SEOL/4c-dashboard/node_modules/babel-loader/lib/index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:LyoKKiBMaWNlbnNlZCB0byB0aGUgQXBhY2hlIFNvZnR3YXJlIEZvdW5kYXRpb24gKEFTRikgdW5kZXIgb25lCiogb3IgbW9yZSBjb250cmlidXRvciBsaWNlbnNlIGFncmVlbWVudHMuICBTZWUgdGhlIE5PVElDRSBmaWxlCiogZGlzdHJpYnV0ZWQgd2l0aCB0aGlzIHdvcmsgZm9yIGFkZGl0aW9uYWwgaW5mb3JtYXRpb24KKiByZWdhcmRpbmcgY29weXJpZ2h0IG93bmVyc2hpcC4gIFRoZSBBU0YgbGljZW5zZXMgdGhpcyBmaWxlCiogdG8geW91IHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZQoqICJMaWNlbnNlIik7IHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2UKKiB3aXRoIHRoZSBMaWNlbnNlLiAgWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0CioKKiAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMAoqCiogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLAoqIHNvZnR3YXJlIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuCiogIkFTIElTIiBCQVNJUywgV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZCiogS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC4gIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlCiogc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZCBsaW1pdGF0aW9ucwoqIHVuZGVyIHRoZSBMaWNlbnNlLgoqLwoKLyoKKiBMaWNlbnNlZCB0byB0aGUgQXBhY2hlIFNvZnR3YXJlIEZvdW5kYXRpb24gKEFTRikgdW5kZXIgb25lCiogb3IgbW9yZSBjb250cmlidXRvciBsaWNlbnNlIGFncmVlbWVudHMuICBTZWUgdGhlIE5PVElDRSBmaWxlCiogZGlzdHJpYnV0ZWQgd2l0aCB0aGlzIHdvcmsgZm9yIGFkZGl0aW9uYWwgaW5mb3JtYXRpb24KKiByZWdhcmRpbmcgY29weXJpZ2h0IG93bmVyc2hpcC4gIFRoZSBBU0YgbGljZW5zZXMgdGhpcyBmaWxlCiogdG8geW91IHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZQoqICJMaWNlbnNlIik7IHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2UKKiB3aXRoIHRoZSBMaWNlbnNlLiAgWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0CioKKiAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMAoqCiogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLAoqIHNvZnR3YXJlIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuCiogIkFTIElTIiBCQVNJUywgV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZCiogS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC4gIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlCiogc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZCBsaW1pdGF0aW9ucwoqIHVuZGVyIHRoZSBMaWNlbnNlLgoqLwoKLyoqCiAqIExlZ2VuZFZpc3VhbFByb3ZpZGVyIGlzIGFuIGJyaWRnZSB0aGF0IHBpY2sgZW5jb2RlZCBjb2xvciBmcm9tIGRhdGEgYW5kCiAqIHByb3ZpZGUgdG8gdGhlIGxlZ2VuZCBjb21wb25lbnQuCiAqIEBwYXJhbSB7RnVuY3Rpb259IGdldERhdGFXaXRoRW5jb2RlZFZpc3VhbCBGdW5jdGlvbiB0byBnZXQgZGF0YSBhZnRlciBmaWx0ZXJlZC4gSXQgc3RvcmVzIGFsbCB0aGUgZW5jb2RpbmcgaW5mbwogKiBAcGFyYW0ge0Z1bmN0aW9ufSBnZXRSYXdEYXRhIEZ1bmN0aW9uIHRvIGdldCByYXcgZGF0YSBiZWZvcmUgZmlsdGVyZWQuCiAqLwpmdW5jdGlvbiBMZWdlbmRWaXN1YWxQcm92aWRlcihnZXREYXRhV2l0aEVuY29kZWRWaXN1YWwsIGdldFJhd0RhdGEpIHsKICB0aGlzLmdldEFsbE5hbWVzID0gZnVuY3Rpb24gKCkgewogICAgdmFyIHJhd0RhdGEgPSBnZXRSYXdEYXRhKCk7IC8vIFdlIGZpbmQgdGhlIG5hbWUgZnJvbSB0aGUgcmF3IGRhdGEuIEluIGNhc2UgaXQncyBmaWx0ZXJlZCBieSB0aGUgbGVnZW5kIGNvbXBvbmVudC4KICAgIC8vIE5vcm1hbGx5LCB0aGUgbmFtZSBjYW4gYmUgZm91bmQgaW4gcmF3RGF0YSwgYnV0IGNhbid0IGJlIGZvdW5kIGluIGZpbHRlcmVkIGRhdGEgd2lsbCBkaXNwbGF5IGFzIGdyYXkuCgogICAgcmV0dXJuIHJhd0RhdGEubWFwQXJyYXkocmF3RGF0YS5nZXROYW1lKTsKICB9OwoKICB0aGlzLmNvbnRhaW5OYW1lID0gZnVuY3Rpb24gKG5hbWUpIHsKICAgIHZhciByYXdEYXRhID0gZ2V0UmF3RGF0YSgpOwogICAgcmV0dXJuIHJhd0RhdGEuaW5kZXhPZk5hbWUobmFtZSkgPj0gMDsKICB9OwoKICB0aGlzLmluZGV4T2ZOYW1lID0gZnVuY3Rpb24gKG5hbWUpIHsKICAgIC8vIE9ubHkgZ2V0IGRhdGEgd2hlbiBuZWNlc3NhcnkuCiAgICAvLyBCZWNhdXNlIExlZ2VuZFZpc3VhbFByb3ZpZGVyIGNvbnN0cnVjdG9yIG1heSBiZSBuZXcgaW4gdGhlIHN0YWdlIHRoYXQgZGF0YSBpcyBub3QgcHJlcGFyZWQgeWV0LgogICAgLy8gSW52b2tpbmcgU2VyaWVzI2dldERhdGEgaW1tZWRpYXRlbHkgd2lsbCB0aHJvdyBhbiBlcnJvci4KICAgIHZhciBkYXRhV2l0aEVuY29kZWRWaXN1YWwgPSBnZXREYXRhV2l0aEVuY29kZWRWaXN1YWwoKTsKICAgIHJldHVybiBkYXRhV2l0aEVuY29kZWRWaXN1YWwuaW5kZXhPZk5hbWUobmFtZSk7CiAgfTsKCiAgdGhpcy5nZXRJdGVtVmlzdWFsID0gZnVuY3Rpb24gKGRhdGFJbmRleCwga2V5KSB7CiAgICAvLyBHZXQgZW5jb2RlZCB2aXN1YWwgcHJvcGVydGllcyBmcm9tIGZpbmFsIGZpbHRlcmVkIGRhdGEuCiAgICB2YXIgZGF0YVdpdGhFbmNvZGVkVmlzdWFsID0gZ2V0RGF0YVdpdGhFbmNvZGVkVmlzdWFsKCk7CiAgICByZXR1cm4gZGF0YVdpdGhFbmNvZGVkVmlzdWFsLmdldEl0ZW1WaXN1YWwoZGF0YUluZGV4LCBrZXkpOwogIH07Cn0KCnZhciBfZGVmYXVsdCA9IExlZ2VuZFZpc3VhbFByb3ZpZGVyOwptb2R1bGUuZXhwb3J0cyA9IF9kZWZhdWx0Ow=="},{"version":3,"sources":["/Users/id-repair/Documents/SEOL/4c-dashboard/node_modules/echarts/lib/visual/LegendVisualProvider.js"],"names":["LegendVisualProvider","getDataWithEncodedVisual","getRawData","getAllNames","rawData","mapArray","getName","containName","name","indexOfName","dataWithEncodedVisual","getItemVisual","dataIndex","key","_default","module","exports"],"mappings":"AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,oBAAT,CAA8BC,wBAA9B,EAAwDC,UAAxD,EAAoE;AAClE,OAAKC,WAAL,GAAmB,YAAY;AAC7B,QAAIC,OAAO,GAAGF,UAAU,EAAxB,CAD6B,CACD;AAC5B;;AAEA,WAAOE,OAAO,CAACC,QAAR,CAAiBD,OAAO,CAACE,OAAzB,CAAP;AACD,GALD;;AAOA,OAAKC,WAAL,GAAmB,UAAUC,IAAV,EAAgB;AACjC,QAAIJ,OAAO,GAAGF,UAAU,EAAxB;AACA,WAAOE,OAAO,CAACK,WAAR,CAAoBD,IAApB,KAA6B,CAApC;AACD,GAHD;;AAKA,OAAKC,WAAL,GAAmB,UAAUD,IAAV,EAAgB;AACjC;AACA;AACA;AACA,QAAIE,qBAAqB,GAAGT,wBAAwB,EAApD;AACA,WAAOS,qBAAqB,CAACD,WAAtB,CAAkCD,IAAlC,CAAP;AACD,GAND;;AAQA,OAAKG,aAAL,GAAqB,UAAUC,SAAV,EAAqBC,GAArB,EAA0B;AAC7C;AACA,QAAIH,qBAAqB,GAAGT,wBAAwB,EAApD;AACA,WAAOS,qBAAqB,CAACC,aAAtB,CAAoCC,SAApC,EAA+CC,GAA/C,CAAP;AACD,GAJD;AAKD;;AAED,IAAIC,QAAQ,GAAGd,oBAAf;AACAe,MAAM,CAACC,OAAP,GAAiBF,QAAjB","sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * LegendVisualProvider is an bridge that pick encoded color from data and\n * provide to the legend component.\n * @param {Function} getDataWithEncodedVisual Function to get data after filtered. It stores all the encoding info\n * @param {Function} getRawData Function to get raw data before filtered.\n */\nfunction LegendVisualProvider(getDataWithEncodedVisual, getRawData) {\n  this.getAllNames = function () {\n    var rawData = getRawData(); // We find the name from the raw data. In case it's filtered by the legend component.\n    // Normally, the name can be found in rawData, but can't be found in filtered data will display as gray.\n\n    return rawData.mapArray(rawData.getName);\n  };\n\n  this.containName = function (name) {\n    var rawData = getRawData();\n    return rawData.indexOfName(name) >= 0;\n  };\n\n  this.indexOfName = function (name) {\n    // Only get data when necessary.\n    // Because LegendVisualProvider constructor may be new in the stage that data is not prepared yet.\n    // Invoking Series#getData immediately will throw an error.\n    var dataWithEncodedVisual = getDataWithEncodedVisual();\n    return dataWithEncodedVisual.indexOfName(name);\n  };\n\n  this.getItemVisual = function (dataIndex, key) {\n    // Get encoded visual properties from final filtered data.\n    var dataWithEncodedVisual = getDataWithEncodedVisual();\n    return dataWithEncodedVisual.getItemVisual(dataIndex, key);\n  };\n}\n\nvar _default = LegendVisualProvider;\nmodule.exports = _default;"]}]}