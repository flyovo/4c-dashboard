{"remainingRequest":"/Users/id-repair/Documents/SEOL/4c-dashboard/node_modules/babel-loader/lib/index.js!/Users/id-repair/Documents/SEOL/4c-dashboard/node_modules/echarts/lib/data/helper/completeDimensions.js","dependencies":[{"path":"/Users/id-repair/Documents/SEOL/4c-dashboard/node_modules/echarts/lib/data/helper/completeDimensions.js","mtime":499162500000},{"path":"/Users/id-repair/Documents/SEOL/4c-dashboard/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/id-repair/Documents/SEOL/4c-dashboard/node_modules/babel-loader/lib/index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/id-repair/Documents/SEOL/4c-dashboard/node_modules/echarts/lib/data/helper/completeDimensions.js"],"names":["_util","require","createHashMap","each","isString","defaults","extend","isObject","clone","_model","normalizeToArray","_sourceHelper","guessOrdinal","BE_ORDINAL","Source","_dimensionHelper","OTHER_DIMENSIONS","DataDimensionInfo","completeDimensions","sysDims","source","opt","isInstance","seriesDataToSource","slice","dimsDef","dataDimNameMap","coordDimNameMap","result","dimCount","getDimCount","i","dimDefItem","name","userDimName","resultItem","get","displayName","set","type","encodeDef","encodeDefaulter","dataDims","coordDim","length","validDataDims","resultDimIdx","idx","applyDim","availDimIdx","sysDimItem","sysDimIndex","sysDimItemDimsDef","sysDimItemOtherDims","ordinalMeta","otherDims","coordDimIndex","push","sysDimItemDimsDefItem","defaultTooltip","generateCoord","generateCoordCount","fromZero","extra","genName","isExtraCoord","Must","itemName","seriesName","optDimCount","Math","max","dimensionsDetectCount","map","_default","module","exports"],"mappings":"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","sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar createHashMap = _util.createHashMap;\nvar each = _util.each;\nvar isString = _util.isString;\nvar defaults = _util.defaults;\nvar extend = _util.extend;\nvar isObject = _util.isObject;\nvar clone = _util.clone;\n\nvar _model = require(\"../../util/model\");\n\nvar normalizeToArray = _model.normalizeToArray;\n\nvar _sourceHelper = require(\"./sourceHelper\");\n\nvar guessOrdinal = _sourceHelper.guessOrdinal;\nvar BE_ORDINAL = _sourceHelper.BE_ORDINAL;\n\nvar Source = require(\"../Source\");\n\nvar _dimensionHelper = require(\"./dimensionHelper\");\n\nvar OTHER_DIMENSIONS = _dimensionHelper.OTHER_DIMENSIONS;\n\nvar DataDimensionInfo = require(\"../DataDimensionInfo\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @deprecated\n * Use `echarts/data/helper/createDimensions` instead.\n */\n\n/**\n * @see {module:echarts/test/ut/spec/data/completeDimensions}\n *\n * This method builds the relationship between:\n * + \"what the coord sys or series requires (see `sysDims`)\",\n * + \"what the user defines (in `encode` and `dimensions`, see `opt.dimsDef` and `opt.encodeDef`)\"\n * + \"what the data source provids (see `source`)\".\n *\n * Some guess strategy will be adapted if user does not define something.\n * If no 'value' dimension specified, the first no-named dimension will be\n * named as 'value'.\n *\n * @param {Array.<string>} sysDims Necessary dimensions, like ['x', 'y'], which\n *      provides not only dim template, but also default order.\n *      properties: 'name', 'type', 'displayName'.\n *      `name` of each item provides default coord name.\n *      [{dimsDef: [string|Object, ...]}, ...] dimsDef of sysDim item provides default dim name, and\n *                                    provide dims count that the sysDim required.\n *      [{ordinalMeta}] can be specified.\n * @param {module:echarts/data/Source|Array|Object} source or data (for compatibal with pervious)\n * @param {Object} [opt]\n * @param {Array.<Object|string>} [opt.dimsDef] option.series.dimensions User defined dimensions\n *      For example: ['asdf', {name, type}, ...].\n * @param {Object|HashMap} [opt.encodeDef] option.series.encode {x: 2, y: [3, 1], tooltip: [1, 2], label: 3}\n * @param {Function} [opt.encodeDefaulter] Called if no `opt.encodeDef` exists.\n *      If not specified, auto find the next available data dim.\n *      param source {module:data/Source}\n *      param dimCount {number}\n *      return {Object} encode Never be `null/undefined`.\n * @param {string} [opt.generateCoord] Generate coord dim with the given name.\n *      If not specified, extra dim names will be:\n *      'value', 'value0', 'value1', ...\n * @param {number} [opt.generateCoordCount] By default, the generated dim name is `generateCoord`.\n *      If `generateCoordCount` specified, the generated dim names will be:\n *      `generateCoord` + 0, `generateCoord` + 1, ...\n *      can be Infinity, indicate that use all of the remain columns.\n * @param {number} [opt.dimCount] If not specified, guess by the first data item.\n * @return {Array.<module:data/DataDimensionInfo>}\n */\nfunction completeDimensions(sysDims, source, opt) {\n  if (!Source.isInstance(source)) {\n    source = Source.seriesDataToSource(source);\n  }\n\n  opt = opt || {};\n  sysDims = (sysDims || []).slice();\n  var dimsDef = (opt.dimsDef || []).slice();\n  var dataDimNameMap = createHashMap();\n  var coordDimNameMap = createHashMap(); // var valueCandidate;\n\n  var result = [];\n  var dimCount = getDimCount(source, sysDims, dimsDef, opt.dimCount); // Apply user defined dims (`name` and `type`) and init result.\n\n  for (var i = 0; i < dimCount; i++) {\n    var dimDefItem = dimsDef[i] = extend({}, isObject(dimsDef[i]) ? dimsDef[i] : {\n      name: dimsDef[i]\n    });\n    var userDimName = dimDefItem.name;\n    var resultItem = result[i] = new DataDimensionInfo(); // Name will be applied later for avoiding duplication.\n\n    if (userDimName != null && dataDimNameMap.get(userDimName) == null) {\n      // Only if `series.dimensions` is defined in option\n      // displayName, will be set, and dimension will be diplayed vertically in\n      // tooltip by default.\n      resultItem.name = resultItem.displayName = userDimName;\n      dataDimNameMap.set(userDimName, i);\n    }\n\n    dimDefItem.type != null && (resultItem.type = dimDefItem.type);\n    dimDefItem.displayName != null && (resultItem.displayName = dimDefItem.displayName);\n  }\n\n  var encodeDef = opt.encodeDef;\n\n  if (!encodeDef && opt.encodeDefaulter) {\n    encodeDef = opt.encodeDefaulter(source, dimCount);\n  }\n\n  encodeDef = createHashMap(encodeDef); // Set `coordDim` and `coordDimIndex` by `encodeDef` and normalize `encodeDef`.\n\n  encodeDef.each(function (dataDims, coordDim) {\n    dataDims = normalizeToArray(dataDims).slice(); // Note: It is allowed that `dataDims.length` is `0`, e.g., options is\n    // `{encode: {x: -1, y: 1}}`. Should not filter anything in\n    // this case.\n\n    if (dataDims.length === 1 && !isString(dataDims[0]) && dataDims[0] < 0) {\n      encodeDef.set(coordDim, false);\n      return;\n    }\n\n    var validDataDims = encodeDef.set(coordDim, []);\n    each(dataDims, function (resultDimIdx, idx) {\n      // The input resultDimIdx can be dim name or index.\n      isString(resultDimIdx) && (resultDimIdx = dataDimNameMap.get(resultDimIdx));\n\n      if (resultDimIdx != null && resultDimIdx < dimCount) {\n        validDataDims[idx] = resultDimIdx;\n        applyDim(result[resultDimIdx], coordDim, idx);\n      }\n    });\n  }); // Apply templetes and default order from `sysDims`.\n\n  var availDimIdx = 0;\n  each(sysDims, function (sysDimItem, sysDimIndex) {\n    var coordDim;\n    var sysDimItem;\n    var sysDimItemDimsDef;\n    var sysDimItemOtherDims;\n\n    if (isString(sysDimItem)) {\n      coordDim = sysDimItem;\n      sysDimItem = {};\n    } else {\n      coordDim = sysDimItem.name;\n      var ordinalMeta = sysDimItem.ordinalMeta;\n      sysDimItem.ordinalMeta = null;\n      sysDimItem = clone(sysDimItem);\n      sysDimItem.ordinalMeta = ordinalMeta; // `coordDimIndex` should not be set directly.\n\n      sysDimItemDimsDef = sysDimItem.dimsDef;\n      sysDimItemOtherDims = sysDimItem.otherDims;\n      sysDimItem.name = sysDimItem.coordDim = sysDimItem.coordDimIndex = sysDimItem.dimsDef = sysDimItem.otherDims = null;\n    }\n\n    var dataDims = encodeDef.get(coordDim); // negative resultDimIdx means no need to mapping.\n\n    if (dataDims === false) {\n      return;\n    }\n\n    var dataDims = normalizeToArray(dataDims); // dimensions provides default dim sequences.\n\n    if (!dataDims.length) {\n      for (var i = 0; i < (sysDimItemDimsDef && sysDimItemDimsDef.length || 1); i++) {\n        while (availDimIdx < result.length && result[availDimIdx].coordDim != null) {\n          availDimIdx++;\n        }\n\n        availDimIdx < result.length && dataDims.push(availDimIdx++);\n      }\n    } // Apply templates.\n\n\n    each(dataDims, function (resultDimIdx, coordDimIndex) {\n      var resultItem = result[resultDimIdx];\n      applyDim(defaults(resultItem, sysDimItem), coordDim, coordDimIndex);\n\n      if (resultItem.name == null && sysDimItemDimsDef) {\n        var sysDimItemDimsDefItem = sysDimItemDimsDef[coordDimIndex];\n        !isObject(sysDimItemDimsDefItem) && (sysDimItemDimsDefItem = {\n          name: sysDimItemDimsDefItem\n        });\n        resultItem.name = resultItem.displayName = sysDimItemDimsDefItem.name;\n        resultItem.defaultTooltip = sysDimItemDimsDefItem.defaultTooltip;\n      } // FIXME refactor, currently only used in case: {otherDims: {tooltip: false}}\n\n\n      sysDimItemOtherDims && defaults(resultItem.otherDims, sysDimItemOtherDims);\n    });\n  });\n\n  function applyDim(resultItem, coordDim, coordDimIndex) {\n    if (OTHER_DIMENSIONS.get(coordDim) != null) {\n      resultItem.otherDims[coordDim] = coordDimIndex;\n    } else {\n      resultItem.coordDim = coordDim;\n      resultItem.coordDimIndex = coordDimIndex;\n      coordDimNameMap.set(coordDim, true);\n    }\n  } // Make sure the first extra dim is 'value'.\n\n\n  var generateCoord = opt.generateCoord;\n  var generateCoordCount = opt.generateCoordCount;\n  var fromZero = generateCoordCount != null;\n  generateCoordCount = generateCoord ? generateCoordCount || 1 : 0;\n  var extra = generateCoord || 'value'; // Set dim `name` and other `coordDim` and other props.\n\n  for (var resultDimIdx = 0; resultDimIdx < dimCount; resultDimIdx++) {\n    var resultItem = result[resultDimIdx] = result[resultDimIdx] || new DataDimensionInfo();\n    var coordDim = resultItem.coordDim;\n\n    if (coordDim == null) {\n      resultItem.coordDim = genName(extra, coordDimNameMap, fromZero);\n      resultItem.coordDimIndex = 0;\n\n      if (!generateCoord || generateCoordCount <= 0) {\n        resultItem.isExtraCoord = true;\n      }\n\n      generateCoordCount--;\n    }\n\n    resultItem.name == null && (resultItem.name = genName(resultItem.coordDim, dataDimNameMap));\n\n    if (resultItem.type == null && (guessOrdinal(source, resultDimIdx, resultItem.name) === BE_ORDINAL.Must // Consider the case:\n    // {\n    //    dataset: {source: [\n    //        ['2001', 123],\n    //        ['2002', 456],\n    //        ...\n    //        ['The others', 987],\n    //    ]},\n    //    series: {type: 'pie'}\n    // }\n    // The first colum should better be treated as a \"ordinal\" although it\n    // might not able to be detected as an \"ordinal\" by `guessOrdinal`.\n    || resultItem.isExtraCoord && (resultItem.otherDims.itemName != null || resultItem.otherDims.seriesName != null))) {\n      resultItem.type = 'ordinal';\n    }\n  }\n\n  return result;\n} // ??? TODO\n// Originally detect dimCount by data[0]. Should we\n// optimize it to only by sysDims and dimensions and encode.\n// So only necessary dims will be initialized.\n// But\n// (1) custom series should be considered. where other dims\n// may be visited.\n// (2) sometimes user need to calcualte bubble size or use visualMap\n// on other dimensions besides coordSys needed.\n// So, dims that is not used by system, should be shared in storage?\n\n\nfunction getDimCount(source, sysDims, dimsDef, optDimCount) {\n  // Note that the result dimCount should not small than columns count\n  // of data, otherwise `dataDimNameMap` checking will be incorrect.\n  var dimCount = Math.max(source.dimensionsDetectCount || 1, sysDims.length, dimsDef.length, optDimCount || 0);\n  each(sysDims, function (sysDimItem) {\n    var sysDimItemDimsDef = sysDimItem.dimsDef;\n    sysDimItemDimsDef && (dimCount = Math.max(dimCount, sysDimItemDimsDef.length));\n  });\n  return dimCount;\n}\n\nfunction genName(name, map, fromZero) {\n  if (fromZero || map.get(name) != null) {\n    var i = 0;\n\n    while (map.get(name + i) != null) {\n      i++;\n    }\n\n    name += i;\n  }\n\n  map.set(name, true);\n  return name;\n}\n\nvar _default = completeDimensions;\nmodule.exports = _default;"]}]}