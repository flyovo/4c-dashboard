{"remainingRequest":"/Users/id-repair/Documents/SEOL/4c-dashboard/node_modules/babel-loader/lib/index.js!/Users/id-repair/Documents/SEOL/4c-dashboard/node_modules/echarts/lib/processor/dataStack.js","dependencies":[{"path":"/Users/id-repair/Documents/SEOL/4c-dashboard/node_modules/echarts/lib/processor/dataStack.js","mtime":499162500000},{"path":"/Users/id-repair/Documents/SEOL/4c-dashboard/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/id-repair/Documents/SEOL/4c-dashboard/node_modules/babel-loader/lib/index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:cmVxdWlyZSgiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5Lm1hcC5qcyIpOwoKLyoKKiBMaWNlbnNlZCB0byB0aGUgQXBhY2hlIFNvZnR3YXJlIEZvdW5kYXRpb24gKEFTRikgdW5kZXIgb25lCiogb3IgbW9yZSBjb250cmlidXRvciBsaWNlbnNlIGFncmVlbWVudHMuICBTZWUgdGhlIE5PVElDRSBmaWxlCiogZGlzdHJpYnV0ZWQgd2l0aCB0aGlzIHdvcmsgZm9yIGFkZGl0aW9uYWwgaW5mb3JtYXRpb24KKiByZWdhcmRpbmcgY29weXJpZ2h0IG93bmVyc2hpcC4gIFRoZSBBU0YgbGljZW5zZXMgdGhpcyBmaWxlCiogdG8geW91IHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZQoqICJMaWNlbnNlIik7IHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2UKKiB3aXRoIHRoZSBMaWNlbnNlLiAgWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0CioKKiAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMAoqCiogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLAoqIHNvZnR3YXJlIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuCiogIkFTIElTIiBCQVNJUywgV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZCiogS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC4gIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlCiogc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZCBsaW1pdGF0aW9ucwoqIHVuZGVyIHRoZSBMaWNlbnNlLgoqLwp2YXIgX3V0aWwgPSByZXF1aXJlKCJ6cmVuZGVyL2xpYi9jb3JlL3V0aWwiKTsKCnZhciBjcmVhdGVIYXNoTWFwID0gX3V0aWwuY3JlYXRlSGFzaE1hcDsKdmFyIGVhY2ggPSBfdXRpbC5lYWNoOwovKgoqIExpY2Vuc2VkIHRvIHRoZSBBcGFjaGUgU29mdHdhcmUgRm91bmRhdGlvbiAoQVNGKSB1bmRlciBvbmUKKiBvciBtb3JlIGNvbnRyaWJ1dG9yIGxpY2Vuc2UgYWdyZWVtZW50cy4gIFNlZSB0aGUgTk9USUNFIGZpbGUKKiBkaXN0cmlidXRlZCB3aXRoIHRoaXMgd29yayBmb3IgYWRkaXRpb25hbCBpbmZvcm1hdGlvbgoqIHJlZ2FyZGluZyBjb3B5cmlnaHQgb3duZXJzaGlwLiAgVGhlIEFTRiBsaWNlbnNlcyB0aGlzIGZpbGUKKiB0byB5b3UgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlCiogIkxpY2Vuc2UiKTsgeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZQoqIHdpdGggdGhlIExpY2Vuc2UuICBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXQKKgoqICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wCioKKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsCiogc29mdHdhcmUgZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4KKiAiQVMgSVMiIEJBU0lTLCBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkKKiBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLiAgU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUKKiBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kIGxpbWl0YXRpb25zCiogdW5kZXIgdGhlIExpY2Vuc2UuCiovCi8vICgxKSBbQ2F1dGlvbl06IHRoZSBsb2dpYyBpcyBjb3JyZWN0IGJhc2VkIG9uIHRoZSBwcmVtaXNlczoKLy8gICAgIGRhdGEgcHJvY2Vzc2luZyBzdGFnZSBpcyBibG9ja2VkIGluIHN0cmVhbS4KLy8gICAgIFNlZSA8bW9kdWxlOmVjaGFydHMvc3RyZWFtL1NjaGVkdWxlciNwZXJmb3JtRGF0YVByb2Nlc3NvclRhc2tzPgovLyAoMikgT25seSByZWdpc3RlciBvbmNlIHdoZW4gaW1wb3J0IHJlcGVhdGx5LgovLyAgICAgU2hvdWxkIGJlIGV4ZWN1dGVkIGFmdGVyIHNlcmllcyBmaWx0ZXJlZCBhbmQgYmVmb3JlIHN0YWNrIGNhbGN1bGF0aW9uLgoKZnVuY3Rpb24gX2RlZmF1bHQoZWNNb2RlbCkgewogIHZhciBzdGFja0luZm9NYXAgPSBjcmVhdGVIYXNoTWFwKCk7CiAgZWNNb2RlbC5lYWNoU2VyaWVzKGZ1bmN0aW9uIChzZXJpZXNNb2RlbCkgewogICAgdmFyIHN0YWNrID0gc2VyaWVzTW9kZWwuZ2V0KCdzdGFjaycpOyAvLyBDb21wYXRpYmFsOiB3aGVuIGBzdGFja2AgaXMgc2V0IGFzICcnLCBkbyBub3Qgc3RhY2suCgogICAgaWYgKHN0YWNrKSB7CiAgICAgIHZhciBzdGFja0luZm9MaXN0ID0gc3RhY2tJbmZvTWFwLmdldChzdGFjaykgfHwgc3RhY2tJbmZvTWFwLnNldChzdGFjaywgW10pOwogICAgICB2YXIgZGF0YSA9IHNlcmllc01vZGVsLmdldERhdGEoKTsKICAgICAgdmFyIHN0YWNrSW5mbyA9IHsKICAgICAgICAvLyBVc2VkIGZvciBjYWxjdWxhdGUgYXhpcyBleHRlbnQgYXV0b21hdGljYWxseS4KICAgICAgICBzdGFja1Jlc3VsdERpbWVuc2lvbjogZGF0YS5nZXRDYWxjdWxhdGlvbkluZm8oJ3N0YWNrUmVzdWx0RGltZW5zaW9uJyksCiAgICAgICAgc3RhY2tlZE92ZXJEaW1lbnNpb246IGRhdGEuZ2V0Q2FsY3VsYXRpb25JbmZvKCdzdGFja2VkT3ZlckRpbWVuc2lvbicpLAogICAgICAgIHN0YWNrZWREaW1lbnNpb246IGRhdGEuZ2V0Q2FsY3VsYXRpb25JbmZvKCdzdGFja2VkRGltZW5zaW9uJyksCiAgICAgICAgc3RhY2tlZEJ5RGltZW5zaW9uOiBkYXRhLmdldENhbGN1bGF0aW9uSW5mbygnc3RhY2tlZEJ5RGltZW5zaW9uJyksCiAgICAgICAgaXNTdGFja2VkQnlJbmRleDogZGF0YS5nZXRDYWxjdWxhdGlvbkluZm8oJ2lzU3RhY2tlZEJ5SW5kZXgnKSwKICAgICAgICBkYXRhOiBkYXRhLAogICAgICAgIHNlcmllc01vZGVsOiBzZXJpZXNNb2RlbAogICAgICB9OyAvLyBJZiBzdGFja2VkIG9uIGF4aXMgdGhhdCBkbyBub3Qgc3VwcG9ydCBkYXRhIHN0YWNrLgoKICAgICAgaWYgKCFzdGFja0luZm8uc3RhY2tlZERpbWVuc2lvbiB8fCAhKHN0YWNrSW5mby5pc1N0YWNrZWRCeUluZGV4IHx8IHN0YWNrSW5mby5zdGFja2VkQnlEaW1lbnNpb24pKSB7CiAgICAgICAgcmV0dXJuOwogICAgICB9CgogICAgICBzdGFja0luZm9MaXN0Lmxlbmd0aCAmJiBkYXRhLnNldENhbGN1bGF0aW9uSW5mbygnc3RhY2tlZE9uU2VyaWVzJywgc3RhY2tJbmZvTGlzdFtzdGFja0luZm9MaXN0Lmxlbmd0aCAtIDFdLnNlcmllc01vZGVsKTsKICAgICAgc3RhY2tJbmZvTGlzdC5wdXNoKHN0YWNrSW5mbyk7CiAgICB9CiAgfSk7CiAgc3RhY2tJbmZvTWFwLmVhY2goY2FsY3VsYXRlU3RhY2spOwp9CgpmdW5jdGlvbiBjYWxjdWxhdGVTdGFjayhzdGFja0luZm9MaXN0KSB7CiAgZWFjaChzdGFja0luZm9MaXN0LCBmdW5jdGlvbiAodGFyZ2V0U3RhY2tJbmZvLCBpZHhJblN0YWNrKSB7CiAgICB2YXIgcmVzdWx0VmFsID0gW107CiAgICB2YXIgcmVzdWx0TmFOID0gW05hTiwgTmFOXTsKICAgIHZhciBkaW1zID0gW3RhcmdldFN0YWNrSW5mby5zdGFja1Jlc3VsdERpbWVuc2lvbiwgdGFyZ2V0U3RhY2tJbmZvLnN0YWNrZWRPdmVyRGltZW5zaW9uXTsKICAgIHZhciB0YXJnZXREYXRhID0gdGFyZ2V0U3RhY2tJbmZvLmRhdGE7CiAgICB2YXIgaXNTdGFja2VkQnlJbmRleCA9IHRhcmdldFN0YWNrSW5mby5pc1N0YWNrZWRCeUluZGV4OyAvLyBTaG91bGQgbm90IHdyaXRlIG9uIHJhdyBkYXRhLCBiZWNhdXNlIHN0YWNrIHNlcmllcyBtb2RlbCBsaXN0IGNoYW5nZXMKICAgIC8vIGRlcGVuZGluZyBvbiBsZWdlbmQgc2VsZWN0aW9uLgoKICAgIHZhciBuZXdEYXRhID0gdGFyZ2V0RGF0YS5tYXAoZGltcywgZnVuY3Rpb24gKHYwLCB2MSwgZGF0YUluZGV4KSB7CiAgICAgIHZhciBzdW0gPSB0YXJnZXREYXRhLmdldCh0YXJnZXRTdGFja0luZm8uc3RhY2tlZERpbWVuc2lvbiwgZGF0YUluZGV4KTsgLy8gQ29uc2lkZXIgYGNvbm5lY3ROdWxsc2Agb2YgbGluZSBhcmVhLCBpZiB2YWx1ZSBpcyBOYU4sIHN0YWNrZWRPdmVyCiAgICAgIC8vIHNob3VsZCBhbHNvIGJlIE5hTiwgdG8gZHJhdyBhIGFwcHJvcHJpYXRlIGJlbHQgYXJlYS4KCiAgICAgIGlmIChpc05hTihzdW0pKSB7CiAgICAgICAgcmV0dXJuIHJlc3VsdE5hTjsKICAgICAgfQoKICAgICAgdmFyIGJ5VmFsdWU7CiAgICAgIHZhciBzdGFja2VkRGF0YVJhd0luZGV4OwoKICAgICAgaWYgKGlzU3RhY2tlZEJ5SW5kZXgpIHsKICAgICAgICBzdGFja2VkRGF0YVJhd0luZGV4ID0gdGFyZ2V0RGF0YS5nZXRSYXdJbmRleChkYXRhSW5kZXgpOwogICAgICB9IGVsc2UgewogICAgICAgIGJ5VmFsdWUgPSB0YXJnZXREYXRhLmdldCh0YXJnZXRTdGFja0luZm8uc3RhY2tlZEJ5RGltZW5zaW9uLCBkYXRhSW5kZXgpOwogICAgICB9IC8vIElmIHN0YWNrT3ZlciBpcyBOYU4sIGNoYXJ0IHZpZXcgd2lsbCByZW5kZXIgcG9pbnQgb24gdmFsdWUgc3RhcnQuCgoKICAgICAgdmFyIHN0YWNrZWRPdmVyID0gTmFOOwoKICAgICAgZm9yICh2YXIgaiA9IGlkeEluU3RhY2sgLSAxOyBqID49IDA7IGotLSkgewogICAgICAgIHZhciBzdGFja0luZm8gPSBzdGFja0luZm9MaXN0W2pdOyAvLyBIYXMgYmVlbiBvcHRpbWl6ZWQgYnkgaW52ZXJ0ZWQgaW5kaWNlcyBvbiBgc3RhY2tlZEJ5RGltZW5zaW9uYC4KCiAgICAgICAgaWYgKCFpc1N0YWNrZWRCeUluZGV4KSB7CiAgICAgICAgICBzdGFja2VkRGF0YVJhd0luZGV4ID0gc3RhY2tJbmZvLmRhdGEucmF3SW5kZXhPZihzdGFja0luZm8uc3RhY2tlZEJ5RGltZW5zaW9uLCBieVZhbHVlKTsKICAgICAgICB9CgogICAgICAgIGlmIChzdGFja2VkRGF0YVJhd0luZGV4ID49IDApIHsKICAgICAgICAgIHZhciB2YWwgPSBzdGFja0luZm8uZGF0YS5nZXRCeVJhd0luZGV4KHN0YWNrSW5mby5zdGFja1Jlc3VsdERpbWVuc2lvbiwgc3RhY2tlZERhdGFSYXdJbmRleCk7IC8vIENvbnNpZGVyaW5nIHBvc2l0aXZlIHN0YWNrLCBuZWdhdGl2ZSBzdGFjayBhbmQgZW1wdHkgZGF0YQoKICAgICAgICAgIGlmIChzdW0gPj0gMCAmJiB2YWwgPiAwIHx8IC8vIFBvc2l0aXZlIHN0YWNrCiAgICAgICAgICBzdW0gPD0gMCAmJiB2YWwgPCAwIC8vIE5lZ2F0aXZlIHN0YWNrCiAgICAgICAgICApIHsKICAgICAgICAgICAgICBzdW0gKz0gdmFsOwogICAgICAgICAgICAgIHN0YWNrZWRPdmVyID0gdmFsOwogICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9CgogICAgICByZXN1bHRWYWxbMF0gPSBzdW07CiAgICAgIHJlc3VsdFZhbFsxXSA9IHN0YWNrZWRPdmVyOwogICAgICByZXR1cm4gcmVzdWx0VmFsOwogICAgfSk7CiAgICB0YXJnZXREYXRhLmhvc3RNb2RlbC5zZXREYXRhKG5ld0RhdGEpOyAvLyBVcGRhdGUgZm9yIGNvbnNlcXVlbnQgY2FsY3VsYXRpb24KCiAgICB0YXJnZXRTdGFja0luZm8uZGF0YSA9IG5ld0RhdGE7CiAgfSk7Cn0KCm1vZHVsZS5leHBvcnRzID0gX2RlZmF1bHQ7"},{"version":3,"sources":["/Users/id-repair/Documents/SEOL/4c-dashboard/node_modules/echarts/lib/processor/dataStack.js"],"names":["_util","require","createHashMap","each","_default","ecModel","stackInfoMap","eachSeries","seriesModel","stack","get","stackInfoList","set","data","getData","stackInfo","stackResultDimension","getCalculationInfo","stackedOverDimension","stackedDimension","stackedByDimension","isStackedByIndex","length","setCalculationInfo","push","calculateStack","targetStackInfo","idxInStack","resultVal","resultNaN","NaN","dims","targetData","newData","map","v0","v1","dataIndex","sum","isNaN","byValue","stackedDataRawIndex","getRawIndex","stackedOver","j","rawIndexOf","val","getByRawIndex","hostModel","setData","module","exports"],"mappings":"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","sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar createHashMap = _util.createHashMap;\nvar each = _util.each;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// (1) [Caution]: the logic is correct based on the premises:\n//     data processing stage is blocked in stream.\n//     See <module:echarts/stream/Scheduler#performDataProcessorTasks>\n// (2) Only register once when import repeatly.\n//     Should be executed after series filtered and before stack calculation.\nfunction _default(ecModel) {\n  var stackInfoMap = createHashMap();\n  ecModel.eachSeries(function (seriesModel) {\n    var stack = seriesModel.get('stack'); // Compatibal: when `stack` is set as '', do not stack.\n\n    if (stack) {\n      var stackInfoList = stackInfoMap.get(stack) || stackInfoMap.set(stack, []);\n      var data = seriesModel.getData();\n      var stackInfo = {\n        // Used for calculate axis extent automatically.\n        stackResultDimension: data.getCalculationInfo('stackResultDimension'),\n        stackedOverDimension: data.getCalculationInfo('stackedOverDimension'),\n        stackedDimension: data.getCalculationInfo('stackedDimension'),\n        stackedByDimension: data.getCalculationInfo('stackedByDimension'),\n        isStackedByIndex: data.getCalculationInfo('isStackedByIndex'),\n        data: data,\n        seriesModel: seriesModel\n      }; // If stacked on axis that do not support data stack.\n\n      if (!stackInfo.stackedDimension || !(stackInfo.isStackedByIndex || stackInfo.stackedByDimension)) {\n        return;\n      }\n\n      stackInfoList.length && data.setCalculationInfo('stackedOnSeries', stackInfoList[stackInfoList.length - 1].seriesModel);\n      stackInfoList.push(stackInfo);\n    }\n  });\n  stackInfoMap.each(calculateStack);\n}\n\nfunction calculateStack(stackInfoList) {\n  each(stackInfoList, function (targetStackInfo, idxInStack) {\n    var resultVal = [];\n    var resultNaN = [NaN, NaN];\n    var dims = [targetStackInfo.stackResultDimension, targetStackInfo.stackedOverDimension];\n    var targetData = targetStackInfo.data;\n    var isStackedByIndex = targetStackInfo.isStackedByIndex; // Should not write on raw data, because stack series model list changes\n    // depending on legend selection.\n\n    var newData = targetData.map(dims, function (v0, v1, dataIndex) {\n      var sum = targetData.get(targetStackInfo.stackedDimension, dataIndex); // Consider `connectNulls` of line area, if value is NaN, stackedOver\n      // should also be NaN, to draw a appropriate belt area.\n\n      if (isNaN(sum)) {\n        return resultNaN;\n      }\n\n      var byValue;\n      var stackedDataRawIndex;\n\n      if (isStackedByIndex) {\n        stackedDataRawIndex = targetData.getRawIndex(dataIndex);\n      } else {\n        byValue = targetData.get(targetStackInfo.stackedByDimension, dataIndex);\n      } // If stackOver is NaN, chart view will render point on value start.\n\n\n      var stackedOver = NaN;\n\n      for (var j = idxInStack - 1; j >= 0; j--) {\n        var stackInfo = stackInfoList[j]; // Has been optimized by inverted indices on `stackedByDimension`.\n\n        if (!isStackedByIndex) {\n          stackedDataRawIndex = stackInfo.data.rawIndexOf(stackInfo.stackedByDimension, byValue);\n        }\n\n        if (stackedDataRawIndex >= 0) {\n          var val = stackInfo.data.getByRawIndex(stackInfo.stackResultDimension, stackedDataRawIndex); // Considering positive stack, negative stack and empty data\n\n          if (sum >= 0 && val > 0 || // Positive stack\n          sum <= 0 && val < 0 // Negative stack\n          ) {\n              sum += val;\n              stackedOver = val;\n              break;\n            }\n        }\n      }\n\n      resultVal[0] = sum;\n      resultVal[1] = stackedOver;\n      return resultVal;\n    });\n    targetData.hostModel.setData(newData); // Update for consequent calculation\n\n    targetStackInfo.data = newData;\n  });\n}\n\nmodule.exports = _default;"]}]}