{"remainingRequest":"/Users/id-repair/Documents/SEOL/4c-dashboard/node_modules/babel-loader/lib/index.js!/Users/id-repair/Documents/SEOL/4c-dashboard/node_modules/echarts/lib/chart/lines/linesLayout.js","dependencies":[{"path":"/Users/id-repair/Documents/SEOL/4c-dashboard/node_modules/echarts/lib/chart/lines/linesLayout.js","mtime":499162500000},{"path":"/Users/id-repair/Documents/SEOL/4c-dashboard/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/id-repair/Documents/SEOL/4c-dashboard/node_modules/babel-loader/lib/index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:cmVxdWlyZSgiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LWJ1ZmZlci5zbGljZS5qcyIpOwoKcmVxdWlyZSgiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC50by1zdHJpbmcuanMiKTsKCnJlcXVpcmUoImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5mbG9hdDMyLWFycmF5LmpzIik7CgpyZXF1aXJlKCJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkuY29weS13aXRoaW4uanMiKTsKCnJlcXVpcmUoImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5ldmVyeS5qcyIpOwoKcmVxdWlyZSgiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LmZpbGwuanMiKTsKCnJlcXVpcmUoImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5maWx0ZXIuanMiKTsKCnJlcXVpcmUoImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5maW5kLmpzIik7CgpyZXF1aXJlKCJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkuZmluZC1pbmRleC5qcyIpOwoKcmVxdWlyZSgiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LmZvci1lYWNoLmpzIik7CgpyZXF1aXJlKCJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkuaW5jbHVkZXMuanMiKTsKCnJlcXVpcmUoImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5pbmRleC1vZi5qcyIpOwoKcmVxdWlyZSgiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5Lml0ZXJhdG9yLmpzIik7CgpyZXF1aXJlKCJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkuam9pbi5qcyIpOwoKcmVxdWlyZSgiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5Lmxhc3QtaW5kZXgtb2YuanMiKTsKCnJlcXVpcmUoImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5tYXAuanMiKTsKCnJlcXVpcmUoImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5yZWR1Y2UuanMiKTsKCnJlcXVpcmUoImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5yZWR1Y2UtcmlnaHQuanMiKTsKCnJlcXVpcmUoImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5yZXZlcnNlLmpzIik7CgpyZXF1aXJlKCJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkuc2V0LmpzIik7CgpyZXF1aXJlKCJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkuc2xpY2UuanMiKTsKCnJlcXVpcmUoImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5zb21lLmpzIik7CgpyZXF1aXJlKCJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkuc29ydC5qcyIpOwoKcmVxdWlyZSgiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LnN1YmFycmF5LmpzIik7CgpyZXF1aXJlKCJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkudG8tbG9jYWxlLXN0cmluZy5qcyIpOwoKcmVxdWlyZSgiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LnRvLXN0cmluZy5qcyIpOwoKLyoKKiBMaWNlbnNlZCB0byB0aGUgQXBhY2hlIFNvZnR3YXJlIEZvdW5kYXRpb24gKEFTRikgdW5kZXIgb25lCiogb3IgbW9yZSBjb250cmlidXRvciBsaWNlbnNlIGFncmVlbWVudHMuICBTZWUgdGhlIE5PVElDRSBmaWxlCiogZGlzdHJpYnV0ZWQgd2l0aCB0aGlzIHdvcmsgZm9yIGFkZGl0aW9uYWwgaW5mb3JtYXRpb24KKiByZWdhcmRpbmcgY29weXJpZ2h0IG93bmVyc2hpcC4gIFRoZSBBU0YgbGljZW5zZXMgdGhpcyBmaWxlCiogdG8geW91IHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZQoqICJMaWNlbnNlIik7IHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2UKKiB3aXRoIHRoZSBMaWNlbnNlLiAgWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0CioKKiAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMAoqCiogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLAoqIHNvZnR3YXJlIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuCiogIkFTIElTIiBCQVNJUywgV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZCiogS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC4gIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlCiogc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZCBsaW1pdGF0aW9ucwoqIHVuZGVyIHRoZSBMaWNlbnNlLgoqLwp2YXIgY3JlYXRlUmVuZGVyUGxhbm5lciA9IHJlcXVpcmUoIi4uL2hlbHBlci9jcmVhdGVSZW5kZXJQbGFubmVyIik7Ci8qCiogTGljZW5zZWQgdG8gdGhlIEFwYWNoZSBTb2Z0d2FyZSBGb3VuZGF0aW9uIChBU0YpIHVuZGVyIG9uZQoqIG9yIG1vcmUgY29udHJpYnV0b3IgbGljZW5zZSBhZ3JlZW1lbnRzLiAgU2VlIHRoZSBOT1RJQ0UgZmlsZQoqIGRpc3RyaWJ1dGVkIHdpdGggdGhpcyB3b3JrIGZvciBhZGRpdGlvbmFsIGluZm9ybWF0aW9uCiogcmVnYXJkaW5nIGNvcHlyaWdodCBvd25lcnNoaXAuICBUaGUgQVNGIGxpY2Vuc2VzIHRoaXMgZmlsZQoqIHRvIHlvdSB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUKKiAiTGljZW5zZSIpOyB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlCiogd2l0aCB0aGUgTGljZW5zZS4gIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdAoqCiogICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjAKKgoqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywKKiBzb2Z0d2FyZSBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbgoqICJBUyBJUyIgQkFTSVMsIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWQoqIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuICBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZQoqIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmQgbGltaXRhdGlvbnMKKiB1bmRlciB0aGUgTGljZW5zZS4KKi8KCi8qIGdsb2JhbCBGbG9hdDMyQXJyYXkgKi8KCgp2YXIgX2RlZmF1bHQgPSB7CiAgc2VyaWVzVHlwZTogJ2xpbmVzJywKICBwbGFuOiBjcmVhdGVSZW5kZXJQbGFubmVyKCksCiAgcmVzZXQ6IGZ1bmN0aW9uIHJlc2V0KHNlcmllc01vZGVsKSB7CiAgICB2YXIgY29vcmRTeXMgPSBzZXJpZXNNb2RlbC5jb29yZGluYXRlU3lzdGVtOwogICAgdmFyIGlzUG9seWxpbmUgPSBzZXJpZXNNb2RlbC5nZXQoJ3BvbHlsaW5lJyk7CiAgICB2YXIgaXNMYXJnZSA9IHNlcmllc01vZGVsLnBpcGVsaW5lQ29udGV4dC5sYXJnZTsKCiAgICBmdW5jdGlvbiBwcm9ncmVzcyhwYXJhbXMsIGxpbmVEYXRhKSB7CiAgICAgIHZhciBsaW5lQ29vcmRzID0gW107CgogICAgICBpZiAoaXNMYXJnZSkgewogICAgICAgIHZhciBwb2ludHM7CiAgICAgICAgdmFyIHNlZ0NvdW50ID0gcGFyYW1zLmVuZCAtIHBhcmFtcy5zdGFydDsKCiAgICAgICAgaWYgKGlzUG9seWxpbmUpIHsKICAgICAgICAgIHZhciB0b3RhbENvb3Jkc0NvdW50ID0gMDsKCiAgICAgICAgICBmb3IgKHZhciBpID0gcGFyYW1zLnN0YXJ0OyBpIDwgcGFyYW1zLmVuZDsgaSsrKSB7CiAgICAgICAgICAgIHRvdGFsQ29vcmRzQ291bnQgKz0gc2VyaWVzTW9kZWwuZ2V0TGluZUNvb3Jkc0NvdW50KGkpOwogICAgICAgICAgfQoKICAgICAgICAgIHBvaW50cyA9IG5ldyBGbG9hdDMyQXJyYXkoc2VnQ291bnQgKyB0b3RhbENvb3Jkc0NvdW50ICogMik7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIHBvaW50cyA9IG5ldyBGbG9hdDMyQXJyYXkoc2VnQ291bnQgKiA0KTsKICAgICAgICB9CgogICAgICAgIHZhciBvZmZzZXQgPSAwOwogICAgICAgIHZhciBwdCA9IFtdOwoKICAgICAgICBmb3IgKHZhciBpID0gcGFyYW1zLnN0YXJ0OyBpIDwgcGFyYW1zLmVuZDsgaSsrKSB7CiAgICAgICAgICB2YXIgbGVuID0gc2VyaWVzTW9kZWwuZ2V0TGluZUNvb3JkcyhpLCBsaW5lQ29vcmRzKTsKCiAgICAgICAgICBpZiAoaXNQb2x5bGluZSkgewogICAgICAgICAgICBwb2ludHNbb2Zmc2V0KytdID0gbGVuOwogICAgICAgICAgfQoKICAgICAgICAgIGZvciAodmFyIGsgPSAwOyBrIDwgbGVuOyBrKyspIHsKICAgICAgICAgICAgcHQgPSBjb29yZFN5cy5kYXRhVG9Qb2ludChsaW5lQ29vcmRzW2tdLCBmYWxzZSwgcHQpOwogICAgICAgICAgICBwb2ludHNbb2Zmc2V0KytdID0gcHRbMF07CiAgICAgICAgICAgIHBvaW50c1tvZmZzZXQrK10gPSBwdFsxXTsKICAgICAgICAgIH0KICAgICAgICB9CgogICAgICAgIGxpbmVEYXRhLnNldExheW91dCgnbGluZXNQb2ludHMnLCBwb2ludHMpOwogICAgICB9IGVsc2UgewogICAgICAgIGZvciAodmFyIGkgPSBwYXJhbXMuc3RhcnQ7IGkgPCBwYXJhbXMuZW5kOyBpKyspIHsKICAgICAgICAgIHZhciBpdGVtTW9kZWwgPSBsaW5lRGF0YS5nZXRJdGVtTW9kZWwoaSk7CiAgICAgICAgICB2YXIgbGVuID0gc2VyaWVzTW9kZWwuZ2V0TGluZUNvb3JkcyhpLCBsaW5lQ29vcmRzKTsKICAgICAgICAgIHZhciBwdHMgPSBbXTsKCiAgICAgICAgICBpZiAoaXNQb2x5bGluZSkgewogICAgICAgICAgICBmb3IgKHZhciBqID0gMDsgaiA8IGxlbjsgaisrKSB7CiAgICAgICAgICAgICAgcHRzLnB1c2goY29vcmRTeXMuZGF0YVRvUG9pbnQobGluZUNvb3Jkc1tqXSkpOwogICAgICAgICAgICB9CiAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICBwdHNbMF0gPSBjb29yZFN5cy5kYXRhVG9Qb2ludChsaW5lQ29vcmRzWzBdKTsKICAgICAgICAgICAgcHRzWzFdID0gY29vcmRTeXMuZGF0YVRvUG9pbnQobGluZUNvb3Jkc1sxXSk7CiAgICAgICAgICAgIHZhciBjdXJ2ZW5lc3MgPSBpdGVtTW9kZWwuZ2V0KCdsaW5lU3R5bGUuY3VydmVuZXNzJyk7CgogICAgICAgICAgICBpZiAoK2N1cnZlbmVzcykgewogICAgICAgICAgICAgIHB0c1syXSA9IFsocHRzWzBdWzBdICsgcHRzWzFdWzBdKSAvIDIgLSAocHRzWzBdWzFdIC0gcHRzWzFdWzFdKSAqIGN1cnZlbmVzcywgKHB0c1swXVsxXSArIHB0c1sxXVsxXSkgLyAyIC0gKHB0c1sxXVswXSAtIHB0c1swXVswXSkgKiBjdXJ2ZW5lc3NdOwogICAgICAgICAgICB9CiAgICAgICAgICB9CgogICAgICAgICAgbGluZURhdGEuc2V0SXRlbUxheW91dChpLCBwdHMpOwogICAgICAgIH0KICAgICAgfQogICAgfQoKICAgIHJldHVybiB7CiAgICAgIHByb2dyZXNzOiBwcm9ncmVzcwogICAgfTsKICB9Cn07Cm1vZHVsZS5leHBvcnRzID0gX2RlZmF1bHQ7"},{"version":3,"sources":["/Users/id-repair/Documents/SEOL/4c-dashboard/node_modules/echarts/lib/chart/lines/linesLayout.js"],"names":["createRenderPlanner","require","_default","seriesType","plan","reset","seriesModel","coordSys","coordinateSystem","isPolyline","get","isLarge","pipelineContext","large","progress","params","lineData","lineCoords","points","segCount","end","start","totalCoordsCount","i","getLineCoordsCount","Float32Array","offset","pt","len","getLineCoords","k","dataToPoint","setLayout","itemModel","getItemModel","pts","j","push","curveness","setItemLayout","module","exports"],"mappings":"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","sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar createRenderPlanner = require(\"../helper/createRenderPlanner\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/* global Float32Array */\nvar _default = {\n  seriesType: 'lines',\n  plan: createRenderPlanner(),\n  reset: function (seriesModel) {\n    var coordSys = seriesModel.coordinateSystem;\n    var isPolyline = seriesModel.get('polyline');\n    var isLarge = seriesModel.pipelineContext.large;\n\n    function progress(params, lineData) {\n      var lineCoords = [];\n\n      if (isLarge) {\n        var points;\n        var segCount = params.end - params.start;\n\n        if (isPolyline) {\n          var totalCoordsCount = 0;\n\n          for (var i = params.start; i < params.end; i++) {\n            totalCoordsCount += seriesModel.getLineCoordsCount(i);\n          }\n\n          points = new Float32Array(segCount + totalCoordsCount * 2);\n        } else {\n          points = new Float32Array(segCount * 4);\n        }\n\n        var offset = 0;\n        var pt = [];\n\n        for (var i = params.start; i < params.end; i++) {\n          var len = seriesModel.getLineCoords(i, lineCoords);\n\n          if (isPolyline) {\n            points[offset++] = len;\n          }\n\n          for (var k = 0; k < len; k++) {\n            pt = coordSys.dataToPoint(lineCoords[k], false, pt);\n            points[offset++] = pt[0];\n            points[offset++] = pt[1];\n          }\n        }\n\n        lineData.setLayout('linesPoints', points);\n      } else {\n        for (var i = params.start; i < params.end; i++) {\n          var itemModel = lineData.getItemModel(i);\n          var len = seriesModel.getLineCoords(i, lineCoords);\n          var pts = [];\n\n          if (isPolyline) {\n            for (var j = 0; j < len; j++) {\n              pts.push(coordSys.dataToPoint(lineCoords[j]));\n            }\n          } else {\n            pts[0] = coordSys.dataToPoint(lineCoords[0]);\n            pts[1] = coordSys.dataToPoint(lineCoords[1]);\n            var curveness = itemModel.get('lineStyle.curveness');\n\n            if (+curveness) {\n              pts[2] = [(pts[0][0] + pts[1][0]) / 2 - (pts[0][1] - pts[1][1]) * curveness, (pts[0][1] + pts[1][1]) / 2 - (pts[1][0] - pts[0][0]) * curveness];\n            }\n          }\n\n          lineData.setItemLayout(i, pts);\n        }\n      }\n    }\n\n    return {\n      progress: progress\n    };\n  }\n};\nmodule.exports = _default;"]}]}