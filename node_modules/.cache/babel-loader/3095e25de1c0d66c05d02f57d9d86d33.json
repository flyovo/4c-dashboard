{"remainingRequest":"/Users/id-repair/Documents/SEOL/4c-dashboard/node_modules/babel-loader/lib/index.js!/Users/id-repair/Documents/SEOL/4c-dashboard/node_modules/echarts/lib/chart/map/MapSeries.js","dependencies":[{"path":"/Users/id-repair/Documents/SEOL/4c-dashboard/node_modules/echarts/lib/chart/map/MapSeries.js","mtime":499162500000},{"path":"/Users/id-repair/Documents/SEOL/4c-dashboard/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/id-repair/Documents/SEOL/4c-dashboard/node_modules/babel-loader/lib/index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/id-repair/Documents/SEOL/4c-dashboard/node_modules/echarts/lib/chart/map/MapSeries.js"],"names":["zrUtil","require","createListSimply","SeriesModel","_format","encodeHTML","addCommas","dataSelectableMixin","_dataProvider","retrieveRawAttr","geoSourceManager","_sourceHelper","makeSeriesEncodeForNameBased","MapSeries","extend","type","dependencies","layoutMode","needsDrawMap","seriesGroup","getInitialData","option","data","coordDimensions","encodeDefaulter","curry","valueDim","mapDimension","dataNameMap","createHashMap","selectTargetList","toAppendNames","i","len","count","name","getName","set","push","value","get","selected","geoSource","load","getMapType","nameMap","nameProperty","each","regions","region","updateSelectedMap","appendValues","getHostGeoModel","geoIndex","dependentModels","geo","map","getRawValue","dataIndex","getData","getRegionModel","regionName","getItemModel","indexOfName","formatTooltip","multipleSeries","dataType","renderMode","formattedValue","seriesNames","length","otherIndex","originalData","isNaN","newLine","join","getTooltipPosition","coordinateSystem","getRegion","dataToPoint","center","setZoom","zoom","setCenter","defaultOption","zlevel","z","left","top","aspectScale","showLegendSymbol","dataRangeHoverLink","boundingCoords","scaleLimit","label","show","color","itemStyle","borderWidth","borderColor","areaColor","emphasis","mixin","_default","module","exports"],"mappings":"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","sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar createListSimply = require(\"../helper/createListSimply\");\n\nvar SeriesModel = require(\"../../model/Series\");\n\nvar _format = require(\"../../util/format\");\n\nvar encodeHTML = _format.encodeHTML;\nvar addCommas = _format.addCommas;\n\nvar dataSelectableMixin = require(\"../../component/helper/selectableMixin\");\n\nvar _dataProvider = require(\"../../data/helper/dataProvider\");\n\nvar retrieveRawAttr = _dataProvider.retrieveRawAttr;\n\nvar geoSourceManager = require(\"../../coord/geo/geoSourceManager\");\n\nvar _sourceHelper = require(\"../../data/helper/sourceHelper\");\n\nvar makeSeriesEncodeForNameBased = _sourceHelper.makeSeriesEncodeForNameBased;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar MapSeries = SeriesModel.extend({\n  type: 'series.map',\n  dependencies: ['geo'],\n  layoutMode: 'box',\n\n  /**\n   * Only first map series of same mapType will drawMap\n   * @type {boolean}\n   */\n  needsDrawMap: false,\n\n  /**\n   * Group of all map series with same mapType\n   * @type {boolean}\n   */\n  seriesGroup: [],\n  getInitialData: function (option) {\n    var data = createListSimply(this, {\n      coordDimensions: ['value'],\n      encodeDefaulter: zrUtil.curry(makeSeriesEncodeForNameBased, this)\n    });\n    var valueDim = data.mapDimension('value');\n    var dataNameMap = zrUtil.createHashMap();\n    var selectTargetList = [];\n    var toAppendNames = [];\n\n    for (var i = 0, len = data.count(); i < len; i++) {\n      var name = data.getName(i);\n      dataNameMap.set(name, true);\n      selectTargetList.push({\n        name: name,\n        value: data.get(valueDim, i),\n        selected: retrieveRawAttr(data, i, 'selected')\n      });\n    }\n\n    var geoSource = geoSourceManager.load(this.getMapType(), this.option.nameMap, this.option.nameProperty);\n    zrUtil.each(geoSource.regions, function (region) {\n      var name = region.name;\n\n      if (!dataNameMap.get(name)) {\n        selectTargetList.push({\n          name: name\n        });\n        toAppendNames.push(name);\n      }\n    });\n    this.updateSelectedMap(selectTargetList); // Complete data with missing regions. The consequent processes (like visual\n    // map and render) can not be performed without a \"full data\". For example,\n    // find `dataIndex` by name.\n\n    data.appendValues([], toAppendNames);\n    return data;\n  },\n\n  /**\n   * If no host geo model, return null, which means using a\n   * inner exclusive geo model.\n   */\n  getHostGeoModel: function () {\n    var geoIndex = this.option.geoIndex;\n    return geoIndex != null ? this.dependentModels.geo[geoIndex] : null;\n  },\n  getMapType: function () {\n    return (this.getHostGeoModel() || this).option.map;\n  },\n  // _fillOption: function (option, mapName) {\n  // Shallow clone\n  // option = zrUtil.extend({}, option);\n  // option.data = geoCreator.getFilledRegions(option.data, mapName, option.nameMap);\n  // return option;\n  // },\n  getRawValue: function (dataIndex) {\n    // Use value stored in data instead because it is calculated from multiple series\n    // FIXME Provide all value of multiple series ?\n    var data = this.getData();\n    return data.get(data.mapDimension('value'), dataIndex);\n  },\n\n  /**\n   * Get model of region\n   * @param  {string} name\n   * @return {module:echarts/model/Model}\n   */\n  getRegionModel: function (regionName) {\n    var data = this.getData();\n    return data.getItemModel(data.indexOfName(regionName));\n  },\n\n  /**\n   * Map tooltip formatter\n   *\n   * @param {number} dataIndex\n   */\n  formatTooltip: function (dataIndex, multipleSeries, dataType, renderMode) {\n    // FIXME orignalData and data is a bit confusing\n    var data = this.getData();\n    var formattedValue = addCommas(this.getRawValue(dataIndex));\n    var name = data.getName(dataIndex);\n    var seriesGroup = this.seriesGroup;\n    var seriesNames = [];\n\n    for (var i = 0; i < seriesGroup.length; i++) {\n      var otherIndex = seriesGroup[i].originalData.indexOfName(name);\n      var valueDim = data.mapDimension('value');\n\n      if (!isNaN(seriesGroup[i].originalData.get(valueDim, otherIndex))) {\n        seriesNames.push(encodeHTML(seriesGroup[i].name));\n      }\n    }\n\n    var newLine = renderMode === 'html' ? '<br/>' : '\\n';\n    return seriesNames.join(', ') + newLine + encodeHTML(name + ' : ' + formattedValue);\n  },\n\n  /**\n   * @implement\n   */\n  getTooltipPosition: function (dataIndex) {\n    if (dataIndex != null) {\n      var name = this.getData().getName(dataIndex);\n      var geo = this.coordinateSystem;\n      var region = geo.getRegion(name);\n      return region && geo.dataToPoint(region.center);\n    }\n  },\n  setZoom: function (zoom) {\n    this.option.zoom = zoom;\n  },\n  setCenter: function (center) {\n    this.option.center = center;\n  },\n  defaultOption: {\n    // 一级层叠\n    zlevel: 0,\n    // 二级层叠\n    z: 2,\n    coordinateSystem: 'geo',\n    // map should be explicitly specified since ec3.\n    map: '',\n    // If `geoIndex` is not specified, a exclusive geo will be\n    // created. Otherwise use the specified geo component, and\n    // `map` and `mapType` are ignored.\n    // geoIndex: 0,\n    // 'center' | 'left' | 'right' | 'x%' | {number}\n    left: 'center',\n    // 'center' | 'top' | 'bottom' | 'x%' | {number}\n    top: 'center',\n    // right\n    // bottom\n    // width:\n    // height\n    // Aspect is width / height. Inited to be geoJson bbox aspect\n    // This parameter is used for scale this aspect\n    aspectScale: 0.75,\n    ///// Layout with center and size\n    // If you wan't to put map in a fixed size box with right aspect ratio\n    // This two properties may more conveninet\n    // layoutCenter: [50%, 50%]\n    // layoutSize: 100\n    // 数值合并方式，默认加和，可选为：\n    // 'sum' | 'average' | 'max' | 'min'\n    // mapValueCalculation: 'sum',\n    // 地图数值计算结果小数精度\n    // mapValuePrecision: 0,\n    // 显示图例颜色标识（系列标识的小圆点），图例开启时有效\n    showLegendSymbol: true,\n    // 选择模式，默认关闭，可选single，multiple\n    // selectedMode: false,\n    dataRangeHoverLink: true,\n    // 是否开启缩放及漫游模式\n    // roam: false,\n    // Define left-top, right-bottom coords to control view\n    // For example, [ [180, 90], [-180, -90] ],\n    // higher priority than center and zoom\n    boundingCoords: null,\n    // Default on center of map\n    center: null,\n    zoom: 1,\n    scaleLimit: null,\n    label: {\n      show: false,\n      color: '#000'\n    },\n    // scaleLimit: null,\n    itemStyle: {\n      borderWidth: 0.5,\n      borderColor: '#444',\n      areaColor: '#eee'\n    },\n    emphasis: {\n      label: {\n        show: true,\n        color: 'rgb(100,0,0)'\n      },\n      itemStyle: {\n        areaColor: 'rgba(255,215,0,0.8)'\n      }\n    },\n    nameProperty: 'name'\n  }\n});\nzrUtil.mixin(MapSeries, dataSelectableMixin);\nvar _default = MapSeries;\nmodule.exports = _default;"]}]}