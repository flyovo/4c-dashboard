{"remainingRequest":"/Users/id-repair/Documents/SEOL/4c-dashboard/node_modules/babel-loader/lib/index.js!/Users/id-repair/Documents/SEOL/4c-dashboard/node_modules/echarts/lib/chart/scatter/ScatterView.js","dependencies":[{"path":"/Users/id-repair/Documents/SEOL/4c-dashboard/node_modules/echarts/lib/chart/scatter/ScatterView.js","mtime":499162500000},{"path":"/Users/id-repair/Documents/SEOL/4c-dashboard/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/id-repair/Documents/SEOL/4c-dashboard/node_modules/babel-loader/lib/index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:LyoKKiBMaWNlbnNlZCB0byB0aGUgQXBhY2hlIFNvZnR3YXJlIEZvdW5kYXRpb24gKEFTRikgdW5kZXIgb25lCiogb3IgbW9yZSBjb250cmlidXRvciBsaWNlbnNlIGFncmVlbWVudHMuICBTZWUgdGhlIE5PVElDRSBmaWxlCiogZGlzdHJpYnV0ZWQgd2l0aCB0aGlzIHdvcmsgZm9yIGFkZGl0aW9uYWwgaW5mb3JtYXRpb24KKiByZWdhcmRpbmcgY29weXJpZ2h0IG93bmVyc2hpcC4gIFRoZSBBU0YgbGljZW5zZXMgdGhpcyBmaWxlCiogdG8geW91IHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZQoqICJMaWNlbnNlIik7IHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2UKKiB3aXRoIHRoZSBMaWNlbnNlLiAgWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0CioKKiAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMAoqCiogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLAoqIHNvZnR3YXJlIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuCiogIkFTIElTIiBCQVNJUywgV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZCiogS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC4gIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlCiogc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZCBsaW1pdGF0aW9ucwoqIHVuZGVyIHRoZSBMaWNlbnNlLgoqLwp2YXIgZWNoYXJ0cyA9IHJlcXVpcmUoIi4uLy4uL2VjaGFydHMiKTsKCnZhciBTeW1ib2xEcmF3ID0gcmVxdWlyZSgiLi4vaGVscGVyL1N5bWJvbERyYXciKTsKCnZhciBMYXJnZVN5bWJvbERyYXcgPSByZXF1aXJlKCIuLi9oZWxwZXIvTGFyZ2VTeW1ib2xEcmF3Iik7Cgp2YXIgcG9pbnRzTGF5b3V0ID0gcmVxdWlyZSgiLi4vLi4vbGF5b3V0L3BvaW50cyIpOwovKgoqIExpY2Vuc2VkIHRvIHRoZSBBcGFjaGUgU29mdHdhcmUgRm91bmRhdGlvbiAoQVNGKSB1bmRlciBvbmUKKiBvciBtb3JlIGNvbnRyaWJ1dG9yIGxpY2Vuc2UgYWdyZWVtZW50cy4gIFNlZSB0aGUgTk9USUNFIGZpbGUKKiBkaXN0cmlidXRlZCB3aXRoIHRoaXMgd29yayBmb3IgYWRkaXRpb25hbCBpbmZvcm1hdGlvbgoqIHJlZ2FyZGluZyBjb3B5cmlnaHQgb3duZXJzaGlwLiAgVGhlIEFTRiBsaWNlbnNlcyB0aGlzIGZpbGUKKiB0byB5b3UgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlCiogIkxpY2Vuc2UiKTsgeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZQoqIHdpdGggdGhlIExpY2Vuc2UuICBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXQKKgoqICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wCioKKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsCiogc29mdHdhcmUgZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4KKiAiQVMgSVMiIEJBU0lTLCBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkKKiBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLiAgU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUKKiBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kIGxpbWl0YXRpb25zCiogdW5kZXIgdGhlIExpY2Vuc2UuCiovCgoKZWNoYXJ0cy5leHRlbmRDaGFydFZpZXcoewogIHR5cGU6ICdzY2F0dGVyJywKICByZW5kZXI6IGZ1bmN0aW9uIHJlbmRlcihzZXJpZXNNb2RlbCwgZWNNb2RlbCwgYXBpKSB7CiAgICB2YXIgZGF0YSA9IHNlcmllc01vZGVsLmdldERhdGEoKTsKCiAgICB2YXIgc3ltYm9sRHJhdyA9IHRoaXMuX3VwZGF0ZVN5bWJvbERyYXcoZGF0YSwgc2VyaWVzTW9kZWwpOwoKICAgIHN5bWJvbERyYXcudXBkYXRlRGF0YShkYXRhLCB7CiAgICAgIC8vIFRPRE8KICAgICAgLy8gSWYgdGhpcyBwYXJhbWV0ZXIgc2hvdWxkIGJlIGEgc2hhcGUgb3IgYSBib3VuZGluZyB2b2x1bWUKICAgICAgLy8gc2hhcGUgd2lsbCBiZSBtb3JlIGdlbmVyYWwuCiAgICAgIC8vIEJ1dCBib3VuZGluZyB2b2x1bWUgbGlrZSBib3VuZGluZyByZWN0IHdpbGwgYmUgbXVjaCBmYXN0ZXIgaW4gdGhlIGNvbnRhaW4gY2FsY3VsYXRpb24KICAgICAgY2xpcFNoYXBlOiB0aGlzLl9nZXRDbGlwU2hhcGUoc2VyaWVzTW9kZWwpCiAgICB9KTsKICAgIHRoaXMuX2ZpbmlzaGVkID0gdHJ1ZTsKICB9LAogIGluY3JlbWVudGFsUHJlcGFyZVJlbmRlcjogZnVuY3Rpb24gaW5jcmVtZW50YWxQcmVwYXJlUmVuZGVyKHNlcmllc01vZGVsLCBlY01vZGVsLCBhcGkpIHsKICAgIHZhciBkYXRhID0gc2VyaWVzTW9kZWwuZ2V0RGF0YSgpOwoKICAgIHZhciBzeW1ib2xEcmF3ID0gdGhpcy5fdXBkYXRlU3ltYm9sRHJhdyhkYXRhLCBzZXJpZXNNb2RlbCk7CgogICAgc3ltYm9sRHJhdy5pbmNyZW1lbnRhbFByZXBhcmVVcGRhdGUoZGF0YSk7CiAgICB0aGlzLl9maW5pc2hlZCA9IGZhbHNlOwogIH0sCiAgaW5jcmVtZW50YWxSZW5kZXI6IGZ1bmN0aW9uIGluY3JlbWVudGFsUmVuZGVyKHRhc2tQYXJhbXMsIHNlcmllc01vZGVsLCBlY01vZGVsKSB7CiAgICB0aGlzLl9zeW1ib2xEcmF3LmluY3JlbWVudGFsVXBkYXRlKHRhc2tQYXJhbXMsIHNlcmllc01vZGVsLmdldERhdGEoKSwgewogICAgICBjbGlwU2hhcGU6IHRoaXMuX2dldENsaXBTaGFwZShzZXJpZXNNb2RlbCkKICAgIH0pOwoKICAgIHRoaXMuX2ZpbmlzaGVkID0gdGFza1BhcmFtcy5lbmQgPT09IHNlcmllc01vZGVsLmdldERhdGEoKS5jb3VudCgpOwogIH0sCiAgdXBkYXRlVHJhbnNmb3JtOiBmdW5jdGlvbiB1cGRhdGVUcmFuc2Zvcm0oc2VyaWVzTW9kZWwsIGVjTW9kZWwsIGFwaSkgewogICAgdmFyIGRhdGEgPSBzZXJpZXNNb2RlbC5nZXREYXRhKCk7IC8vIE11c3QgbWFyayBncm91cCBkaXJ0eSBhbmQgbWFrZSBzdXJlIHRoZSBpbmNyZW1lbnRhbCBsYXllciB3aWxsIGJlIGNsZWFyZWQKICAgIC8vIFBFTkRJTkcKCiAgICB0aGlzLmdyb3VwLmRpcnR5KCk7CgogICAgaWYgKCF0aGlzLl9maW5pc2hlZCB8fCBkYXRhLmNvdW50KCkgPiAxZTQgfHwgIXRoaXMuX3N5bWJvbERyYXcuaXNQZXJzaXN0ZW50KCkpIHsKICAgICAgcmV0dXJuIHsKICAgICAgICB1cGRhdGU6IHRydWUKICAgICAgfTsKICAgIH0gZWxzZSB7CiAgICAgIHZhciByZXMgPSBwb2ludHNMYXlvdXQoKS5yZXNldChzZXJpZXNNb2RlbCk7CgogICAgICBpZiAocmVzLnByb2dyZXNzKSB7CiAgICAgICAgcmVzLnByb2dyZXNzKHsKICAgICAgICAgIHN0YXJ0OiAwLAogICAgICAgICAgZW5kOiBkYXRhLmNvdW50KCkKICAgICAgICB9LCBkYXRhKTsKICAgICAgfQoKICAgICAgdGhpcy5fc3ltYm9sRHJhdy51cGRhdGVMYXlvdXQoZGF0YSk7CiAgICB9CiAgfSwKICBfZ2V0Q2xpcFNoYXBlOiBmdW5jdGlvbiBfZ2V0Q2xpcFNoYXBlKHNlcmllc01vZGVsKSB7CiAgICB2YXIgY29vcmRTeXMgPSBzZXJpZXNNb2RlbC5jb29yZGluYXRlU3lzdGVtOwogICAgdmFyIGNsaXBBcmVhID0gY29vcmRTeXMgJiYgY29vcmRTeXMuZ2V0QXJlYSAmJiBjb29yZFN5cy5nZXRBcmVhKCk7CiAgICByZXR1cm4gc2VyaWVzTW9kZWwuZ2V0KCdjbGlwJywgdHJ1ZSkgPyBjbGlwQXJlYSA6IG51bGw7CiAgfSwKICBfdXBkYXRlU3ltYm9sRHJhdzogZnVuY3Rpb24gX3VwZGF0ZVN5bWJvbERyYXcoZGF0YSwgc2VyaWVzTW9kZWwpIHsKICAgIHZhciBzeW1ib2xEcmF3ID0gdGhpcy5fc3ltYm9sRHJhdzsKICAgIHZhciBwaXBlbGluZUNvbnRleHQgPSBzZXJpZXNNb2RlbC5waXBlbGluZUNvbnRleHQ7CiAgICB2YXIgaXNMYXJnZURyYXcgPSBwaXBlbGluZUNvbnRleHQubGFyZ2U7CgogICAgaWYgKCFzeW1ib2xEcmF3IHx8IGlzTGFyZ2VEcmF3ICE9PSB0aGlzLl9pc0xhcmdlRHJhdykgewogICAgICBzeW1ib2xEcmF3ICYmIHN5bWJvbERyYXcucmVtb3ZlKCk7CiAgICAgIHN5bWJvbERyYXcgPSB0aGlzLl9zeW1ib2xEcmF3ID0gaXNMYXJnZURyYXcgPyBuZXcgTGFyZ2VTeW1ib2xEcmF3KCkgOiBuZXcgU3ltYm9sRHJhdygpOwogICAgICB0aGlzLl9pc0xhcmdlRHJhdyA9IGlzTGFyZ2VEcmF3OwogICAgICB0aGlzLmdyb3VwLnJlbW92ZUFsbCgpOwogICAgfQoKICAgIHRoaXMuZ3JvdXAuYWRkKHN5bWJvbERyYXcuZ3JvdXApOwogICAgcmV0dXJuIHN5bWJvbERyYXc7CiAgfSwKICByZW1vdmU6IGZ1bmN0aW9uIHJlbW92ZShlY01vZGVsLCBhcGkpIHsKICAgIHRoaXMuX3N5bWJvbERyYXcgJiYgdGhpcy5fc3ltYm9sRHJhdy5yZW1vdmUodHJ1ZSk7CiAgICB0aGlzLl9zeW1ib2xEcmF3ID0gbnVsbDsKICB9LAogIGRpc3Bvc2U6IGZ1bmN0aW9uIGRpc3Bvc2UoKSB7fQp9KTs="},{"version":3,"sources":["/Users/id-repair/Documents/SEOL/4c-dashboard/node_modules/echarts/lib/chart/scatter/ScatterView.js"],"names":["echarts","require","SymbolDraw","LargeSymbolDraw","pointsLayout","extendChartView","type","render","seriesModel","ecModel","api","data","getData","symbolDraw","_updateSymbolDraw","updateData","clipShape","_getClipShape","_finished","incrementalPrepareRender","incrementalPrepareUpdate","incrementalRender","taskParams","_symbolDraw","incrementalUpdate","end","count","updateTransform","group","dirty","isPersistent","update","res","reset","progress","start","updateLayout","coordSys","coordinateSystem","clipArea","getArea","get","pipelineContext","isLargeDraw","large","_isLargeDraw","remove","removeAll","add","dispose"],"mappings":"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","sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../../echarts\");\n\nvar SymbolDraw = require(\"../helper/SymbolDraw\");\n\nvar LargeSymbolDraw = require(\"../helper/LargeSymbolDraw\");\n\nvar pointsLayout = require(\"../../layout/points\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\necharts.extendChartView({\n  type: 'scatter',\n  render: function (seriesModel, ecModel, api) {\n    var data = seriesModel.getData();\n\n    var symbolDraw = this._updateSymbolDraw(data, seriesModel);\n\n    symbolDraw.updateData(data, {\n      // TODO\n      // If this parameter should be a shape or a bounding volume\n      // shape will be more general.\n      // But bounding volume like bounding rect will be much faster in the contain calculation\n      clipShape: this._getClipShape(seriesModel)\n    });\n    this._finished = true;\n  },\n  incrementalPrepareRender: function (seriesModel, ecModel, api) {\n    var data = seriesModel.getData();\n\n    var symbolDraw = this._updateSymbolDraw(data, seriesModel);\n\n    symbolDraw.incrementalPrepareUpdate(data);\n    this._finished = false;\n  },\n  incrementalRender: function (taskParams, seriesModel, ecModel) {\n    this._symbolDraw.incrementalUpdate(taskParams, seriesModel.getData(), {\n      clipShape: this._getClipShape(seriesModel)\n    });\n\n    this._finished = taskParams.end === seriesModel.getData().count();\n  },\n  updateTransform: function (seriesModel, ecModel, api) {\n    var data = seriesModel.getData(); // Must mark group dirty and make sure the incremental layer will be cleared\n    // PENDING\n\n    this.group.dirty();\n\n    if (!this._finished || data.count() > 1e4 || !this._symbolDraw.isPersistent()) {\n      return {\n        update: true\n      };\n    } else {\n      var res = pointsLayout().reset(seriesModel);\n\n      if (res.progress) {\n        res.progress({\n          start: 0,\n          end: data.count()\n        }, data);\n      }\n\n      this._symbolDraw.updateLayout(data);\n    }\n  },\n  _getClipShape: function (seriesModel) {\n    var coordSys = seriesModel.coordinateSystem;\n    var clipArea = coordSys && coordSys.getArea && coordSys.getArea();\n    return seriesModel.get('clip', true) ? clipArea : null;\n  },\n  _updateSymbolDraw: function (data, seriesModel) {\n    var symbolDraw = this._symbolDraw;\n    var pipelineContext = seriesModel.pipelineContext;\n    var isLargeDraw = pipelineContext.large;\n\n    if (!symbolDraw || isLargeDraw !== this._isLargeDraw) {\n      symbolDraw && symbolDraw.remove();\n      symbolDraw = this._symbolDraw = isLargeDraw ? new LargeSymbolDraw() : new SymbolDraw();\n      this._isLargeDraw = isLargeDraw;\n      this.group.removeAll();\n    }\n\n    this.group.add(symbolDraw.group);\n    return symbolDraw;\n  },\n  remove: function (ecModel, api) {\n    this._symbolDraw && this._symbolDraw.remove(true);\n    this._symbolDraw = null;\n  },\n  dispose: function () {}\n});"]}]}