{"remainingRequest":"/Users/id-repair/Documents/SEOL/4c-dashboard/node_modules/babel-loader/lib/index.js!/Users/id-repair/Documents/SEOL/4c-dashboard/node_modules/echarts/lib/chart/graph/circularLayoutHelper.js","dependencies":[{"path":"/Users/id-repair/Documents/SEOL/4c-dashboard/node_modules/echarts/lib/chart/graph/circularLayoutHelper.js","mtime":499162500000},{"path":"/Users/id-repair/Documents/SEOL/4c-dashboard/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/id-repair/Documents/SEOL/4c-dashboard/node_modules/babel-loader/lib/index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:LyoKKiBMaWNlbnNlZCB0byB0aGUgQXBhY2hlIFNvZnR3YXJlIEZvdW5kYXRpb24gKEFTRikgdW5kZXIgb25lCiogb3IgbW9yZSBjb250cmlidXRvciBsaWNlbnNlIGFncmVlbWVudHMuICBTZWUgdGhlIE5PVElDRSBmaWxlCiogZGlzdHJpYnV0ZWQgd2l0aCB0aGlzIHdvcmsgZm9yIGFkZGl0aW9uYWwgaW5mb3JtYXRpb24KKiByZWdhcmRpbmcgY29weXJpZ2h0IG93bmVyc2hpcC4gIFRoZSBBU0YgbGljZW5zZXMgdGhpcyBmaWxlCiogdG8geW91IHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZQoqICJMaWNlbnNlIik7IHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2UKKiB3aXRoIHRoZSBMaWNlbnNlLiAgWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0CioKKiAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMAoqCiogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLAoqIHNvZnR3YXJlIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuCiogIkFTIElTIiBCQVNJUywgV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZCiogS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC4gIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlCiogc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZCBsaW1pdGF0aW9ucwoqIHVuZGVyIHRoZSBMaWNlbnNlLgoqLwp2YXIgdmVjMiA9IHJlcXVpcmUoInpyZW5kZXIvbGliL2NvcmUvdmVjdG9yIik7Cgp2YXIgX2dyYXBoSGVscGVyID0gcmVxdWlyZSgiLi9ncmFwaEhlbHBlciIpOwoKdmFyIGdldFN5bWJvbFNpemUgPSBfZ3JhcGhIZWxwZXIuZ2V0U3ltYm9sU2l6ZTsKdmFyIGdldE5vZGVHbG9iYWxTY2FsZSA9IF9ncmFwaEhlbHBlci5nZXROb2RlR2xvYmFsU2NhbGU7Cgp2YXIgenJVdGlsID0gcmVxdWlyZSgienJlbmRlci9saWIvY29yZS91dGlsIik7Cgp2YXIgX211bHRpcGxlR3JhcGhFZGdlSGVscGVyID0gcmVxdWlyZSgiLi4vaGVscGVyL211bHRpcGxlR3JhcGhFZGdlSGVscGVyIik7Cgp2YXIgZ2V0Q3VydmVuZXNzRm9yRWRnZSA9IF9tdWx0aXBsZUdyYXBoRWRnZUhlbHBlci5nZXRDdXJ2ZW5lc3NGb3JFZGdlOwovKgoqIExpY2Vuc2VkIHRvIHRoZSBBcGFjaGUgU29mdHdhcmUgRm91bmRhdGlvbiAoQVNGKSB1bmRlciBvbmUKKiBvciBtb3JlIGNvbnRyaWJ1dG9yIGxpY2Vuc2UgYWdyZWVtZW50cy4gIFNlZSB0aGUgTk9USUNFIGZpbGUKKiBkaXN0cmlidXRlZCB3aXRoIHRoaXMgd29yayBmb3IgYWRkaXRpb25hbCBpbmZvcm1hdGlvbgoqIHJlZ2FyZGluZyBjb3B5cmlnaHQgb3duZXJzaGlwLiAgVGhlIEFTRiBsaWNlbnNlcyB0aGlzIGZpbGUKKiB0byB5b3UgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlCiogIkxpY2Vuc2UiKTsgeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZQoqIHdpdGggdGhlIExpY2Vuc2UuICBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXQKKgoqICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wCioKKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsCiogc29mdHdhcmUgZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4KKiAiQVMgSVMiIEJBU0lTLCBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkKKiBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLiAgU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUKKiBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kIGxpbWl0YXRpb25zCiogdW5kZXIgdGhlIExpY2Vuc2UuCiovCgp2YXIgUEkgPSBNYXRoLlBJOwp2YXIgX3N5bWJvbFJhZGlhbnNIYWxmID0gW107Ci8qKgogKiBgYmFzZWRPbmAgY2FuIGJlOgogKiAndmFsdWUnOgogKiAgICAgVGhpcyBsYXlvdXQgaXMgbm90IGFjY3VyYXRlIGFuZCBoYXZlIHNhbWUgYmFkIGNhc2UuIEZvciBleGFtcGxlLAogKiAgICAgaWYgdGhlIG1pbiB2YWx1ZSBpcyB2ZXJ5IHNtYWxsZXIgdGhhbiB0aGUgbWF4IHZhbHVlLCB0aGUgbm9kZXMKICogICAgIHdpdGggdGhlIG1pbiB2YWx1ZSBwcm9iYWJseSBvdmVybGFwIGV2ZW4gdGhvdWdoIHRoZXJlIGlzIGVub3VnaAogKiAgICAgc3BhY2UgdG8gbGF5b3V0IHRoZW0uIFNvIHdlIG9ubHkgdXNlIHRoaXMgYXBwcm9hY2ggaW4gdGhlIGFzIHRoZQogKiAgICAgaW5pdCBsYXlvdXQgb2YgdGhlIGZvcmNlIGxheW91dC4KICogICAgIEZJWE1FCiAqICAgICBQcm9iYWJseSB3ZSBkbyBub3QgbmVlZCB0aGlzIG1ldGhvZCBhbnkgbW9yZSBidXQgdXNlCiAqICAgICBgYmFzZWRPbjogJ3N5bWJvbFNpemUnYCBpbiBmb3JjZSBsYXlvdXQgaWYKICogICAgIGRlbGF5IGl0cyBpbml0IG9wZXJhdGlvbnMgdG8gR3JhcGhWaWV3LgogKiAnc3ltYm9sU2l6ZSc6CiAqICAgICBUaGlzIGFwcHJvYWNoIHdvcmsgb25seSBpZiBhbGwgb2YgdGhlIHN5bWJvbCBzaXplIGNhbGN1bGF0ZWQuCiAqICAgICBUaGF0IGlzLCB0aGUgcHJvZ3Jlc3NpdmUgcmVuZGVyaW5nIGlzIG5vdCBhcHBsaWVkIHRvIGdyYXBoLgogKiAgICAgRklYTUUKICogICAgIElmIHByb2dyZXNzaXZlIHJlbmRlcmluZyBpcyBhcHBsaWVkIHRvIGdyYXBoIHNvbWUgZGF5LAogKiAgICAgcHJvYmFibHkgd2UgaGF2ZSB0byB1c2UgYGJhc2VkT246ICd2YWx1ZSdgLgogKgogKiBAcGFyYW0ge21vZHVsZTplY2hhcnRzL3NyYy9tb2RlbC9TZXJpZXN9IHNlcmllc01vZGVsCiAqIEBwYXJhbSB7c3RyaW5nfSBiYXNlZE9uICd2YWx1ZScgb3IgJ3N5bWJvbFNpemUnCiAqLwoKZnVuY3Rpb24gY2lyY3VsYXJMYXlvdXQoc2VyaWVzTW9kZWwsIGJhc2VkT24pIHsKICB2YXIgY29vcmRTeXMgPSBzZXJpZXNNb2RlbC5jb29yZGluYXRlU3lzdGVtOwoKICBpZiAoY29vcmRTeXMgJiYgY29vcmRTeXMudHlwZSAhPT0gJ3ZpZXcnKSB7CiAgICByZXR1cm47CiAgfQoKICB2YXIgcmVjdCA9IGNvb3JkU3lzLmdldEJvdW5kaW5nUmVjdCgpOwogIHZhciBub2RlRGF0YSA9IHNlcmllc01vZGVsLmdldERhdGEoKTsKICB2YXIgZ3JhcGggPSBub2RlRGF0YS5ncmFwaDsKICB2YXIgY3ggPSByZWN0LndpZHRoIC8gMiArIHJlY3QueDsKICB2YXIgY3kgPSByZWN0LmhlaWdodCAvIDIgKyByZWN0Lnk7CiAgdmFyIHIgPSBNYXRoLm1pbihyZWN0LndpZHRoLCByZWN0LmhlaWdodCkgLyAyOwogIHZhciBjb3VudCA9IG5vZGVEYXRhLmNvdW50KCk7CiAgbm9kZURhdGEuc2V0TGF5b3V0KHsKICAgIGN4OiBjeCwKICAgIGN5OiBjeQogIH0pOwoKICBpZiAoIWNvdW50KSB7CiAgICByZXR1cm47CiAgfQoKICBfbGF5b3V0Tm9kZXNCYXNlZE9uW2Jhc2VkT25dKHNlcmllc01vZGVsLCBjb29yZFN5cywgZ3JhcGgsIG5vZGVEYXRhLCByLCBjeCwgY3ksIGNvdW50KTsKCiAgZ3JhcGguZWFjaEVkZ2UoZnVuY3Rpb24gKGVkZ2UsIGluZGV4KSB7CiAgICB2YXIgY3VydmVuZXNzID0genJVdGlsLnJldHJpZXZlMyhlZGdlLmdldE1vZGVsKCkuZ2V0KCdsaW5lU3R5bGUuY3VydmVuZXNzJyksIGdldEN1cnZlbmVzc0ZvckVkZ2UoZWRnZSwgc2VyaWVzTW9kZWwsIGluZGV4KSwgMCk7CiAgICB2YXIgcDEgPSB2ZWMyLmNsb25lKGVkZ2Uubm9kZTEuZ2V0TGF5b3V0KCkpOwogICAgdmFyIHAyID0gdmVjMi5jbG9uZShlZGdlLm5vZGUyLmdldExheW91dCgpKTsKICAgIHZhciBjcDE7CiAgICB2YXIgeDEyID0gKHAxWzBdICsgcDJbMF0pIC8gMjsKICAgIHZhciB5MTIgPSAocDFbMV0gKyBwMlsxXSkgLyAyOwoKICAgIGlmICgrY3VydmVuZXNzKSB7CiAgICAgIGN1cnZlbmVzcyAqPSAzOwogICAgICBjcDEgPSBbY3ggKiBjdXJ2ZW5lc3MgKyB4MTIgKiAoMSAtIGN1cnZlbmVzcyksIGN5ICogY3VydmVuZXNzICsgeTEyICogKDEgLSBjdXJ2ZW5lc3MpXTsKICAgIH0KCiAgICBlZGdlLnNldExheW91dChbcDEsIHAyLCBjcDFdKTsKICB9KTsKfQoKdmFyIF9sYXlvdXROb2Rlc0Jhc2VkT24gPSB7CiAgdmFsdWU6IGZ1bmN0aW9uIHZhbHVlKHNlcmllc01vZGVsLCBjb29yZFN5cywgZ3JhcGgsIG5vZGVEYXRhLCByLCBjeCwgY3ksIGNvdW50KSB7CiAgICB2YXIgYW5nbGUgPSAwOwogICAgdmFyIHN1bSA9IG5vZGVEYXRhLmdldFN1bSgndmFsdWUnKTsKICAgIHZhciB1bml0QW5nbGUgPSBNYXRoLlBJICogMiAvIChzdW0gfHwgY291bnQpOwogICAgZ3JhcGguZWFjaE5vZGUoZnVuY3Rpb24gKG5vZGUpIHsKICAgICAgdmFyIHZhbHVlID0gbm9kZS5nZXRWYWx1ZSgndmFsdWUnKTsKICAgICAgdmFyIHJhZGlhbkhhbGYgPSB1bml0QW5nbGUgKiAoc3VtID8gdmFsdWUgOiAxKSAvIDI7CiAgICAgIGFuZ2xlICs9IHJhZGlhbkhhbGY7CiAgICAgIG5vZGUuc2V0TGF5b3V0KFtyICogTWF0aC5jb3MoYW5nbGUpICsgY3gsIHIgKiBNYXRoLnNpbihhbmdsZSkgKyBjeV0pOwogICAgICBhbmdsZSArPSByYWRpYW5IYWxmOwogICAgfSk7CiAgfSwKICBzeW1ib2xTaXplOiBmdW5jdGlvbiBzeW1ib2xTaXplKHNlcmllc01vZGVsLCBjb29yZFN5cywgZ3JhcGgsIG5vZGVEYXRhLCByLCBjeCwgY3ksIGNvdW50KSB7CiAgICB2YXIgc3VtUmFkaWFuID0gMDsKICAgIF9zeW1ib2xSYWRpYW5zSGFsZi5sZW5ndGggPSBjb3VudDsKICAgIHZhciBub2RlU2NhbGUgPSBnZXROb2RlR2xvYmFsU2NhbGUoc2VyaWVzTW9kZWwpOwogICAgZ3JhcGguZWFjaE5vZGUoZnVuY3Rpb24gKG5vZGUpIHsKICAgICAgdmFyIHN5bWJvbFNpemUgPSBnZXRTeW1ib2xTaXplKG5vZGUpOyAvLyBOb3JtYWxseSB0aGlzIGNhc2Ugd2lsbCBub3QgaGFwcGVuLCBidXQgd2Ugc3RpbGwgYWRkCiAgICAgIC8vIHNvbWUgdGhlIGRlZmVuc2l2ZSBjb2RlICgycHggaXMgYW4gYXJiaXRyYXJ5IHZhbHVlKS4KCiAgICAgIGlzTmFOKHN5bWJvbFNpemUpICYmIChzeW1ib2xTaXplID0gMik7CiAgICAgIHN5bWJvbFNpemUgPCAwICYmIChzeW1ib2xTaXplID0gMCk7CiAgICAgIHN5bWJvbFNpemUgKj0gbm9kZVNjYWxlOwogICAgICB2YXIgc3ltYm9sUmFkaWFuSGFsZiA9IE1hdGguYXNpbihzeW1ib2xTaXplIC8gMiAvIHIpOyAvLyB3aGVuIGBzeW1ib2xTaXplIC8gMmAgaXMgYmlnZ2VyIHRoYW4gYHJgLgoKICAgICAgaXNOYU4oc3ltYm9sUmFkaWFuSGFsZikgJiYgKHN5bWJvbFJhZGlhbkhhbGYgPSBQSSAvIDIpOwogICAgICBfc3ltYm9sUmFkaWFuc0hhbGZbbm9kZS5kYXRhSW5kZXhdID0gc3ltYm9sUmFkaWFuSGFsZjsKICAgICAgc3VtUmFkaWFuICs9IHN5bWJvbFJhZGlhbkhhbGYgKiAyOwogICAgfSk7CiAgICB2YXIgaGFsZlJlbWFpblJhZGlhbiA9ICgyICogUEkgLSBzdW1SYWRpYW4pIC8gY291bnQgLyAyOwogICAgdmFyIGFuZ2xlID0gMDsKICAgIGdyYXBoLmVhY2hOb2RlKGZ1bmN0aW9uIChub2RlKSB7CiAgICAgIHZhciByYWRpYW5IYWxmID0gaGFsZlJlbWFpblJhZGlhbiArIF9zeW1ib2xSYWRpYW5zSGFsZltub2RlLmRhdGFJbmRleF07CiAgICAgIGFuZ2xlICs9IHJhZGlhbkhhbGY7CiAgICAgIG5vZGUuc2V0TGF5b3V0KFtyICogTWF0aC5jb3MoYW5nbGUpICsgY3gsIHIgKiBNYXRoLnNpbihhbmdsZSkgKyBjeV0pOwogICAgICBhbmdsZSArPSByYWRpYW5IYWxmOwogICAgfSk7CiAgfQp9OwpleHBvcnRzLmNpcmN1bGFyTGF5b3V0ID0gY2lyY3VsYXJMYXlvdXQ7"},{"version":3,"sources":["/Users/id-repair/Documents/SEOL/4c-dashboard/node_modules/echarts/lib/chart/graph/circularLayoutHelper.js"],"names":["vec2","require","_graphHelper","getSymbolSize","getNodeGlobalScale","zrUtil","_multipleGraphEdgeHelper","getCurvenessForEdge","PI","Math","_symbolRadiansHalf","circularLayout","seriesModel","basedOn","coordSys","coordinateSystem","type","rect","getBoundingRect","nodeData","getData","graph","cx","width","x","cy","height","y","r","min","count","setLayout","_layoutNodesBasedOn","eachEdge","edge","index","curveness","retrieve3","getModel","get","p1","clone","node1","getLayout","p2","node2","cp1","x12","y12","value","angle","sum","getSum","unitAngle","eachNode","node","getValue","radianHalf","cos","sin","symbolSize","sumRadian","length","nodeScale","isNaN","symbolRadianHalf","asin","dataIndex","halfRemainRadian","exports"],"mappings":"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","sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar vec2 = require(\"zrender/lib/core/vector\");\n\nvar _graphHelper = require(\"./graphHelper\");\n\nvar getSymbolSize = _graphHelper.getSymbolSize;\nvar getNodeGlobalScale = _graphHelper.getNodeGlobalScale;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _multipleGraphEdgeHelper = require(\"../helper/multipleGraphEdgeHelper\");\n\nvar getCurvenessForEdge = _multipleGraphEdgeHelper.getCurvenessForEdge;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar PI = Math.PI;\nvar _symbolRadiansHalf = [];\n/**\n * `basedOn` can be:\n * 'value':\n *     This layout is not accurate and have same bad case. For example,\n *     if the min value is very smaller than the max value, the nodes\n *     with the min value probably overlap even though there is enough\n *     space to layout them. So we only use this approach in the as the\n *     init layout of the force layout.\n *     FIXME\n *     Probably we do not need this method any more but use\n *     `basedOn: 'symbolSize'` in force layout if\n *     delay its init operations to GraphView.\n * 'symbolSize':\n *     This approach work only if all of the symbol size calculated.\n *     That is, the progressive rendering is not applied to graph.\n *     FIXME\n *     If progressive rendering is applied to graph some day,\n *     probably we have to use `basedOn: 'value'`.\n *\n * @param {module:echarts/src/model/Series} seriesModel\n * @param {string} basedOn 'value' or 'symbolSize'\n */\n\nfunction circularLayout(seriesModel, basedOn) {\n  var coordSys = seriesModel.coordinateSystem;\n\n  if (coordSys && coordSys.type !== 'view') {\n    return;\n  }\n\n  var rect = coordSys.getBoundingRect();\n  var nodeData = seriesModel.getData();\n  var graph = nodeData.graph;\n  var cx = rect.width / 2 + rect.x;\n  var cy = rect.height / 2 + rect.y;\n  var r = Math.min(rect.width, rect.height) / 2;\n  var count = nodeData.count();\n  nodeData.setLayout({\n    cx: cx,\n    cy: cy\n  });\n\n  if (!count) {\n    return;\n  }\n\n  _layoutNodesBasedOn[basedOn](seriesModel, coordSys, graph, nodeData, r, cx, cy, count);\n\n  graph.eachEdge(function (edge, index) {\n    var curveness = zrUtil.retrieve3(edge.getModel().get('lineStyle.curveness'), getCurvenessForEdge(edge, seriesModel, index), 0);\n    var p1 = vec2.clone(edge.node1.getLayout());\n    var p2 = vec2.clone(edge.node2.getLayout());\n    var cp1;\n    var x12 = (p1[0] + p2[0]) / 2;\n    var y12 = (p1[1] + p2[1]) / 2;\n\n    if (+curveness) {\n      curveness *= 3;\n      cp1 = [cx * curveness + x12 * (1 - curveness), cy * curveness + y12 * (1 - curveness)];\n    }\n\n    edge.setLayout([p1, p2, cp1]);\n  });\n}\n\nvar _layoutNodesBasedOn = {\n  value: function (seriesModel, coordSys, graph, nodeData, r, cx, cy, count) {\n    var angle = 0;\n    var sum = nodeData.getSum('value');\n    var unitAngle = Math.PI * 2 / (sum || count);\n    graph.eachNode(function (node) {\n      var value = node.getValue('value');\n      var radianHalf = unitAngle * (sum ? value : 1) / 2;\n      angle += radianHalf;\n      node.setLayout([r * Math.cos(angle) + cx, r * Math.sin(angle) + cy]);\n      angle += radianHalf;\n    });\n  },\n  symbolSize: function (seriesModel, coordSys, graph, nodeData, r, cx, cy, count) {\n    var sumRadian = 0;\n    _symbolRadiansHalf.length = count;\n    var nodeScale = getNodeGlobalScale(seriesModel);\n    graph.eachNode(function (node) {\n      var symbolSize = getSymbolSize(node); // Normally this case will not happen, but we still add\n      // some the defensive code (2px is an arbitrary value).\n\n      isNaN(symbolSize) && (symbolSize = 2);\n      symbolSize < 0 && (symbolSize = 0);\n      symbolSize *= nodeScale;\n      var symbolRadianHalf = Math.asin(symbolSize / 2 / r); // when `symbolSize / 2` is bigger than `r`.\n\n      isNaN(symbolRadianHalf) && (symbolRadianHalf = PI / 2);\n      _symbolRadiansHalf[node.dataIndex] = symbolRadianHalf;\n      sumRadian += symbolRadianHalf * 2;\n    });\n    var halfRemainRadian = (2 * PI - sumRadian) / count / 2;\n    var angle = 0;\n    graph.eachNode(function (node) {\n      var radianHalf = halfRemainRadian + _symbolRadiansHalf[node.dataIndex];\n      angle += radianHalf;\n      node.setLayout([r * Math.cos(angle) + cx, r * Math.sin(angle) + cy]);\n      angle += radianHalf;\n    });\n  }\n};\nexports.circularLayout = circularLayout;"]}]}