{"remainingRequest":"/Users/id-repair/Documents/SEOL/4c-dashboard/node_modules/babel-loader/lib/index.js!/Users/id-repair/Documents/SEOL/4c-dashboard/node_modules/echarts/lib/chart/heatmap/HeatmapLayer.js","dependencies":[{"path":"/Users/id-repair/Documents/SEOL/4c-dashboard/node_modules/echarts/lib/chart/heatmap/HeatmapLayer.js","mtime":499162500000},{"path":"/Users/id-repair/Documents/SEOL/4c-dashboard/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/id-repair/Documents/SEOL/4c-dashboard/node_modules/babel-loader/lib/index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/id-repair/Documents/SEOL/4c-dashboard/node_modules/echarts/lib/chart/heatmap/HeatmapLayer.js"],"names":["zrUtil","require","GRADIENT_LEVELS","Heatmap","canvas","createCanvas","blurSize","pointSize","maxOpacity","minOpacity","_gradientPixels","prototype","update","data","width","height","normalize","colorFunc","isInRange","brush","_getBrush","gradientInRange","_getGradient","gradientOutOfRange","r","ctx","getContext","len","length","i","p","x","y","value","alpha","globalAlpha","drawImage","imageData","getImageData","pixels","offset","pixelLen","diffOpacity","gradientOffset","Math","floor","gradient","putImageData","brushCanvas","_brushCanvas","d","clearRect","shadowOffsetX","shadowBlur","shadowColor","beginPath","arc","PI","closePath","fill","state","gradientPixels","pixelsSingleState","Uint8ClampedArray","color","off","_default","module","exports"],"mappings":"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","sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/* global Uint8ClampedArray */\nvar GRADIENT_LEVELS = 256;\n/**\n * Heatmap Chart\n *\n * @class\n */\n\nfunction Heatmap() {\n  var canvas = zrUtil.createCanvas();\n  this.canvas = canvas;\n  this.blurSize = 30;\n  this.pointSize = 20;\n  this.maxOpacity = 1;\n  this.minOpacity = 0;\n  this._gradientPixels = {};\n}\n\nHeatmap.prototype = {\n  /**\n   * Renders Heatmap and returns the rendered canvas\n   * @param {Array} data array of data, each has x, y, value\n   * @param {number} width canvas width\n   * @param {number} height canvas height\n   */\n  update: function (data, width, height, normalize, colorFunc, isInRange) {\n    var brush = this._getBrush();\n\n    var gradientInRange = this._getGradient(data, colorFunc, 'inRange');\n\n    var gradientOutOfRange = this._getGradient(data, colorFunc, 'outOfRange');\n\n    var r = this.pointSize + this.blurSize;\n    var canvas = this.canvas;\n    var ctx = canvas.getContext('2d');\n    var len = data.length;\n    canvas.width = width;\n    canvas.height = height;\n\n    for (var i = 0; i < len; ++i) {\n      var p = data[i];\n      var x = p[0];\n      var y = p[1];\n      var value = p[2]; // calculate alpha using value\n\n      var alpha = normalize(value); // draw with the circle brush with alpha\n\n      ctx.globalAlpha = alpha;\n      ctx.drawImage(brush, x - r, y - r);\n    }\n\n    if (!canvas.width || !canvas.height) {\n      // Avoid \"Uncaught DOMException: Failed to execute 'getImageData' on\n      // 'CanvasRenderingContext2D': The source height is 0.\"\n      return canvas;\n    } // colorize the canvas using alpha value and set with gradient\n\n\n    var imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n    var pixels = imageData.data;\n    var offset = 0;\n    var pixelLen = pixels.length;\n    var minOpacity = this.minOpacity;\n    var maxOpacity = this.maxOpacity;\n    var diffOpacity = maxOpacity - minOpacity;\n\n    while (offset < pixelLen) {\n      var alpha = pixels[offset + 3] / 256;\n      var gradientOffset = Math.floor(alpha * (GRADIENT_LEVELS - 1)) * 4; // Simple optimize to ignore the empty data\n\n      if (alpha > 0) {\n        var gradient = isInRange(alpha) ? gradientInRange : gradientOutOfRange; // Any alpha > 0 will be mapped to [minOpacity, maxOpacity]\n\n        alpha > 0 && (alpha = alpha * diffOpacity + minOpacity);\n        pixels[offset++] = gradient[gradientOffset];\n        pixels[offset++] = gradient[gradientOffset + 1];\n        pixels[offset++] = gradient[gradientOffset + 2];\n        pixels[offset++] = gradient[gradientOffset + 3] * alpha * 256;\n      } else {\n        offset += 4;\n      }\n    }\n\n    ctx.putImageData(imageData, 0, 0);\n    return canvas;\n  },\n\n  /**\n   * get canvas of a black circle brush used for canvas to draw later\n   * @private\n   * @returns {Object} circle brush canvas\n   */\n  _getBrush: function () {\n    var brushCanvas = this._brushCanvas || (this._brushCanvas = zrUtil.createCanvas()); // set brush size\n\n    var r = this.pointSize + this.blurSize;\n    var d = r * 2;\n    brushCanvas.width = d;\n    brushCanvas.height = d;\n    var ctx = brushCanvas.getContext('2d');\n    ctx.clearRect(0, 0, d, d); // in order to render shadow without the distinct circle,\n    // draw the distinct circle in an invisible place,\n    // and use shadowOffset to draw shadow in the center of the canvas\n\n    ctx.shadowOffsetX = d;\n    ctx.shadowBlur = this.blurSize; // draw the shadow in black, and use alpha and shadow blur to generate\n    // color in color map\n\n    ctx.shadowColor = '#000'; // draw circle in the left to the canvas\n\n    ctx.beginPath();\n    ctx.arc(-r, r, this.pointSize, 0, Math.PI * 2, true);\n    ctx.closePath();\n    ctx.fill();\n    return brushCanvas;\n  },\n\n  /**\n   * get gradient color map\n   * @private\n   */\n  _getGradient: function (data, colorFunc, state) {\n    var gradientPixels = this._gradientPixels;\n    var pixelsSingleState = gradientPixels[state] || (gradientPixels[state] = new Uint8ClampedArray(256 * 4));\n    var color = [0, 0, 0, 0];\n    var off = 0;\n\n    for (var i = 0; i < 256; i++) {\n      colorFunc[state](i / 255, true, color);\n      pixelsSingleState[off++] = color[0];\n      pixelsSingleState[off++] = color[1];\n      pixelsSingleState[off++] = color[2];\n      pixelsSingleState[off++] = color[3];\n    }\n\n    return pixelsSingleState;\n  }\n};\nvar _default = Heatmap;\nmodule.exports = _default;"]}]}