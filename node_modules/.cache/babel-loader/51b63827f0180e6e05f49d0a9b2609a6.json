{"remainingRequest":"/Users/id-repair/Documents/SEOL/4c-dashboard/node_modules/babel-loader/lib/index.js!/Users/id-repair/Documents/SEOL/4c-dashboard/node_modules/echarts/lib/chart/tree/traversalHelper.js","dependencies":[{"path":"/Users/id-repair/Documents/SEOL/4c-dashboard/node_modules/echarts/lib/chart/tree/traversalHelper.js","mtime":499162500000},{"path":"/Users/id-repair/Documents/SEOL/4c-dashboard/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/id-repair/Documents/SEOL/4c-dashboard/node_modules/babel-loader/lib/index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:LyoKKiBMaWNlbnNlZCB0byB0aGUgQXBhY2hlIFNvZnR3YXJlIEZvdW5kYXRpb24gKEFTRikgdW5kZXIgb25lCiogb3IgbW9yZSBjb250cmlidXRvciBsaWNlbnNlIGFncmVlbWVudHMuICBTZWUgdGhlIE5PVElDRSBmaWxlCiogZGlzdHJpYnV0ZWQgd2l0aCB0aGlzIHdvcmsgZm9yIGFkZGl0aW9uYWwgaW5mb3JtYXRpb24KKiByZWdhcmRpbmcgY29weXJpZ2h0IG93bmVyc2hpcC4gIFRoZSBBU0YgbGljZW5zZXMgdGhpcyBmaWxlCiogdG8geW91IHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZQoqICJMaWNlbnNlIik7IHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2UKKiB3aXRoIHRoZSBMaWNlbnNlLiAgWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0CioKKiAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMAoqCiogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLAoqIHNvZnR3YXJlIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuCiogIkFTIElTIiBCQVNJUywgV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZCiogS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC4gIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlCiogc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZCBsaW1pdGF0aW9ucwoqIHVuZGVyIHRoZSBMaWNlbnNlLgoqLwoKLyoKKiBMaWNlbnNlZCB0byB0aGUgQXBhY2hlIFNvZnR3YXJlIEZvdW5kYXRpb24gKEFTRikgdW5kZXIgb25lCiogb3IgbW9yZSBjb250cmlidXRvciBsaWNlbnNlIGFncmVlbWVudHMuICBTZWUgdGhlIE5PVElDRSBmaWxlCiogZGlzdHJpYnV0ZWQgd2l0aCB0aGlzIHdvcmsgZm9yIGFkZGl0aW9uYWwgaW5mb3JtYXRpb24KKiByZWdhcmRpbmcgY29weXJpZ2h0IG93bmVyc2hpcC4gIFRoZSBBU0YgbGljZW5zZXMgdGhpcyBmaWxlCiogdG8geW91IHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZQoqICJMaWNlbnNlIik7IHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2UKKiB3aXRoIHRoZSBMaWNlbnNlLiAgWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0CioKKiAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMAoqCiogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLAoqIHNvZnR3YXJlIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuCiogIkFTIElTIiBCQVNJUywgV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZCiogS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC4gIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlCiogc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZCBsaW1pdGF0aW9ucwoqIHVuZGVyIHRoZSBMaWNlbnNlLgoqLwoKLyoqCiAqIFRyYXZlcnNlIHRoZSB0cmVlIGZyb20gYm90dG9tIHRvIHRvcCBhbmQgZG8gc29tZXRoaW5nCiAqIEBwYXJhbSAge21vZHVsZTplY2hhcnRzL2RhdGEvVHJlZX5UcmVlTm9kZX0gcm9vdCAgVGhlIHJlYWwgcm9vdCBvZiB0aGUgdHJlZQogKiBAcGFyYW0gIHtGdW5jdGlvbn0gY2FsbGJhY2sKICovCmZ1bmN0aW9uIGVhY2hBZnRlcihyb290LCBjYWxsYmFjaywgc2VwYXJhdGlvbikgewogIHZhciBub2RlcyA9IFtyb290XTsKICB2YXIgbmV4dCA9IFtdOwogIHZhciBub2RlOwoKICB3aGlsZSAobm9kZSA9IG5vZGVzLnBvcCgpKSB7CiAgICAvLyBqc2hpbnQgaWdub3JlOmxpbmUKICAgIG5leHQucHVzaChub2RlKTsKCiAgICBpZiAobm9kZS5pc0V4cGFuZCkgewogICAgICB2YXIgY2hpbGRyZW4gPSBub2RlLmNoaWxkcmVuOwoKICAgICAgaWYgKGNoaWxkcmVuLmxlbmd0aCkgewogICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgY2hpbGRyZW4ubGVuZ3RoOyBpKyspIHsKICAgICAgICAgIG5vZGVzLnB1c2goY2hpbGRyZW5baV0pOwogICAgICAgIH0KICAgICAgfQogICAgfQogIH0KCiAgd2hpbGUgKG5vZGUgPSBuZXh0LnBvcCgpKSB7CiAgICAvLyBqc2hpbnQgaWdub3JlOmxpbmUKICAgIGNhbGxiYWNrKG5vZGUsIHNlcGFyYXRpb24pOwogIH0KfQovKioKICogVHJhdmVyc2UgdGhlIHRyZWUgZnJvbSB0b3AgdG8gYm90dG9tIGFuZCBkbyBzb21ldGhpbmcKICogQHBhcmFtICB7bW9kdWxlOmVjaGFydHMvZGF0YS9UcmVlflRyZWVOb2RlfSByb290ICBUaGUgcmVhbCByb290IG9mIHRoZSB0cmVlCiAqIEBwYXJhbSAge0Z1bmN0aW9ufSBjYWxsYmFjawogKi8KCgpmdW5jdGlvbiBlYWNoQmVmb3JlKHJvb3QsIGNhbGxiYWNrKSB7CiAgdmFyIG5vZGVzID0gW3Jvb3RdOwogIHZhciBub2RlOwoKICB3aGlsZSAobm9kZSA9IG5vZGVzLnBvcCgpKSB7CiAgICAvLyBqc2hpbnQgaWdub3JlOmxpbmUKICAgIGNhbGxiYWNrKG5vZGUpOwoKICAgIGlmIChub2RlLmlzRXhwYW5kKSB7CiAgICAgIHZhciBjaGlsZHJlbiA9IG5vZGUuY2hpbGRyZW47CgogICAgICBpZiAoY2hpbGRyZW4ubGVuZ3RoKSB7CiAgICAgICAgZm9yICh2YXIgaSA9IGNoaWxkcmVuLmxlbmd0aCAtIDE7IGkgPj0gMDsgaS0tKSB7CiAgICAgICAgICBub2Rlcy5wdXNoKGNoaWxkcmVuW2ldKTsKICAgICAgICB9CiAgICAgIH0KICAgIH0KICB9Cn0KCmV4cG9ydHMuZWFjaEFmdGVyID0gZWFjaEFmdGVyOwpleHBvcnRzLmVhY2hCZWZvcmUgPSBlYWNoQmVmb3JlOw=="},{"version":3,"sources":["/Users/id-repair/Documents/SEOL/4c-dashboard/node_modules/echarts/lib/chart/tree/traversalHelper.js"],"names":["eachAfter","root","callback","separation","nodes","next","node","pop","push","isExpand","children","length","i","eachBefore","exports"],"mappings":"AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAASA,SAAT,CAAmBC,IAAnB,EAAyBC,QAAzB,EAAmCC,UAAnC,EAA+C;AAC7C,MAAIC,KAAK,GAAG,CAACH,IAAD,CAAZ;AACA,MAAII,IAAI,GAAG,EAAX;AACA,MAAIC,IAAJ;;AAEA,SAAOA,IAAI,GAAGF,KAAK,CAACG,GAAN,EAAd,EAA2B;AACzB;AACAF,IAAAA,IAAI,CAACG,IAAL,CAAUF,IAAV;;AAEA,QAAIA,IAAI,CAACG,QAAT,EAAmB;AACjB,UAAIC,QAAQ,GAAGJ,IAAI,CAACI,QAApB;;AAEA,UAAIA,QAAQ,CAACC,MAAb,EAAqB;AACnB,aAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,QAAQ,CAACC,MAA7B,EAAqCC,CAAC,EAAtC,EAA0C;AACxCR,UAAAA,KAAK,CAACI,IAAN,CAAWE,QAAQ,CAACE,CAAD,CAAnB;AACD;AACF;AACF;AACF;;AAED,SAAON,IAAI,GAAGD,IAAI,CAACE,GAAL,EAAd,EAA0B;AACxB;AACAL,IAAAA,QAAQ,CAACI,IAAD,EAAOH,UAAP,CAAR;AACD;AACF;AACD;AACA;AACA;AACA;AACA;;;AAGA,SAASU,UAAT,CAAoBZ,IAApB,EAA0BC,QAA1B,EAAoC;AAClC,MAAIE,KAAK,GAAG,CAACH,IAAD,CAAZ;AACA,MAAIK,IAAJ;;AAEA,SAAOA,IAAI,GAAGF,KAAK,CAACG,GAAN,EAAd,EAA2B;AACzB;AACAL,IAAAA,QAAQ,CAACI,IAAD,CAAR;;AAEA,QAAIA,IAAI,CAACG,QAAT,EAAmB;AACjB,UAAIC,QAAQ,GAAGJ,IAAI,CAACI,QAApB;;AAEA,UAAIA,QAAQ,CAACC,MAAb,EAAqB;AACnB,aAAK,IAAIC,CAAC,GAAGF,QAAQ,CAACC,MAAT,GAAkB,CAA/B,EAAkCC,CAAC,IAAI,CAAvC,EAA0CA,CAAC,EAA3C,EAA+C;AAC7CR,UAAAA,KAAK,CAACI,IAAN,CAAWE,QAAQ,CAACE,CAAD,CAAnB;AACD;AACF;AACF;AACF;AACF;;AAEDE,OAAO,CAACd,SAAR,GAAoBA,SAApB;AACAc,OAAO,CAACD,UAAR,GAAqBA,UAArB","sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Traverse the tree from bottom to top and do something\n * @param  {module:echarts/data/Tree~TreeNode} root  The real root of the tree\n * @param  {Function} callback\n */\nfunction eachAfter(root, callback, separation) {\n  var nodes = [root];\n  var next = [];\n  var node;\n\n  while (node = nodes.pop()) {\n    // jshint ignore:line\n    next.push(node);\n\n    if (node.isExpand) {\n      var children = node.children;\n\n      if (children.length) {\n        for (var i = 0; i < children.length; i++) {\n          nodes.push(children[i]);\n        }\n      }\n    }\n  }\n\n  while (node = next.pop()) {\n    // jshint ignore:line\n    callback(node, separation);\n  }\n}\n/**\n * Traverse the tree from top to bottom and do something\n * @param  {module:echarts/data/Tree~TreeNode} root  The real root of the tree\n * @param  {Function} callback\n */\n\n\nfunction eachBefore(root, callback) {\n  var nodes = [root];\n  var node;\n\n  while (node = nodes.pop()) {\n    // jshint ignore:line\n    callback(node);\n\n    if (node.isExpand) {\n      var children = node.children;\n\n      if (children.length) {\n        for (var i = children.length - 1; i >= 0; i--) {\n          nodes.push(children[i]);\n        }\n      }\n    }\n  }\n}\n\nexports.eachAfter = eachAfter;\nexports.eachBefore = eachBefore;"]}]}