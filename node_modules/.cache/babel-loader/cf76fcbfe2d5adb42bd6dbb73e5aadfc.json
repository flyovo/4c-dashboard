{"remainingRequest":"/Users/id-repair/Documents/SEOL/4c-dashboard/node_modules/babel-loader/lib/index.js!/Users/id-repair/Documents/SEOL/4c-dashboard/node_modules/echarts/lib/chart/helper/LargeLineDraw.js","dependencies":[{"path":"/Users/id-repair/Documents/SEOL/4c-dashboard/node_modules/echarts/lib/chart/helper/LargeLineDraw.js","mtime":499162500000},{"path":"/Users/id-repair/Documents/SEOL/4c-dashboard/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/id-repair/Documents/SEOL/4c-dashboard/node_modules/babel-loader/lib/index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/id-repair/Documents/SEOL/4c-dashboard/node_modules/echarts/lib/chart/helper/LargeLineDraw.js"],"names":["graphic","require","IncrementalDisplayable","lineContain","quadraticContain","LargeLineShape","extendShape","shape","polyline","curveness","segs","buildPath","path","i","length","count","moveTo","k","lineTo","x0","y0","x1","y1","x2","y2","quadraticCurveTo","findDataIndex","x","y","dataIndex","containStroke","LargeLineDraw","group","Group","largeLineProto","prototype","isPersistent","_incremental","updateData","data","removeAll","lineEl","rectHover","cursor","setShape","getLayout","_setCommon","add","incrementalPrepareUpdate","_clearIncremental","silent","incrementalUpdate","taskParams","__startIndex","start","addDisplayable","remove","isIncremental","hostModel","get","useStyle","getModel","getLineStyle","style","strokeNoScale","visualColor","getVisual","setStyle","seriesIndex","on","e","offsetX","offsetY","incremental","clearDisplaybles","_default","module","exports"],"mappings":"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","sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar graphic = require(\"../../util/graphic\");\n\nvar IncrementalDisplayable = require(\"zrender/lib/graphic/IncrementalDisplayable\");\n\nvar lineContain = require(\"zrender/lib/contain/line\");\n\nvar quadraticContain = require(\"zrender/lib/contain/quadratic\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// TODO Batch by color\nvar LargeLineShape = graphic.extendShape({\n  shape: {\n    polyline: false,\n    curveness: 0,\n    segs: []\n  },\n  buildPath: function (path, shape) {\n    var segs = shape.segs;\n    var curveness = shape.curveness;\n\n    if (shape.polyline) {\n      for (var i = 0; i < segs.length;) {\n        var count = segs[i++];\n\n        if (count > 0) {\n          path.moveTo(segs[i++], segs[i++]);\n\n          for (var k = 1; k < count; k++) {\n            path.lineTo(segs[i++], segs[i++]);\n          }\n        }\n      }\n    } else {\n      for (var i = 0; i < segs.length;) {\n        var x0 = segs[i++];\n        var y0 = segs[i++];\n        var x1 = segs[i++];\n        var y1 = segs[i++];\n        path.moveTo(x0, y0);\n\n        if (curveness > 0) {\n          var x2 = (x0 + x1) / 2 - (y0 - y1) * curveness;\n          var y2 = (y0 + y1) / 2 - (x1 - x0) * curveness;\n          path.quadraticCurveTo(x2, y2, x1, y1);\n        } else {\n          path.lineTo(x1, y1);\n        }\n      }\n    }\n  },\n  findDataIndex: function (x, y) {\n    var shape = this.shape;\n    var segs = shape.segs;\n    var curveness = shape.curveness;\n\n    if (shape.polyline) {\n      var dataIndex = 0;\n\n      for (var i = 0; i < segs.length;) {\n        var count = segs[i++];\n\n        if (count > 0) {\n          var x0 = segs[i++];\n          var y0 = segs[i++];\n\n          for (var k = 1; k < count; k++) {\n            var x1 = segs[i++];\n            var y1 = segs[i++];\n\n            if (lineContain.containStroke(x0, y0, x1, y1)) {\n              return dataIndex;\n            }\n          }\n        }\n\n        dataIndex++;\n      }\n    } else {\n      var dataIndex = 0;\n\n      for (var i = 0; i < segs.length;) {\n        var x0 = segs[i++];\n        var y0 = segs[i++];\n        var x1 = segs[i++];\n        var y1 = segs[i++];\n\n        if (curveness > 0) {\n          var x2 = (x0 + x1) / 2 - (y0 - y1) * curveness;\n          var y2 = (y0 + y1) / 2 - (x1 - x0) * curveness;\n\n          if (quadraticContain.containStroke(x0, y0, x2, y2, x1, y1)) {\n            return dataIndex;\n          }\n        } else {\n          if (lineContain.containStroke(x0, y0, x1, y1)) {\n            return dataIndex;\n          }\n        }\n\n        dataIndex++;\n      }\n    }\n\n    return -1;\n  }\n});\n\nfunction LargeLineDraw() {\n  this.group = new graphic.Group();\n}\n\nvar largeLineProto = LargeLineDraw.prototype;\n\nlargeLineProto.isPersistent = function () {\n  return !this._incremental;\n};\n/**\n * Update symbols draw by new data\n * @param {module:echarts/data/List} data\n */\n\n\nlargeLineProto.updateData = function (data) {\n  this.group.removeAll();\n  var lineEl = new LargeLineShape({\n    rectHover: true,\n    cursor: 'default'\n  });\n  lineEl.setShape({\n    segs: data.getLayout('linesPoints')\n  });\n\n  this._setCommon(lineEl, data); // Add back\n\n\n  this.group.add(lineEl);\n  this._incremental = null;\n};\n/**\n * @override\n */\n\n\nlargeLineProto.incrementalPrepareUpdate = function (data) {\n  this.group.removeAll();\n\n  this._clearIncremental();\n\n  if (data.count() > 5e5) {\n    if (!this._incremental) {\n      this._incremental = new IncrementalDisplayable({\n        silent: true\n      });\n    }\n\n    this.group.add(this._incremental);\n  } else {\n    this._incremental = null;\n  }\n};\n/**\n * @override\n */\n\n\nlargeLineProto.incrementalUpdate = function (taskParams, data) {\n  var lineEl = new LargeLineShape();\n  lineEl.setShape({\n    segs: data.getLayout('linesPoints')\n  });\n\n  this._setCommon(lineEl, data, !!this._incremental);\n\n  if (!this._incremental) {\n    lineEl.rectHover = true;\n    lineEl.cursor = 'default';\n    lineEl.__startIndex = taskParams.start;\n    this.group.add(lineEl);\n  } else {\n    this._incremental.addDisplayable(lineEl, true);\n  }\n};\n/**\n * @override\n */\n\n\nlargeLineProto.remove = function () {\n  this._clearIncremental();\n\n  this._incremental = null;\n  this.group.removeAll();\n};\n\nlargeLineProto._setCommon = function (lineEl, data, isIncremental) {\n  var hostModel = data.hostModel;\n  lineEl.setShape({\n    polyline: hostModel.get('polyline'),\n    curveness: hostModel.get('lineStyle.curveness')\n  });\n  lineEl.useStyle(hostModel.getModel('lineStyle').getLineStyle());\n  lineEl.style.strokeNoScale = true;\n  var visualColor = data.getVisual('color');\n\n  if (visualColor) {\n    lineEl.setStyle('stroke', visualColor);\n  }\n\n  lineEl.setStyle('fill');\n\n  if (!isIncremental) {\n    // Enable tooltip\n    // PENDING May have performance issue when path is extremely large\n    lineEl.seriesIndex = hostModel.seriesIndex;\n    lineEl.on('mousemove', function (e) {\n      lineEl.dataIndex = null;\n      var dataIndex = lineEl.findDataIndex(e.offsetX, e.offsetY);\n\n      if (dataIndex > 0) {\n        // Provide dataIndex for tooltip\n        lineEl.dataIndex = dataIndex + lineEl.__startIndex;\n      }\n    });\n  }\n};\n\nlargeLineProto._clearIncremental = function () {\n  var incremental = this._incremental;\n\n  if (incremental) {\n    incremental.clearDisplaybles();\n  }\n};\n\nvar _default = LargeLineDraw;\nmodule.exports = _default;"]}]}