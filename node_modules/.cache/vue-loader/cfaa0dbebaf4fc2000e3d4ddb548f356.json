{"remainingRequest":"/Users/id-repair/Documents/SEOL/4c-dashboard/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/id-repair/Documents/SEOL/4c-dashboard/src/components/ChartToCsv/index.vue?vue&type=script&lang=ts&","dependencies":[{"path":"/Users/id-repair/Documents/SEOL/4c-dashboard/src/components/ChartToCsv/index.vue","mtime":1620600124101},{"path":"/Users/id-repair/Documents/SEOL/4c-dashboard/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/id-repair/Documents/SEOL/4c-dashboard/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/id-repair/Documents/SEOL/4c-dashboard/node_modules/ts-loader/index.js","mtime":499162500000},{"path":"/Users/id-repair/Documents/SEOL/4c-dashboard/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/id-repair/Documents/SEOL/4c-dashboard/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCmltcG9ydCB7IENvbXBvbmVudCwgUHJvcCwgVnVlIH0gZnJvbSAndnVlLXByb3BlcnR5LWRlY29yYXRvcicKaW1wb3J0IFhMU1ggZnJvbSAneGxzeCcKCkBDb21wb25lbnQoewogIG5hbWU6ICdDaGFydFRvQ3N2Jwp9KQpleHBvcnQgZGVmYXVsdCBjbGFzcyBleHRlbmRzIFZ1ZSB7CiAgQFByb3AoeyByZXF1aXJlZDogdHJ1ZSB9KSBwcml2YXRlIGNoYXJ0SXRlbXMhOiBhbnkKICBAUHJvcCh7IHJlcXVpcmVkOiB0cnVlIH0pIHByaXZhdGUgY2hhcnRUaXRsZSE6IHN0cmluZwoKICBwcml2YXRlIGl0ZW1zID0gW10KICBwcml2YXRlIHZpc2libGUgPSB0cnVlCiAgcHJpdmF0ZSByZWdleHBTcGVjaWFsID0gL1smL1xcIywrKCkkfiUnIjoqPzw+e318XS9nCiAgcHJpdmF0ZSByZWdleHBCbGFuayA9IC8oXHMpL2cKICBwcml2YXRlIGFzeW5jIG1ha2VDU1YoKSB7CiAgICBjb25zdCB2bSA9IHRoaXMKCiAgICAvLyBBIHdvcmtib29rIGlzIHRoZSBuYW1lIGdpdmVuIHRvIGFuIEV4Y2VsIGZpbGUKICAgIGNvbnN0IHdiID0gWExTWC51dGlscy5ib29rX25ldygpIC8vIG1ha2UgV29ya2Jvb2sgb2YgRXhjZWwKCiAgICAvLyBtYWtlIGRhdGEKICAgIC8vIGluaXRpYWxpemUgJiBTZXR0aW5nCiAgICBsZXQgd29ya3NoZWV0ID0gdGhpcy5jaGFydFRpdGxlLnJlcGxhY2UodGhpcy5yZWdleHBTcGVjaWFsLCAnLScpCgogICAgdGhpcy5pdGVtcyA9IFtdCgogICAgLy8gcGFyc2luZyB0YWJsZSBkYXRhCiAgICBpZiAodGhpcy5jaGFydEl0ZW1zLnNlcmllc0RhdGEpIHsKICAgICAgdGhpcy5pdGVtcyA9IHRoaXMuY2hhcnRJdGVtcy5zZXJpZXNEYXRhCiAgICB9IGVsc2UgaWYgKHRoaXMuY2hhcnRJdGVtcy54QXhpc0RhdGEpIHsKICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCB0aGlzLmNoYXJ0SXRlbXMueEF4aXNEYXRhLmxlbmd0aDsgaSsrKSB7CiAgICAgICAgbGV0IGl0ZW0gPSB7CiAgICAgICAgICBjYXRlZ29yeTogdGhpcy5jaGFydEl0ZW1zLnhBeGlzRGF0YVtpXQogICAgICAgIH0KICAgICAgICBmb3IgKGxldCBqID0gMDsgaiA8IHRoaXMuY2hhcnRJdGVtcy5sZWdlbmQubGVuZ3RoOyBqKyspIHsKICAgICAgICAgIGl0ZW1bdGhpcy5jaGFydEl0ZW1zLmxlZ2VuZFtqXV0gPSB0aGlzLmNoYXJ0SXRlbXMuc2VyaWVzW2pdLmRhdGFbaV0KICAgICAgICB9CiAgICAgICAgdGhpcy5pdGVtcy5wdXNoKGl0ZW0pCiAgICAgIH0KICAgIH0gZWxzZSB7CiAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgdGhpcy5jaGFydEl0ZW1zLnlBeGlzRGF0YS5sZW5ndGg7IGkrKykgewogICAgICAgIGxldCBpdGVtID0gewogICAgICAgICAgY2F0ZWdvcnk6IHRoaXMuY2hhcnRJdGVtcy55QXhpc0RhdGFbaV0KICAgICAgICB9CiAgICAgICAgZm9yIChsZXQgaiA9IDA7IGogPCB0aGlzLmNoYXJ0SXRlbXMubGVnZW5kLmxlbmd0aDsgaisrKSB7CiAgICAgICAgICBpdGVtW3RoaXMuY2hhcnRJdGVtcy5sZWdlbmRbal1dID0gdGhpcy5jaGFydEl0ZW1zLnNlcmllc1tqXS5kYXRhW2ldCiAgICAgICAgfQogICAgICAgIHRoaXMuaXRlbXMucHVzaChpdGVtKQogICAgICB9CiAgICB9CgogICAgLy8gZXhwb3J0IGpzb24gdG8gV29ya3NoZWV0IG9mIEV4Y2VsCiAgICBjb25zdCByZXBvcnRXUyA9IFhMU1gudXRpbHMuanNvbl90b19zaGVldCh0aGlzLml0ZW1zKQoKICAgIC8vIGFkZCBXb3Jrc2hlZXQgdG8gV29ya2Jvb2sKICAgIFhMU1gudXRpbHMuYm9va19hcHBlbmRfc2hlZXQod2IsIHJlcG9ydFdTLCB3b3Jrc2hlZXQpIC8vIHNoZWV0QU5hbWUgaXMgbmFtZSBvZiBXb3Jrc2hlZXQKCiAgICAvLyBleHBvcnQgRXhjZWwgZmlsZXMKICAgIC8vIFhMU1gud3JpdGVGaWxlKHdiLCBgWyR7dGhpcy5nZXREYXRlfV0ke3dvcmtzaGVldH0ueGxzeGApCgogICAgWExTWC53cml0ZUZpbGUod2IsIGAke3dvcmtzaGVldC5yZXBsYWNlKHRoaXMucmVnZXhwQmxhbmssICdfJyl9Lnhsc3hgKQogIH0KfQo="},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;AAOA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA","file":"index.vue","sourceRoot":"src/components/ChartToCsv","sourcesContent":["<template>\n  <div v-show=\"visible\" class=\"chart-to-csv\" @click=\"makeCSV\">\n    <svg-icon name=\"part03-s-file-csv\" class=\"chartCsvIcon\" />\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { Component, Prop, Vue } from 'vue-property-decorator'\nimport XLSX from 'xlsx'\n\n@Component({\n  name: 'ChartToCsv'\n})\nexport default class extends Vue {\n  @Prop({ required: true }) private chartItems!: any\n  @Prop({ required: true }) private chartTitle!: string\n\n  private items = []\n  private visible = true\n  private regexpSpecial = /[&/\\\\#,+()$~%'\":*?<>{}|]/g\n  private regexpBlank = /(\\s)/g\n  private async makeCSV() {\n    const vm = this\n\n    // A workbook is the name given to an Excel file\n    const wb = XLSX.utils.book_new() // make Workbook of Excel\n\n    // make data\n    // initialize & Setting\n    let worksheet = this.chartTitle.replace(this.regexpSpecial, '-')\n\n    this.items = []\n\n    // parsing table data\n    if (this.chartItems.seriesData) {\n      this.items = this.chartItems.seriesData\n    } else if (this.chartItems.xAxisData) {\n      for (let i = 0; i < this.chartItems.xAxisData.length; i++) {\n        let item = {\n          category: this.chartItems.xAxisData[i]\n        }\n        for (let j = 0; j < this.chartItems.legend.length; j++) {\n          item[this.chartItems.legend[j]] = this.chartItems.series[j].data[i]\n        }\n        this.items.push(item)\n      }\n    } else {\n      for (let i = 0; i < this.chartItems.yAxisData.length; i++) {\n        let item = {\n          category: this.chartItems.yAxisData[i]\n        }\n        for (let j = 0; j < this.chartItems.legend.length; j++) {\n          item[this.chartItems.legend[j]] = this.chartItems.series[j].data[i]\n        }\n        this.items.push(item)\n      }\n    }\n\n    // export json to Worksheet of Excel\n    const reportWS = XLSX.utils.json_to_sheet(this.items)\n\n    // add Worksheet to Workbook\n    XLSX.utils.book_append_sheet(wb, reportWS, worksheet) // sheetAName is name of Worksheet\n\n    // export Excel files\n    // XLSX.writeFile(wb, `[${this.getDate}]${worksheet}.xlsx`)\n\n    XLSX.writeFile(wb, `${worksheet.replace(this.regexpBlank, '_')}.xlsx`)\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.chart-to-csv {\n  position: absolute;\n  top: 20px;\n  right: 20px;\n  display: inline-block;\n  cursor: pointer;\n  z-index: 1;\n  :hover {\n    background: #d5dbe7;\n  }\n}\n\n.chart-to-csv .chartCsvIcon {\n  fill: #949494;\n  background: none;\n}\n</style>\n"]}]}