{"remainingRequest":"/Users/id-repair/Documents/SEOL/4c-dashboard/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/id-repair/Documents/SEOL/4c-dashboard/src/views/dev/icons/index.vue?vue&type=script&lang=ts&","dependencies":[{"path":"/Users/id-repair/Documents/SEOL/4c-dashboard/src/views/dev/icons/index.vue","mtime":1618208154000},{"path":"/Users/id-repair/Documents/SEOL/4c-dashboard/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/id-repair/Documents/SEOL/4c-dashboard/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/id-repair/Documents/SEOL/4c-dashboard/node_modules/ts-loader/index.js","mtime":499162500000},{"path":"/Users/id-repair/Documents/SEOL/4c-dashboard/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/id-repair/Documents/SEOL/4c-dashboard/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCmltcG9ydCB7IENvbXBvbmVudCwgVnVlIH0gZnJvbSAndnVlLXByb3BlcnR5LWRlY29yYXRvcicKaW1wb3J0IHsgaGFuZGxlQ2xpcGJvYXJkIH0gZnJvbSAnQC91dGlscy9jbGlwYm9hcmQnCmltcG9ydCBlbGVtZW50SWNvbnMgZnJvbSAnLi9lbGVtZW50LWljb25zJwppbXBvcnQgc3ZnSWNvbnMgZnJvbSAnLi9zdmctaWNvbnMnCgpAQ29tcG9uZW50KHsKICBuYW1lOiAnSWNvbnMnCn0pCmV4cG9ydCBkZWZhdWx0IGNsYXNzIGV4dGVuZHMgVnVlIHsKICBwcml2YXRlIHN2Z0ljb25zID0gc3ZnSWNvbnMKICBwcml2YXRlIGVsZW1lbnRJY29ucyA9IGVsZW1lbnRJY29ucwogIHByaXZhdGUgaGFuZGxlQ2xpcGJvYXJkID0gaGFuZGxlQ2xpcGJvYXJkCgogIHByaXZhdGUgZ2VuZXJhdGVFbGVtZW50SWNvbkNvZGUoc3ltYm9sOiBzdHJpbmcpIHsKICAgIHJldHVybiBgPGkgY2xhc3M9ImVsLWljb24tJHtzeW1ib2x9IiAvPmAKICB9CgogIHByaXZhdGUgZ2VuZXJhdGVTdmdJY29uQ29kZShzeW1ib2w6IHN0cmluZykgewogICAgcmV0dXJuIGA8c3ZnLWljb24gbmFtZT0iJHtzeW1ib2x9IiAvPmAKICB9Cn0K"},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqCA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/views/dev/icons","sourcesContent":["<template>\n  <div class=\"icons-container\">\n    <aside>\n      <a href=\"https://armour.github.io/vue-typescript-admin-docs/guide/advanced/icon.html\" target=\"_blank\">Add and use </a>\n    </aside>\n    <el-tabs type=\"border-card\">\n      <el-tab-pane label=\"Icons\">\n        <div v-for=\"item of svgIcons\" :key=\"item\" @click=\"handleClipboard(generateSvgIconCode(item), $event)\">\n          <el-tooltip placement=\"top\">\n            <div slot=\"content\">\n              {{ generateSvgIconCode(item) }}\n            </div>\n            <div class=\"icon-item\">\n              <svg-icon :name=\"item\" class=\"disabled\" />\n              <span>{{ item }}</span>\n            </div>\n          </el-tooltip>\n        </div>\n      </el-tab-pane>\n      <el-tab-pane label=\"Element-UI Icons\">\n        <div v-for=\"item of elementIcons\" :key=\"item\" @click=\"handleClipboard(generateElementIconCode(item), $event)\">\n          <el-tooltip placement=\"top\">\n            <div slot=\"content\">\n              {{ generateElementIconCode(item) }}\n            </div>\n            <div class=\"icon-item\">\n              <i :class=\"'el-icon-' + item\" />\n              <span>{{ item }}</span>\n            </div>\n          </el-tooltip>\n        </div>\n      </el-tab-pane>\n    </el-tabs>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { Component, Vue } from 'vue-property-decorator'\nimport { handleClipboard } from '@/utils/clipboard'\nimport elementIcons from './element-icons'\nimport svgIcons from './svg-icons'\n\n@Component({\n  name: 'Icons'\n})\nexport default class extends Vue {\n  private svgIcons = svgIcons\n  private elementIcons = elementIcons\n  private handleClipboard = handleClipboard\n\n  private generateElementIconCode(symbol: string) {\n    return `<i class=\"el-icon-${symbol}\" />`\n  }\n\n  private generateSvgIconCode(symbol: string) {\n    return `<svg-icon name=\"${symbol}\" />`\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.icons-container {\n  margin: 10px 20px 0;\n  overflow: hidden;\n\n  .icon-item {\n    margin: 20px;\n    height: 85px;\n    text-align: center;\n    width: 100px;\n    float: left;\n    font-size: 30px;\n    color: #24292e;\n    cursor: pointer;\n  }\n\n  span {\n    display: block;\n    font-size: 16px;\n    margin-top: 10px;\n  }\n\n  .disabled {\n    pointer-events: none;\n  }\n}\n</style>\n"]}]}