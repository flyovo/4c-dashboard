{"remainingRequest":"/Users/id-repair/Documents/SEOL/4c-dashboard/node_modules/babel-loader/lib/index.js!/Users/id-repair/Documents/SEOL/4c-dashboard/node_modules/ts-loader/index.js??ref--14-2!/Users/id-repair/Documents/SEOL/4c-dashboard/node_modules/eslint-loader/index.js??ref--13-0!/Users/id-repair/Documents/SEOL/4c-dashboard/src/store/modules/user/store.ts","dependencies":[{"path":"/Users/id-repair/Documents/SEOL/4c-dashboard/src/store/modules/user/store.ts","mtime":1618208154000},{"path":"/Users/id-repair/Documents/SEOL/4c-dashboard/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/id-repair/Documents/SEOL/4c-dashboard/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/id-repair/Documents/SEOL/4c-dashboard/node_modules/ts-loader/index.js","mtime":499162500000},{"path":"/Users/id-repair/Documents/SEOL/4c-dashboard/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/id-repair/Documents/SEOL/4c-dashboard/node_modules/eslint-loader/index.js??ref--13-0!/Users/id-repair/Documents/SEOL/4c-dashboard/src/store/modules/user/store.ts"],"names":[],"mappings":"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","sourcesContent":["import store from '@/store'\nimport { login, checkLogin, logout, getUserList, getDashboardUser } from '@/api/user-api'\nimport { DEFAULT_USER_SEARCH_ITEM, DEFAULT_DASH_USER_ITEM } from './constants'\nimport { UserStoreState } from './type'\nimport { VuexModule, Module, Action, Mutation, getModule } from 'vuex-module-decorators'\nimport { cloneDeep } from 'lodash'\n@Module({ dynamic: true, store, name: 'userStore', namespaced: true })\nclass UserStore extends VuexModule implements UserStoreState {\n  public roles = []\n  public routerList = []\n  public userList = []\n  public userListCount = 0\n  public userSearchItem = cloneDeep(DEFAULT_USER_SEARCH_ITEM)\n  public dashboardUserItem = cloneDeep(DEFAULT_DASH_USER_ITEM)\n  @Mutation\n  private SET_CHANGE_VALUE(payload: { key: string; value: any }) {\n    const { key, value } = payload\n    if (Object.prototype.hasOwnProperty.call(this, key)) {\n      ;(this as any)[key] = value\n    }\n  }\n  @Mutation\n  private SET_USER_LIST_SCROLL(userList: any) {\n    userList.forEach((item: any) => {\n      this.userList.push(item)\n    })\n  }\n\n  @Action({ rawError: true })\n  public async Login(userInfo: { userId: string; userPwd: string }) {\n    let { userId, userPwd } = userInfo\n    userId = userId.trim()\n    const { resultCd } = await login({ userId, userPwd })\n\n    if (resultCd === 200) {\n      localStorage.setItem('userId', userId)\n      return new Promise(resolve => {\n        resolve(200)\n      })\n    }\n  }\n\n  @Action({ rawError: true })\n  public async CheckLogin(payload: any) {\n    const { resultCd } = await checkLogin(payload)\n    if (resultCd === 200) {\n      const readyRouterList = []\n      this.SET_CHANGE_VALUE({ key: 'routerList', value: Object.freeze(readyRouterList) })\n      this.SET_CHANGE_VALUE({ key: 'roles', value: ['admin'] })\n    }\n  }\n\n  @Action({ rawError: true })\n  public async Logout() {\n    // await logout({ title: '로그아웃' })\n    localStorage.removeItem('token')\n  }\n\n  @Action({ rawError: true })\n  public ChangeValue(payload: { key: string; value: any }) {\n    this.SET_CHANGE_VALUE(payload)\n  }\n}\n\nexport const UserStoreModule = getModule(UserStore)\n"],"sourceRoot":""}]}