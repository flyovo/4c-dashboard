{"remainingRequest":"/Users/id-repair/Documents/SEOL/4c-dashboard/node_modules/babel-loader/lib/index.js!/Users/id-repair/Documents/SEOL/4c-dashboard/node_modules/ts-loader/index.js??ref--14-2!/Users/id-repair/Documents/SEOL/4c-dashboard/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/id-repair/Documents/SEOL/4c-dashboard/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/id-repair/Documents/SEOL/4c-dashboard/src/layout/components/TagsView/index.vue?vue&type=script&lang=ts&","dependencies":[{"path":"/Users/id-repair/Documents/SEOL/4c-dashboard/src/layout/components/TagsView/index.vue","mtime":1618208154000},{"path":"/Users/id-repair/Documents/SEOL/4c-dashboard/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/id-repair/Documents/SEOL/4c-dashboard/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/id-repair/Documents/SEOL/4c-dashboard/node_modules/ts-loader/index.js","mtime":499162500000},{"path":"/Users/id-repair/Documents/SEOL/4c-dashboard/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/id-repair/Documents/SEOL/4c-dashboard/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/id-repair/Documents/SEOL/4c-dashboard/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/id-repair/Documents/SEOL/4c-dashboard/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/id-repair/Documents/SEOL/4c-dashboard/src/layout/components/TagsView/index.vue?vue&type=script&lang=ts&"],"names":[],"mappings":"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","sourcesContent":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport path from 'path'\nimport { Component, Vue, Watch } from 'vue-property-decorator'\nimport VueRouter, { Route, RouteRecord, RouteConfig } from 'vue-router'\nimport { PermissionModule } from '@/store/modules/permission/store'\nimport { TagsViewModule } from '@/store/modules/tag-view/store'\nimport { TagViewItem } from '@/store/modules/tag-view/type'\nimport ScrollPane from './ScrollPane.vue'\n\n@Component({\n  name: 'TagsView',\n  components: {\n    ScrollPane\n  }\n})\nexport default class extends Vue {\n  private visible: boolean = false\n  private top: number = 0\n  private left: number = 0\n  private selectedTag: TagViewItem = {}\n  private affixTags: TagViewItem[] = []\n\n  get visitedViews() {\n    return TagsViewModule.visitedViews\n  }\n\n  get routes() {\n    return PermissionModule.routes\n  }\n\n  @Watch('$route')\n  private onRouteChange() {\n    this.addTags()\n    this.moveToCurrentTag()\n  }\n\n  @Watch('visible')\n  private onVisibleChange(value: boolean) {\n    if (value) {\n      document.body.addEventListener('click', this.closeMenu)\n    } else {\n      document.body.removeEventListener('click', this.closeMenu)\n    }\n  }\n\n  mounted() {\n    this.initTags()\n    this.addTags()\n  }\n\n  private isActive(route: TagViewItem) {\n    return route.path === this.$route.path\n  }\n\n  private isAffix(tag: TagViewItem) {\n    return tag.meta && tag.meta.affix\n  }\n\n  private filterAffixTags(routes: RouteConfig[], basePath = '/') {\n    let tags: TagViewItem[] = []\n    routes.forEach(route => {\n      if (route.meta && route.meta.affix) {\n        const tagPath = path.resolve(basePath, route.path)\n        tags.push({\n          fullPath: tagPath,\n          path: tagPath,\n          name: route.name,\n          meta: { ...route.meta }\n        })\n      }\n      if (route.children) {\n        const childTags = this.filterAffixTags(route.children, route.path)\n        if (childTags.length >= 1) {\n          tags = [...tags, ...childTags]\n        }\n      }\n    })\n    return tags\n  }\n\n  private initTags() {\n    this.affixTags = this.filterAffixTags(this.routes)\n    for (const tag of this.affixTags) {\n      // Must have tag name\n      if (tag.name) {\n        TagsViewModule.addVisitedView(tag)\n      }\n    }\n  }\n\n  private addTags() {\n    const { name } = this.$route\n    if (name) {\n      TagsViewModule.addView(this.$route)\n    }\n    return false\n  }\n\n  private moveToCurrentTag() {\n    const tags = this.$refs.tag as any[] // TODO: better typescript support for router-link\n    this.$nextTick(() => {\n      for (const tag of tags) {\n        if ((tag.to as TagViewItem).path === this.$route.path) {\n          ;(this.$refs.scrollPane as ScrollPane).moveToTarget(tag as any)\n          // When query is different then update\n          if ((tag.to as TagViewItem).fullPath !== this.$route.fullPath) {\n            TagsViewModule.updateVisitedView(this.$route)\n          }\n          break\n        }\n      }\n    })\n  }\n\n  private refreshSelectedTag(view: TagViewItem) {\n    TagsViewModule.delCachedView(view)\n    const { fullPath } = view\n    this.$nextTick(() => {\n      this.$router.replace({\n        path: '/redirect' + fullPath\n      })\n    })\n  }\n\n  private closeSelectedTag(view: TagViewItem) {\n    TagsViewModule.delView(view)\n    if (this.isActive(view)) {\n      this.toLastView(TagsViewModule.visitedViews, view)\n    }\n  }\n\n  private closeOthersTags() {\n    this.$router.push(this.selectedTag)\n    TagsViewModule.delOthersViews(this.selectedTag)\n    this.moveToCurrentTag()\n  }\n\n  private closeAllTags(view: TagViewItem) {\n    TagsViewModule.delAllViews()\n    if (this.affixTags.some(tag => tag.path === this.$route.path)) {\n      return\n    }\n    this.toLastView(TagsViewModule.visitedViews, view)\n  }\n\n  private toLastView(visitedViews: TagViewItem[], view: TagViewItem) {\n    const latestView = visitedViews.slice(-1)[0]\n    if (latestView) {\n      this.$router.push(latestView)\n    } else {\n      // Default redirect to the home page if there is no tags-view, adjust it if you want\n      if (view.name === 'Dashboard') {\n        // to reload home page\n        this.$router.replace({ path: '/redirect' + view.fullPath })\n      } else {\n        this.$router.push('/')\n      }\n    }\n  }\n\n  private openMenu(tag: TagViewItem, e: MouseEvent) {\n    const menuMinWidth = 105\n    const offsetLeft = this.$el.getBoundingClientRect().left // container margin left\n    const offsetWidth = (this.$el as HTMLElement).offsetWidth // container width\n    const maxLeft = offsetWidth - menuMinWidth // left boundary\n    const left = e.clientX - offsetLeft + 15 // 15: margin right\n    if (left > maxLeft) {\n      this.left = maxLeft\n    } else {\n      this.left = left\n    }\n    this.top = e.clientY\n    this.visible = true\n    this.selectedTag = tag\n  }\n\n  private closeMenu() {\n    this.visible = false\n  }\n}\n"],"sourceRoot":""}]}